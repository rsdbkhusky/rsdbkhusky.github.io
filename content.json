{"meta":{"title":"燃烧的冰块_husky's blog","subtitle":"Thank for your visiting","description":"这是一个个人博客","author":"rsdbk_husky","url":"http://rsdbkhusky.github.io","root":"/"},"pages":[{"title":"友链","date":"un55fin55","updated":"un55fin55","comments":true,"path":"link/index.html","permalink":"http://rsdbkhusky.github.io/link/index.html","excerpt":"","text":""},{"title":"分类","date":"un55fin55","updated":"un55fin55","comments":true,"path":"categories/index.html","permalink":"http://rsdbkhusky.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"un55fin55","updated":"un55fin55","comments":true,"path":"tags/index.html","permalink":"http://rsdbkhusky.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"CAO","slug":"cao","date":"un33fin33","updated":"un66fin66","comments":true,"path":"2029/12/12/cao/","link":"","permalink":"http://rsdbkhusky.github.io/2029/12/12/cao/","excerpt":"","text":"aaa","categories":[],"tags":[]},{"title":"01分数规划","slug":"01分数规划","date":"un44fin44","updated":"un66fin66","comments":true,"path":"2021/09/30/01分数规划/","link":"","permalink":"http://rsdbkhusky.github.io/2021/09/30/01%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/","excerpt":"","text":"P4377 USACO18OPEN Talent Show G12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#include&lt;bits/stdc++.h&gt;using namespace std;const int MAXn = 250;const int MAXW = 1e3;const double MAXfrac = 1e6;const double EPS = 1e-8;template &lt;typename T&gt; inline void read(T &amp;a) &#123; register char c;while (c = getchar(), c &lt; &#x27;0&#x27; || c &gt; &#x27;9&#x27;);register T x(c - &#x27;0&#x27;);while (c = getchar(), c &gt;= &#x27;0&#x27; &amp;&amp; c &lt;= &#x27;9&#x27;) &#123;x = (x &lt;&lt; 1) + (x &lt;&lt; 3) + (c ^ 48);&#125;a = x; &#125;template &lt;typename T, typename ...Argv&gt;inline void read(T &amp;n, Argv &amp;...argv) &#123; read(n), read(argv...);&#125;int n, W, w[MAXn + 10], t[MAXn + 10]; double v[MAXn + 10];double d[MAXW + 10];double calc(double x) &#123; for (int i = 1; i &lt;= n; ++i) &#123; v[i] = (double)t[i] - (double)w[i] * x; &#125; memset(d, 0xc2, sizeof(d)); d[0] = 0; for (int i = 1; i &lt;= n; ++i) &#123; for (int j = W; ~j; --j) &#123; int k = min(j + w[i], W); d[k] = max(d[k], d[j] + v[i]); &#125; &#125; return d[W];&#125;signed main() &#123; read(n, W); for (int i = 1; i &lt;= n; ++i) &#123; read(w[i], t[i]); &#125; double L = 0, R = MAXfrac; while (R - L &gt; EPS) &#123; double mid = (L + R) / 2; if (calc(mid) &gt; 0) &#123; L = mid; &#125; else &#123; R = mid; &#125; &#125; printf(&quot;%d\\n&quot;, int(L * 1000));&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://rsdbkhusky.github.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"信息竞赛","slug":"编程/信息竞赛","permalink":"http://rsdbkhusky.github.io/categories/%E7%BC%96%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%AB%9E%E8%B5%9B/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://rsdbkhusky.github.io/tags/%E7%BC%96%E7%A8%8B/"},{"name":"代码","slug":"代码","permalink":"http://rsdbkhusky.github.io/tags/%E4%BB%A3%E7%A0%81/"},{"name":"模板","slug":"模板","permalink":"http://rsdbkhusky.github.io/tags/%E6%A8%A1%E6%9D%BF/"},{"name":"信息竞赛","slug":"信息竞赛","permalink":"http://rsdbkhusky.github.io/tags/%E4%BF%A1%E6%81%AF%E7%AB%9E%E8%B5%9B/"},{"name":"OI","slug":"OI","permalink":"http://rsdbkhusky.github.io/tags/OI/"},{"name":"算法","slug":"算法","permalink":"http://rsdbkhusky.github.io/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"Ac自动机","slug":"Ac自动机","date":"un33fin33","updated":"un66fin66","comments":true,"path":"2021/07/21/Ac自动机/","link":"","permalink":"http://rsdbkhusky.github.io/2021/07/21/Ac%E8%87%AA%E5%8A%A8%E6%9C%BA/","excerpt":"","text":"P3808 【模板】AC自动机（简单版）P3796 【模板】AC自动机（加强版）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101#include&lt;cstdio&gt;#include&lt;cstring&gt;#include&lt;queue&gt;using namespace std;#define re registerconst int MAXtxtlen = 1e6;const int MAXwrdlen = 70;const int MAXwrdcnt = 150;const int MAXnd = 1e6;int cntnd, son[MAXnd + 10][26], mat[MAXnd + 10];char txt[MAXtxtlen + 10], wrd[MAXwrdcnt + 10][MAXwrdlen + 10];int ltxt, lwrd;int fail[MAXnd + 10], ndidx[MAXwrdcnt + 10];int n;queue&lt;int&gt; q;void clear(queue&lt;int&gt; &amp;q) &#123; queue&lt;int&gt; empty; swap(q, empty);&#125;void Init() &#123; cntnd = ltxt = lwrd = n = 0; memset(son, 0, sizeof(son)); memset(mat, 0, sizeof(mat)); memset(txt, 0, sizeof(txt)); memset(wrd, 0, sizeof(wrd)); memset(fail, 0, sizeof(fail)); memset(ndidx, 0, sizeof(ndidx)); memset(mat, 0, sizeof(mat)); clear(q);&#125;void Insert(char *wrd, int wrdidx) &#123; int cur = 0; for (re int i = 1; i &lt;= lwrd; ++i) &#123; if (son[cur][wrd[i] - 97]) &#123; cur = son[cur][wrd[i] - 97]; &#125; else &#123; cur = son[cur][wrd[i] - 97] = ++cntnd; &#125; &#125; ndidx[wrdidx] = cur;&#125;void GetFail() &#123; for (re int i = 0; i &lt; 26; ++i) &#123; if (son[0][i]) &#123; q.push(son[0][i]); &#125; &#125; while (!q.empty()) &#123; int cur = q.front(); q.pop(); for (re int i = 0; i &lt; 26; ++i) &#123; if (son[cur][i]) &#123; fail[son[cur][i]] = son[fail[cur]][i]; q.push(son[cur][i]); &#125; else &#123; son[cur][i] = son[fail[cur]][i]; &#125; &#125; &#125;&#125;void Work() &#123; int cur = 0; for (re int i = 1; i &lt;= ltxt; ++i) &#123; cur = son[cur][txt[i] - 97]; int x = cur; while (x) &#123; ++mat[x]; x = fail[x]; &#125; &#125;&#125;int main() &#123; while (true) &#123; Init(); scanf(&quot;%d&quot;, &amp;n); if (!n) break; for (re int i = 1; i &lt;= n; ++i) &#123; scanf(&quot;%s&quot;, wrd[i] + 1); lwrd = strlen(wrd[i] + 1); Insert(wrd[i], i); &#125; GetFail(); scanf(&quot;%s&quot;, txt + 1); ltxt = strlen(txt + 1); Work(); int mx = 0; for (re int i = 1; i &lt;= n; ++i) &#123; if (mat[ndidx[i]] &gt; mx) &#123; mx = mat[ndidx[i]]; &#125; &#125; printf(&quot;%d\\n&quot;, mx); for (re int i = 1; i &lt;= n; ++i) &#123; if (mat[ndidx[i]] == mx) &#123; printf(&quot;%s\\n&quot;, wrd[i] + 1); &#125; &#125; &#125; &#125; 每个字符串只算一次的 Work 函数。12345678910111213int Work() &#123; int j = 0, ans = 0; for (re int i = 1; i &lt;= ltxt; ++i) &#123; j = son[j][txt[i] - 97]; int k = j; while (cnt[k] &amp;&amp; k) &#123; ans += cnt[k]; cnt[k] = 0; k = fail[k]; &#125; &#125; return ans;&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://rsdbkhusky.github.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"信息竞赛","slug":"编程/信息竞赛","permalink":"http://rsdbkhusky.github.io/categories/%E7%BC%96%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%AB%9E%E8%B5%9B/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://rsdbkhusky.github.io/tags/%E7%BC%96%E7%A8%8B/"},{"name":"代码","slug":"代码","permalink":"http://rsdbkhusky.github.io/tags/%E4%BB%A3%E7%A0%81/"},{"name":"模板","slug":"模板","permalink":"http://rsdbkhusky.github.io/tags/%E6%A8%A1%E6%9D%BF/"},{"name":"信息竞赛","slug":"信息竞赛","permalink":"http://rsdbkhusky.github.io/tags/%E4%BF%A1%E6%81%AF%E7%AB%9E%E8%B5%9B/"},{"name":"OI","slug":"OI","permalink":"http://rsdbkhusky.github.io/tags/OI/"},{"name":"算法","slug":"算法","permalink":"http://rsdbkhusky.github.io/tags/%E7%AE%97%E6%B3%95/"},{"name":"数据结构","slug":"数据结构","permalink":"http://rsdbkhusky.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"字符串","slug":"字符串","permalink":"http://rsdbkhusky.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"}]},{"title":"01背包","slug":"01背包","date":"un11fin11","updated":"un66fin66","comments":true,"path":"2021/06/07/01背包/","link":"","permalink":"http://rsdbkhusky.github.io/2021/06/07/01%E8%83%8C%E5%8C%85/","excerpt":"","text":"P1048 [NOIP2005 普及组] 采药123456789101112131415161718192021222324252627282930313233343536373839#include&lt;bits/stdc++.h&gt;using namespace std;typedef long long LL;const LL MAXn = 10000;const LL MAXW = 10000000;LL n, W;LL d[MAXW + 10];inline LL read() &#123; register char c; while (c = getchar(), c &lt; &#x27;0&#x27; || c &gt;&#x27;9&#x27;); register LL x(c - &#x27;0&#x27;); while (c = getchar(), c &gt;= &#x27;0&#x27; &amp;&amp; c &lt;= &#x27;9&#x27;) &#123; x = x * 10 + c - &#x27;0&#x27;; &#125; return x;&#125;inline LL max(LL a, LL b) &#123; return a &gt; b ? a : b;&#125;int main() &#123; W = read(); n = read(); LL w, v; for (LL i = 0; i &lt; n; i++) &#123; w = read(); v = read(); for (LL i = W; i &gt;= w; i--) &#123; d[i] = max(d[i], d[i - w] + v); &#125; &#125; printf(&quot;%lld&quot;, d[W]);&#125;","categories":[{"name":"编程","slug":"编程","permalink":"http://rsdbkhusky.github.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"信息竞赛","slug":"编程/信息竞赛","permalink":"http://rsdbkhusky.github.io/categories/%E7%BC%96%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%AB%9E%E8%B5%9B/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://rsdbkhusky.github.io/tags/%E7%BC%96%E7%A8%8B/"},{"name":"代码","slug":"代码","permalink":"http://rsdbkhusky.github.io/tags/%E4%BB%A3%E7%A0%81/"},{"name":"模板","slug":"模板","permalink":"http://rsdbkhusky.github.io/tags/%E6%A8%A1%E6%9D%BF/"},{"name":"信息竞赛","slug":"信息竞赛","permalink":"http://rsdbkhusky.github.io/tags/%E4%BF%A1%E6%81%AF%E7%AB%9E%E8%B5%9B/"},{"name":"OI","slug":"OI","permalink":"http://rsdbkhusky.github.io/tags/OI/"},{"name":"算法","slug":"算法","permalink":"http://rsdbkhusky.github.io/tags/%E7%AE%97%E6%B3%95/"},{"name":"DP","slug":"DP","permalink":"http://rsdbkhusky.github.io/tags/DP/"}]}],"categories":[{"name":"编程","slug":"编程","permalink":"http://rsdbkhusky.github.io/categories/%E7%BC%96%E7%A8%8B/"},{"name":"信息竞赛","slug":"编程/信息竞赛","permalink":"http://rsdbkhusky.github.io/categories/%E7%BC%96%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%AB%9E%E8%B5%9B/"}],"tags":[{"name":"编程","slug":"编程","permalink":"http://rsdbkhusky.github.io/tags/%E7%BC%96%E7%A8%8B/"},{"name":"代码","slug":"代码","permalink":"http://rsdbkhusky.github.io/tags/%E4%BB%A3%E7%A0%81/"},{"name":"模板","slug":"模板","permalink":"http://rsdbkhusky.github.io/tags/%E6%A8%A1%E6%9D%BF/"},{"name":"信息竞赛","slug":"信息竞赛","permalink":"http://rsdbkhusky.github.io/tags/%E4%BF%A1%E6%81%AF%E7%AB%9E%E8%B5%9B/"},{"name":"OI","slug":"OI","permalink":"http://rsdbkhusky.github.io/tags/OI/"},{"name":"算法","slug":"算法","permalink":"http://rsdbkhusky.github.io/tags/%E7%AE%97%E6%B3%95/"},{"name":"数据结构","slug":"数据结构","permalink":"http://rsdbkhusky.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"name":"字符串","slug":"字符串","permalink":"http://rsdbkhusky.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"},{"name":"DP","slug":"DP","permalink":"http://rsdbkhusky.github.io/tags/DP/"}]}