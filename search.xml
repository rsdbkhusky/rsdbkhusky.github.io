<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CAO</title>
      <link href="/2029/12/12/cao/"/>
      <url>/2029/12/12/cao/</url>
      
        <content type="html"><![CDATA[<p>aaa</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>01分数规划</title>
      <link href="/2021/09/30/01%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/"/>
      <url>/2021/09/30/01%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h2 id="P4377-USACO18OPEN-Talent-Show-G"><a href="#P4377-USACO18OPEN-Talent-Show-G" class="headerlink" title="P4377 USACO18OPEN Talent Show G"></a><a href="https://www.luogu.com.cn/problem/P4377">P4377 USACO18OPEN Talent Show G</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">250</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXW = <span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> MAXfrac = <span class="number">1e6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> EPS = <span class="number">1e-8</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, W, w[MAXn + <span class="number">10</span>], t[MAXn + <span class="number">10</span>]; <span class="keyword">double</span> v[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">double</span> d[MAXW + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">calc</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">v[i] = (<span class="keyword">double</span>)t[i] - (<span class="keyword">double</span>)w[i] * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">0xc2</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(d));</span><br><span class="line">d[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = W; ~j; --j) &#123;</span><br><span class="line"><span class="keyword">int</span> k = <span class="built_in">min</span>(j + w[i], W);</span><br><span class="line">d[k] = <span class="built_in">max</span>(d[k], d[j] + v[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> d[W];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n, W);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(w[i], t[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> L = <span class="number">0</span>, R = MAXfrac;</span><br><span class="line"><span class="keyword">while</span> (R - L &gt; EPS) &#123;</span><br><span class="line"><span class="keyword">double</span> mid = (L + R) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">calc</span>(mid) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">L = mid;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">R = mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in"><span class="keyword">int</span></span>(L * <span class="number">1000</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 模板 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ac自动机</title>
      <link href="/2021/07/21/Ac%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
      <url>/2021/07/21/Ac%E8%87%AA%E5%8A%A8%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="P3808-【模板】AC自动机（简单版）"><a href="#P3808-【模板】AC自动机（简单版）" class="headerlink" title="P3808 【模板】AC自动机（简单版）"></a><a href="https://www.luogu.com.cn/problem/P3808">P3808 【模板】AC自动机（简单版）</a></h2><h2 id="P3796-【模板】AC自动机（加强版）"><a href="#P3796-【模板】AC自动机（加强版）" class="headerlink" title="P3796 【模板】AC自动机（加强版）"></a><a href="https://www.luogu.com.cn/problem/P3796">P3796 【模板】AC自动机（加强版）</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXtxtlen = <span class="number">1e6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXwrdlen = <span class="number">70</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXwrdcnt = <span class="number">150</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXnd = <span class="number">1e6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cntnd, son[MAXnd + <span class="number">10</span>][<span class="number">26</span>], mat[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> txt[MAXtxtlen + <span class="number">10</span>], wrd[MAXwrdcnt + <span class="number">10</span>][MAXwrdlen + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> ltxt, lwrd;</span><br><span class="line"><span class="keyword">int</span> fail[MAXnd + <span class="number">10</span>], ndidx[MAXwrdcnt + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">(queue&lt;<span class="keyword">int</span>&gt; &amp;q)</span> </span>&#123;</span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; empty;</span><br><span class="line"><span class="built_in">swap</span>(q, empty);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cntnd = ltxt = lwrd = n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(son, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(son));</span><br><span class="line"><span class="built_in">memset</span>(mat, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(mat));</span><br><span class="line"><span class="built_in">memset</span>(txt, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(txt));</span><br><span class="line"><span class="built_in">memset</span>(wrd, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(wrd));</span><br><span class="line"><span class="built_in">memset</span>(fail, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(fail));</span><br><span class="line"><span class="built_in">memset</span>(ndidx, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(ndidx));</span><br><span class="line"><span class="built_in">memset</span>(mat, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(mat));</span><br><span class="line"><span class="built_in">clear</span>(q);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> *wrd, <span class="keyword">int</span> wrdidx)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> cur = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lwrd; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (son[cur][wrd[i] - <span class="number">97</span>]) &#123;</span><br><span class="line">cur = son[cur][wrd[i] - <span class="number">97</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">cur = son[cur][wrd[i] - <span class="number">97</span>] = ++cntnd;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ndidx[wrdidx] = cur;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetFail</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (son[<span class="number">0</span>][i]) &#123;</span><br><span class="line">q.<span class="built_in">push</span>(son[<span class="number">0</span>][i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line"><span class="keyword">int</span> cur = q.<span class="built_in">front</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (son[cur][i]) &#123;</span><br><span class="line">fail[son[cur][i]] = son[fail[cur]][i];</span><br><span class="line">q.<span class="built_in">push</span>(son[cur][i]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">son[cur][i] = son[fail[cur]][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Work</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> cur = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= ltxt; ++i) &#123;</span><br><span class="line">cur = son[cur][txt[i] - <span class="number">97</span>];</span><br><span class="line"><span class="keyword">int</span> x = cur;</span><br><span class="line"><span class="keyword">while</span> (x) &#123;</span><br><span class="line">++mat[x];</span><br><span class="line">x = fail[x];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="built_in">Init</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">if</span> (!n) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, wrd[i] + <span class="number">1</span>);</span><br><span class="line">lwrd = <span class="built_in">strlen</span>(wrd[i] + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">Insert</span>(wrd[i], i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">GetFail</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, txt + <span class="number">1</span>);</span><br><span class="line">ltxt = <span class="built_in">strlen</span>(txt + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">Work</span>();</span><br><span class="line"><span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (mat[ndidx[i]] &gt; mx) &#123;</span><br><span class="line">mx = mat[ndidx[i]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, mx);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (mat[ndidx[i]] == mx) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, wrd[i] + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每个字符串只算一次的 <code>Work</code> 函数。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Work</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= ltxt; ++i) &#123;</span><br><span class="line">j = son[j][txt[i] - <span class="number">97</span>];</span><br><span class="line"><span class="keyword">int</span> k = j;</span><br><span class="line"><span class="keyword">while</span> (cnt[k] &amp;&amp; k) &#123;</span><br><span class="line">ans += cnt[k];</span><br><span class="line">cnt[k] = <span class="number">0</span>;</span><br><span class="line">k = fail[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 模板 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01背包</title>
      <link href="/2021/06/07/01%E8%83%8C%E5%8C%85/"/>
      <url>/2021/06/07/01%E8%83%8C%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h2 id="P1048-NOIP2005-普及组-采药"><a href="#P1048-NOIP2005-普及组-采药" class="headerlink" title="P1048 [NOIP2005 普及组] 采药"></a><a href="https://www.luogu.com.cn/problem/P1048">P1048 [NOIP2005 普及组] 采药</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> LL MAXn = <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">const</span> LL MAXW = <span class="number">10000000</span>;</span><br><span class="line"></span><br><span class="line">LL n, W;</span><br><span class="line">LL d[MAXW + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">register</span> LL <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">max</span><span class="params">(LL a, LL b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">W = <span class="built_in">read</span>();</span><br><span class="line">n = <span class="built_in">read</span>();</span><br><span class="line">LL w, v;</span><br><span class="line"><span class="keyword">for</span> (LL i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">w = <span class="built_in">read</span>();</span><br><span class="line">v = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span> (LL i = W; i &gt;= w; i--) &#123;</span><br><span class="line">d[i] = <span class="built_in">max</span>(d[i], d[i - w] + v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, d[W]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 模板 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
