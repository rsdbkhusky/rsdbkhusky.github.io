<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/12/10/hello-world/"/>
      <url>/2021/12/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding="application/x-tex">\LaTeX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8988em;vertical-align:-0.2155em;"></span><span class="mord text"><span class="mord textrm">L</span><span class="mspace" style="margin-right:-0.36em;"></span><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6833em;"><span style="top:-2.905em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord"><span class="mord textrm mtight sizing reset-size6 size3">A</span></span></span></span></span></span><span class="mspace" style="margin-right:-0.15em;"></span><span class="mord text"><span class="mord textrm">T</span><span class="mspace" style="margin-right:-0.1667em;"></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4678em;"><span style="top:-2.7845em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord textrm">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2155em;"><span></span></span></span></span><span class="mspace" style="margin-right:-0.125em;"></span><span class="mord textrm">X</span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>i</mi><mo>≤</mo><mi>n</mi></mrow></munderover><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\sum\limits_{i=1}^{i\le n}a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0955em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8178em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3062em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p><img src="https://figurebed-1306986731.file.myqcloud.com/blog/img/self/Snipaste_2021-08-24_18-02-01.jpg" alt="image"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>二维凸包</title>
      <link href="/2021/10/07/%E4%BA%8C%E7%BB%B4%E5%87%B8%E5%8C%85/index/"/>
      <url>/2021/10/07/%E4%BA%8C%E7%BB%B4%E5%87%B8%E5%8C%85/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P2742-USACO5-1-圈奶牛Fencing-the-Cows-【模板】二维凸包"><a href="https://www.luogu.com.cn/problem/P2742">P2742 USACO5.1 圈奶牛Fencing the Cows /【模板】二维凸包</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line"><span class="keyword">double</span> x, y;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> Point sec) <span class="keyword">const</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (x == sec.x) &#123;</span><br><span class="line"><span class="keyword">return</span> y &lt; sec.y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x &lt; sec.x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">cp</span><span class="params">(Point a1, Point a2, Point b1, Point b2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (a2.x - a1.x) * (b2.y - b1.y) - (b2.x - b1.x) * (a2.y - a1.y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">dist</span><span class="params">(Point a, Point b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n; Point point[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> top, stk[MAXn + <span class="number">10</span>]; bitset&lt;MAXn + 10&gt; instk;</span><br><span class="line"><span class="keyword">double</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf&quot;</span>, &amp;point[i].x, &amp;point[i].y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(point + <span class="number">1</span>, point + <span class="number">1</span> + n);</span><br><span class="line">stk[++top] = <span class="number">1</span>;</span><br><span class="line">instk[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">while</span> (top &gt; <span class="number">1</span> &amp;&amp; <span class="built_in">cp</span>(point[stk[top - <span class="number">1</span>]], point[stk[top]], point[stk[top]], point[i]) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">instk[stk[top--]] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">stk[++top] = i;</span><br><span class="line">instk[i] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> tmptop = top - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i; --i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!instk[i]) &#123;</span><br><span class="line"><span class="keyword">while</span> (top - tmptop &gt; <span class="number">1</span> &amp;&amp; <span class="built_in">cp</span>(point[stk[top - <span class="number">1</span>]], point[stk[top]], point[stk[top]], point[i]) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">instk[stk[top--]] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">stk[++top] = i;</span><br><span class="line">instk[i] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (top - tmptop &gt; <span class="number">1</span> &amp;&amp; <span class="built_in">cp</span>(point[stk[top - <span class="number">1</span>]], point[stk[top]], point[stk[top]], point[<span class="number">1</span>]) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">instk[stk[top--]] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; top; ++i) &#123;</span><br><span class="line">ans += <span class="built_in">dist</span>(point[stk[i]], point[stk[i + <span class="number">1</span>]]);</span><br><span class="line">&#125;</span><br><span class="line">ans += <span class="built_in">dist</span>(point[stk[top]], point[stk[<span class="number">1</span>]]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欧拉路径</title>
      <link href="/2021/10/06/%E6%AC%A7%E6%8B%89%E8%B7%AF%E5%BE%84/index/"/>
      <url>/2021/10/06/%E6%AC%A7%E6%8B%89%E8%B7%AF%E5%BE%84/index/</url>
      
        <content type="html"><![CDATA[<h4 id="1-无向图欧拉路径">1. 无向图欧拉路径</h4><h4 id="P2731-USACO3-3-骑马修栅栏-Riding-the-Fences"><a href="https://www.luogu.com.cn/problem/P2731">P2731 [USACO3.3]骑马修栅栏 Riding the Fences</a></h4><p>之所以要用邻接矩阵是因为一条边只能走一次，走过一条边这条边的另一个方向也不能走了，邻接矩阵便于删除走过的边的另一个方向。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">5e2</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = <span class="number">1024</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, source = <span class="number">1</span>, edge[MAXn + <span class="number">10</span>][MAXn + <span class="number">10</span>], deg[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> top, stk[MAXm * <span class="number">2</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (edge[cur][i]) &#123;</span><br><span class="line">--edge[cur][i]; --edge[i][cur];</span><br><span class="line"><span class="built_in">Dfs</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">stk[++top] = cur;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, u, v; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(u, v);</span><br><span class="line">++edge[u][v]; ++edge[v][u];</span><br><span class="line">++deg[u]; ++deg[v];</span><br><span class="line">n = <span class="built_in">max</span>(n, <span class="built_in">max</span>(u, v));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (deg[i] &amp; <span class="number">1</span>) &#123;</span><br><span class="line">source = i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Dfs</span>(source);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = top; i; --i) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, stk[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>复杂度要求在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 以内怎么办，听别人说要用什么当前弧优化，留坑待补……</p><h4 id="2-有向图欧拉路径">2. 有向图欧拉路径</h4><h4 id="P7771-【模板】欧拉路径"><a href="https://www.luogu.com.cn/problem/P7771">P7771 【模板】欧拉路径</a></h4><p>有向图因为不需要删除边的另一个方向就用邻接表就行了，代码就不放了。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01分数规划</title>
      <link href="/2021/09/30/01%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/index/"/>
      <url>/2021/09/30/01%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P4377-USACO18OPEN-Talent-Show-G"><a href="https://www.luogu.com.cn/problem/P4377">P4377 USACO18OPEN Talent Show G</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">250</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXW = <span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> MAXfrac = <span class="number">1e6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> EPS = <span class="number">1e-8</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, W, w[MAXn + <span class="number">10</span>], t[MAXn + <span class="number">10</span>]; <span class="keyword">double</span> v[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">double</span> d[MAXW + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">calc</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">v[i] = (<span class="keyword">double</span>)t[i] - (<span class="keyword">double</span>)w[i] * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">0xc2</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(d));</span><br><span class="line">d[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = W; ~j; --j) &#123;</span><br><span class="line"><span class="keyword">int</span> k = <span class="built_in">min</span>(j + w[i], W);</span><br><span class="line">d[k] = <span class="built_in">max</span>(d[k], d[j] + v[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> d[W];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n, W);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(w[i], t[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> L = <span class="number">0</span>, R = MAXfrac;</span><br><span class="line"><span class="keyword">while</span> (R - L &gt; EPS) &#123;</span><br><span class="line"><span class="keyword">double</span> mid = (L + R) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">calc</span>(mid) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">L = mid;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">R = mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in"><span class="keyword">int</span></span>(L * <span class="number">1000</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>容斥原理</title>
      <link href="/2021/09/30/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/index/"/>
      <url>/2021/09/30/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1450-HAOI2008-硬币购物"><a href="https://www.luogu.com.cn/problem/P1450">P1450 HAOI2008 硬币购物</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn2 = <span class="number">16</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXW = <span class="number">1e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, n = <span class="number">4</span>, W, w[MAXn + <span class="number">10</span>], cnt[MAXn + <span class="number">10</span>], d[MAXW + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(w[<span class="number">1</span>]), <span class="built_in">read</span>(w[<span class="number">2</span>]), <span class="built_in">read</span>(w[<span class="number">3</span>]), <span class="built_in">read</span>(w[<span class="number">4</span>]), <span class="built_in">read</span>(T);</span><br><span class="line">d[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = w[i]; j &lt;= MAXW; ++j) &#123;</span><br><span class="line">d[j] += d[j - w[i]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (T--) &#123;</span><br><span class="line"><span class="built_in">read</span>(cnt[<span class="number">1</span>]), <span class="built_in">read</span>(cnt[<span class="number">2</span>]), <span class="built_in">read</span>(cnt[<span class="number">3</span>]), <span class="built_in">read</span>(cnt[<span class="number">4</span>]), <span class="built_in">read</span>(W);</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAXn2; ++i) &#123;</span><br><span class="line"><span class="keyword">int</span> p = W;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line"><span class="keyword">if</span> ((i &gt;&gt; (j - <span class="number">1</span>)) &amp; <span class="number">1</span>) &#123;</span><br><span class="line">p -= w[j] * (cnt[j] + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p &lt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans += __builtin_popcount(i) &amp; <span class="number">1</span> ? -d[p] : d[p];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符串最小表示法</title>
      <link href="/2021/09/30/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/index/"/>
      <url>/2021/09/30/%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%80%E5%B0%8F%E8%A1%A8%E7%A4%BA%E6%B3%95/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1368-【模板】最小表示法"><a href="https://www.luogu.com.cn/problem/P1368">P1368 【模板】最小表示法</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> std::min;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">3e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, a[MAXn * <span class="number">2</span> + <span class="number">10</span>], begin;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]); a[i + n] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">2</span>, k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (i &gt; n || j &gt; n) &#123;</span><br><span class="line">begin = <span class="built_in">min</span>(i, j);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (a[i + k] == a[j + k] &amp;&amp; k &lt; n) ++k;</span><br><span class="line"><span class="keyword">if</span> (k == n) &#123;</span><br><span class="line">begin = i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a[i + k] &gt; a[j + k]) &#123;</span><br><span class="line">i = i + k + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (i == j) ++i;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">j = j + k + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (i == j) ++j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[begin + i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异或高斯消元</title>
      <link href="/2021/09/30/%E5%BC%82%E6%88%96%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/index/"/>
      <url>/2021/09/30/%E5%BC%82%E6%88%96%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P2447-SDOI2010-外星千足虫"><a href="https://www.luogu.com.cn/problem/P2447">P2447 SDOI2010 外星千足虫</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">2e3</span>; <span class="comment">// 本代码中n和m和题面中的是反的，代码中n代表矩阵的行数，m代表列数</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = <span class="number">1e3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, ans;</span><br><span class="line">bitset&lt;MAXm + 10&gt; a[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line"><span class="keyword">char</span> tmp;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m + <span class="number">1</span>; ++j) &#123;</span><br><span class="line">cin &gt;&gt; tmp;</span><br><span class="line">a[i][j] = tmp - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> row = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">1</span>; col &lt;= m; ++col) &#123;</span><br><span class="line"><span class="keyword">int</span> maxer = row;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = row + <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[maxer][col] &lt; a[i][col]) &#123;</span><br><span class="line">maxer = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!a[maxer][col]) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Cannot Determine\n&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans = <span class="built_in">max</span>(ans, maxer);</span><br><span class="line"><span class="built_in">swap</span>(a[row], a[maxer]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == row) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (a[i][col]) &#123;</span><br><span class="line">a[i] = a[i] ^ a[row];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">++row;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i][m + <span class="number">1</span>]) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;?y7M#\n&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Earth\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>同余最短路</title>
      <link href="/2021/09/30/%E5%90%8C%E4%BD%99%E6%9C%80%E7%9F%AD%E8%B7%AF/index/"/>
      <url>/2021/09/30/%E5%90%8C%E4%BD%99%E6%9C%80%E7%9F%AD%E8%B7%AF/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3403-跳楼机"><a href="https://www.luogu.com.cn/problem/P3403">P3403 跳楼机</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXnd = <span class="number">5e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXeg = MAXnd * MAXn;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> head[MAXnd + <span class="number">10</span>], cntnex, nex[MAXeg + <span class="number">10</span>], to[MAXeg + <span class="number">10</span>], wei[MAXeg + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">nex[++cntnex] = head[u];</span><br><span class="line">head[u] = cntnex;</span><br><span class="line">to[cntnex] = v;</span><br><span class="line">wei[cntnex] = w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[MAXnd + <span class="number">10</span>]; <span class="keyword">int</span> dis[MAXnd + <span class="number">10</span>];</span><br><span class="line">priority_queue&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> root, <span class="keyword">int</span> rootdis)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dis, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line">    dis[root] = rootdis;</span><br><span class="line">    q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(<span class="number">0</span>, root));</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="keyword">int</span> cur = q.<span class="built_in">top</span>().second; q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (vis[cur]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[cur] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (dis[to[i]] &gt; dis[cur] + wei[i]) &#123;</span><br><span class="line">                dis[to[i]] = dis[cur] + wei[i];</span><br><span class="line">                q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(-dis[to[i]], to[i]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, l, r, a[MAXn + <span class="number">10</span>], ans;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n, l, r);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a[<span class="number">1</span>]; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= n; ++j) &#123;</span><br><span class="line"><span class="built_in">Insert</span>(i, (i + a[j]) % a[<span class="number">1</span>], a[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Dijkstra</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a[<span class="number">1</span>]; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (dis[i] &gt; r) <span class="keyword">continue</span>;</span><br><span class="line">ans += (r - dis[i]) / a[<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (dis[i] &gt; l - <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">ans -= (l - <span class="number">1</span> - dis[i]) / a[<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树形背包</title>
      <link href="/2021/09/30/%E6%A0%91%E5%BD%A2%E8%83%8C%E5%8C%85/index/"/>
      <url>/2021/09/30/%E6%A0%91%E5%BD%A2%E8%83%8C%E5%8C%85/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3177-HAOI2015-树上染色"><a href="https://www.luogu.com.cn/problem/P3177">P3177 HAOI2015 树上染色</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">2e3</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = MAXn;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXk = <span class="number">2e3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> head[MAXm + <span class="number">10</span>], cntnex, nex[MAXm * <span class="number">2</span> + <span class="number">10</span>], to[MAXm * <span class="number">2</span> + <span class="number">10</span>], wei[MAXm * <span class="number">2</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">nex[++cntnex] = head[u];</span><br><span class="line">head[u] = cntnex;</span><br><span class="line">to[cntnex] = v;</span><br><span class="line">wei[cntnex] = w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, fa[MAXn + <span class="number">10</span>], siz[MAXn + <span class="number">10</span>], d[MAXn + <span class="number">10</span>][MAXk + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">siz[cur] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (to[i] == fa[cur]) <span class="keyword">continue</span>;</span><br><span class="line">fa[to[i]] = cur;</span><br><span class="line"><span class="built_in">Dfs</span>(to[i]);</span><br><span class="line">siz[cur] += siz[to[i]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DfsDp</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">d[cur][<span class="number">0</span>] = d[cur][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (to[i] == fa[cur]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">DfsDp</span>(to[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="built_in">min</span>(m, siz[cur]); ~j; --j) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= <span class="built_in">min</span>(j, siz[to[i]]); ++k) &#123;</span><br><span class="line">d[cur][j] = <span class="built_in">max</span>(d[cur][j], d[cur][j - k] + d[to[i]][k] + wei[i] * (k * (m - k) + (siz[to[i]] - k) * (n - siz[to[i]] - (m - k))));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">0xc0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(d));</span><br><span class="line"><span class="built_in">read</span>(n, m);</span><br><span class="line"><span class="keyword">if</span> (n &lt; m * <span class="number">2</span>) &#123;</span><br><span class="line">m = n - m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, u, v, w; i &lt; n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(u, v, w);</span><br><span class="line"><span class="built_in">Insert</span>(u, v, w); <span class="built_in">Insert</span>(v, u, w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Dfs</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">DfsDp</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, d[<span class="number">1</span>][m]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> DP </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>带权并查集</title>
      <link href="/2021/09/30/%E5%B8%A6%E6%9D%83%E5%B9%B6%E6%9F%A5%E9%9B%86/index/"/>
      <url>/2021/09/30/%E5%B8%A6%E6%9D%83%E5%B9%B6%E6%9F%A5%E9%9B%86/index/</url>
      
        <content type="html"><![CDATA[<ul><li>带权并查集的适用前提：维护的关系具有可传递性</li><li>带权并查集操作需保证的条件：执行了 Find 函数或 Merge 函数的节点的所有信息一定会被更新</li></ul><h2 id="P2024-NOI2001-食物链"><a href="https://www.luogu.com.cn/problem/P2024">P2024 NOI2001 食物链</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">5e4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = <span class="number">1e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fa[MAXn + <span class="number">10</span>], dis[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">(<span class="keyword">int</span> top)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= top; ++i) &#123;</span><br><span class="line">fa[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(dis, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (fa[x] == x) &#123;</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> lastfa = fa[x];</span><br><span class="line">fa[x] = <span class="built_in">Find</span>(fa[x]);</span><br><span class="line">dis[x] = dis[x] + dis[lastfa];</span><br><span class="line"><span class="keyword">return</span> fa[x];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> dist)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ancx = <span class="built_in">Find</span>(x), ancy = <span class="built_in">Find</span>(y);</span><br><span class="line">fa[ancx] = ancy;</span><br><span class="line">dis[ancx] = -dis[x] + dist + dis[y];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ancx = <span class="built_in">Find</span>(x), ancy = <span class="built_in">Find</span>(y);</span><br><span class="line"><span class="keyword">if</span> (ancx != ancy) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in"><span class="keyword">return</span></span> ((dis[x] - dis[y]) % <span class="number">3</span> + <span class="number">3</span>) % <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, cntfalse;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>); cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>); cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">Init</span>(n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, opt, x, y; i &lt;= m; ++i) &#123;</span><br><span class="line">cin &gt;&gt; opt &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="keyword">if</span> (x &gt; n || y &gt; n) &#123;</span><br><span class="line">++cntfalse;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">       <span class="keyword">if</span> (opt == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> qu = <span class="built_in">Query</span>(x, y);</span><br><span class="line"><span class="keyword">if</span> (qu == <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="built_in">Merge</span>(x, y, <span class="number">0</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (qu != <span class="number">0</span>) &#123;</span><br><span class="line">++cntfalse;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> qu = <span class="built_in">Query</span>(x, y);</span><br><span class="line"><span class="keyword">if</span> (qu == <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="built_in">Merge</span>(x, y, <span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (qu != <span class="number">1</span>) &#123;</span><br><span class="line">++cntfalse;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; cntfalse &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Floyd解最小环</title>
      <link href="/2021/09/30/Floyd%E8%A7%A3%E6%9C%80%E5%B0%8F%E7%8E%AF/index/"/>
      <url>/2021/09/30/Floyd%E8%A7%A3%E6%9C%80%E5%B0%8F%E7%8E%AF/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P6175-无向图的最小环问题"><a href="https://www.luogu.com.cn/problem/P6175">P6175 无向图的最小环问题</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e2</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x20202020</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, ans = INF;</span><br><span class="line"><span class="keyword">int</span> wei[MAXn + <span class="number">10</span>][MAXn + <span class="number">10</span>], dis[MAXn + <span class="number">10</span>][MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n, m);</span><br><span class="line"><span class="built_in">memset</span>(wei, <span class="number">0x20</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(wei));</span><br><span class="line"><span class="built_in">memset</span>(dis, <span class="number">0x20</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">wei[i][i] = dis[i][i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, u, v, w; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(u, v, w);</span><br><span class="line">wei[u][v] = wei[v][u] = dis[u][v] = dis[v][u] = <span class="built_in">min</span>(dis[u][v], w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; ++k) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == j || j == k || k == i) <span class="keyword">continue</span>;</span><br><span class="line">ans = <span class="built_in">min</span>(ans, wei[i][k] + wei[k][j] + dis[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">dis[i][j] = <span class="built_in">min</span>(dis[i][j], dis[i][k] + dis[k][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ans == INF) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No solution.\n&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符串dp</title>
      <link href="/2021/09/30/%E5%AD%97%E7%AC%A6%E4%B8%B2dp/index/"/>
      <url>/2021/09/30/%E5%AD%97%E7%AC%A6%E4%B8%B2dp/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3082-USACO13MAR-Necklace-G"><a href="https://www.luogu.com.cn/problem/P3082">P3082 [USACO13MAR]Necklace G</a></h2><h4 id="1-Kmp上Dp（会T）">1. Kmp上Dp（会T）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> std::ios;</span><br><span class="line"><span class="keyword">using</span> std::cin;</span><br><span class="line"><span class="keyword">using</span> std::cout;</span><br><span class="line"><span class="keyword">using</span> std::min;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXlwrd = <span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXltxt = <span class="number">1e4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> txt[MAXltxt + <span class="number">10</span>], wrd[MAXlwrd + <span class="number">10</span>]; <span class="keyword">int</span> ltxt, lwrd;</span><br><span class="line"><span class="keyword">int</span> fail[MAXlwrd + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> d[MAXltxt + <span class="number">10</span>][MAXlwrd + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EvaFail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">fail[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= lwrd; ++i) &#123;</span><br><span class="line"><span class="keyword">while</span> (j &amp;&amp; (wrd[j + <span class="number">1</span>] != wrd[i] || j == lwrd)) j = fail[j];</span><br><span class="line"><span class="keyword">if</span> (wrd[j + <span class="number">1</span>] == wrd[i]) ++j;</span><br><span class="line">fail[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>); cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>); cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">cin &gt;&gt; (txt + <span class="number">1</span>) &gt;&gt; (wrd + <span class="number">1</span>);</span><br><span class="line">ltxt = <span class="built_in">strlen</span>(txt + <span class="number">1</span>); lwrd = <span class="built_in">strlen</span>(wrd + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">EvaFail</span>();</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(d));</span><br><span class="line">d[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ltxt; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; lwrd; ++j) &#123;</span><br><span class="line"><span class="keyword">int</span> k = j;</span><br><span class="line"><span class="keyword">while</span> (k &amp;&amp; (wrd[k + <span class="number">1</span>] != txt[i + <span class="number">1</span>] || k == lwrd)) k = fail[k];</span><br><span class="line"><span class="keyword">if</span> (wrd[k + <span class="number">1</span>] == txt[i + <span class="number">1</span>]) ++k;</span><br><span class="line">d[i + <span class="number">1</span>][k] = <span class="built_in">min</span>(d[i + <span class="number">1</span>][k], d[i][j]);</span><br><span class="line">d[i + <span class="number">1</span>][j] = <span class="built_in">min</span>(d[i + <span class="number">1</span>][j], d[i][j] + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = INF;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lwrd; ++i) &#123;</span><br><span class="line">ans = <span class="built_in">min</span>(ans, d[ltxt][i]);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-Ac自动机上Dp">2. Ac自动机上Dp</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> std::ios;</span><br><span class="line"><span class="keyword">using</span> std::cin;</span><br><span class="line"><span class="keyword">using</span> std::cout;</span><br><span class="line"><span class="keyword">using</span> std::queue;</span><br><span class="line"><span class="keyword">using</span> std::min;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXlwrd = <span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXltxt = <span class="number">1e4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXnd = <span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cntnd, son[MAXnd + <span class="number">10</span>][<span class="number">26</span>], fail[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> *str)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = <span class="built_in">strlen</span>(str + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> cur = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!son[cur][str[i] - <span class="string">&#x27;a&#x27;</span>]) &#123;</span><br><span class="line">son[cur][str[i] - <span class="string">&#x27;a&#x27;</span>] = ++cntnd;</span><br><span class="line">&#125;</span><br><span class="line">cur = son[cur][str[i] - <span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cur;</span><br><span class="line">&#125;</span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EvaFail</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (son[<span class="number">0</span>][i]) &#123;</span><br><span class="line">q.<span class="built_in">push</span>(son[<span class="number">0</span>][i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line"><span class="keyword">int</span> j = q.<span class="built_in">front</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (son[j][i]) &#123;</span><br><span class="line">fail[son[j][i]] = son[fail[j]][i];</span><br><span class="line">q.<span class="built_in">push</span>(son[j][i]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">son[j][i] = son[fail[j]][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> wrd[MAXlwrd + <span class="number">10</span>], txt[MAXltxt + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> n, lwrd, ltxt, d[MAXltxt + <span class="number">10</span>][MAXlwrd + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>); cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>); cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">cin &gt;&gt; (txt + <span class="number">1</span>) &gt;&gt; (wrd + <span class="number">1</span>);</span><br><span class="line">ltxt = <span class="built_in">strlen</span>(txt + <span class="number">1</span>); lwrd = <span class="built_in">strlen</span>(wrd + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">Insert</span>(wrd);</span><br><span class="line"><span class="built_in">EvaFail</span>();</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(d));</span><br><span class="line">d[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ltxt; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; lwrd; ++j) &#123;</span><br><span class="line"><span class="keyword">int</span> k = j;</span><br><span class="line">k = son[k][txt[i + <span class="number">1</span>] - <span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">d[i + <span class="number">1</span>][k] = <span class="built_in">min</span>(d[i + <span class="number">1</span>][k], d[i][j]);</span><br><span class="line">d[i + <span class="number">1</span>][j] = <span class="built_in">min</span>(d[i + <span class="number">1</span>][j], d[i][j] + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans = INF;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lwrd; ++i) &#123;</span><br><span class="line">ans = <span class="built_in">min</span>(ans, d[ltxt][i]);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> DP </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>莫队</title>
      <link href="/2021/09/16/%E8%8E%AB%E9%98%9F/index/"/>
      <url>/2021/09/16/%E8%8E%AB%E9%98%9F/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1494-国家集训队-小Z的袜子"><a href="https://www.luogu.com.cn/problem/P1494">P1494 [国家集训队]小Z的袜子</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> std::sort;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">5e4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = <span class="number">5e4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXc = <span class="number">5e4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b, cntblock, inblock[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Query</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> l, r, id;</span><br><span class="line">    <span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> Query &amp;y) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (l / b == y.l / b) &#123;</span><br><span class="line">        <span class="keyword">return</span> (l / b) &amp; <span class="number">1</span> ? r &lt; y.r : y.r &lt; r;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l &lt; y.l;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;q[MAXm + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> b ? <span class="built_in">gcd</span>(b, a % b) : a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, a[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> sum, cnt[MAXc + <span class="number">10</span>], ans1[MAXm + <span class="number">10</span>], ans2[MAXm + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">sum += cnt[x];</span><br><span class="line">++cnt[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">--cnt[x];</span><br><span class="line">sum -= cnt[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Mocap</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (q[i].l &gt;= q[i].r) &#123;</span><br><span class="line">ans1[q[i].id] = <span class="number">0</span>; ans2[q[i].id] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (l &gt; q[i].l) <span class="built_in">add</span>(a[--l]);</span><br><span class="line"><span class="keyword">while</span> (r &lt; q[i].r) <span class="built_in">add</span>(a[++r]);</span><br><span class="line"><span class="keyword">while</span> (l &lt; q[i].l) <span class="built_in">del</span>(a[l++]);</span><br><span class="line"><span class="keyword">while</span> (r &gt; q[i].r) <span class="built_in">del</span>(a[r--]);</span><br><span class="line">ans1[q[i].id] = sum;</span><br><span class="line">ans2[q[i].id] = (r - l + <span class="number">1</span>) * (r - l) / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n, m);</span><br><span class="line">b = <span class="built_in">ceil</span>((<span class="keyword">double</span>)n / <span class="built_in">sqrt</span>(<span class="built_in">ceil</span>((<span class="keyword">double</span>)m)));</span><br><span class="line"><span class="comment">// b = sqrt(n);</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(q[i].l, q[i].r); q[i].id = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(q + <span class="number">1</span>, q + <span class="number">1</span> + m);</span><br><span class="line"><span class="built_in">Mocap</span>();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">    <span class="keyword">if</span> (ans1[i] != <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">int</span> g = <span class="built_in">gcd</span>(ans1[i], ans2[i]);</span><br><span class="line">      ans1[i] /= g, ans2[i] /= g;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      ans2[i] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld/%lld\n&quot;</span>, ans1[i], ans2[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高斯消元解有后效性的dp</title>
      <link href="/2021/09/15/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83%E8%A7%A3%E6%9C%89%E5%90%8E%E6%95%88%E6%80%A7%E7%9A%84dp/index/"/>
      <url>/2021/09/15/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83%E8%A7%A3%E6%9C%89%E5%90%8E%E6%95%88%E6%80%A7%E7%9A%84dp/index/</url>
      
        <content type="html"><![CDATA[<h2 id="CF24D-Broken-robot"><a href="https://www.luogu.com.cn/problem/CF24D">CF24D Broken robot</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = <span class="number">1e3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, x, y;</span><br><span class="line"><span class="keyword">double</span> mat[MAXm + <span class="number">10</span>][MAXm + <span class="number">10</span>], d[MAXn + <span class="number">10</span>][MAXm + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(m);</span><br><span class="line"><span class="built_in">read</span>(x), <span class="built_in">read</span>(y);</span><br><span class="line"><span class="keyword">if</span> (m == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="number">2</span> * (n - x));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= x; --i) &#123;</span><br><span class="line"><span class="built_in">memset</span>(mat, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(mat));</span><br><span class="line">mat[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">2</span>; mat[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">-1</span>;</span><br><span class="line">mat[<span class="number">1</span>][m + <span class="number">1</span>] = d[i + <span class="number">1</span>][<span class="number">1</span>] + <span class="number">3</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">2</span>; j &lt; m; ++j) &#123;</span><br><span class="line">mat[j][j - <span class="number">1</span>] = mat[j][j + <span class="number">1</span>] = <span class="number">-1</span>; mat[j][j] = <span class="number">3</span>;</span><br><span class="line">mat[j][m + <span class="number">1</span>] = d[i + <span class="number">1</span>][j] + <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line">mat[m][m] = <span class="number">2</span>; mat[m][m - <span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line">mat[m][m + <span class="number">1</span>] = d[i + <span class="number">1</span>][m] + <span class="number">3</span>;</span><br><span class="line"><span class="comment">// ------- 高斯消元 begin -------</span></span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; ++i) &#123;</span><br><span class="line"><span class="keyword">double</span> solve = mat[i + <span class="number">1</span>][i] / mat[i][i];</span><br><span class="line">mat[i + <span class="number">1</span>][i] -= mat[i][i] * solve;</span><br><span class="line"><span class="keyword">if</span> (i != m) &#123;</span><br><span class="line">mat[i + <span class="number">1</span>][i + <span class="number">1</span>] -= mat[i][i + <span class="number">1</span>] * solve;</span><br><span class="line">&#125;</span><br><span class="line">mat[i + <span class="number">1</span>][m + <span class="number">1</span>] -= mat[i][m + <span class="number">1</span>] * solve;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = m; i &gt; <span class="number">1</span>; --i) &#123;</span><br><span class="line"><span class="keyword">double</span> solve = mat[i - <span class="number">1</span>][i] / mat[i][i];</span><br><span class="line">mat[i - <span class="number">1</span>][i] -= mat[i][i] * solve;</span><br><span class="line">mat[i - <span class="number">1</span>][m + <span class="number">1</span>] -= mat[i][m + <span class="number">1</span>] * solve;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ------- 高斯消元 end -------</span></span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; ++j) &#123;</span><br><span class="line">d[i][j] = mat[j][m + <span class="number">1</span>] / mat[j][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.4f\n&quot;</span>, d[x][y]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态开点线段树</title>
      <link href="/2021/09/15/%E5%8A%A8%E6%80%81%E5%BC%80%E7%82%B9%E7%BA%BF%E6%AE%B5%E6%A0%91/index/"/>
      <url>/2021/09/15/%E5%8A%A8%E6%80%81%E5%BC%80%E7%82%B9%E7%BA%BF%E6%AE%B5%E6%A0%91/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P5459-BJOI2016-回转寿司"><a href="https://www.luogu.com.cn/problem/P5459">P5459 [BJOI2016]回转寿司</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> std::map;</span><br><span class="line"><span class="keyword">using</span> std::sort;</span><br><span class="line"><span class="keyword">using</span> std::unique;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXa = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXsuma = MAXn * MAXa;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXlogsuma = <span class="number">34</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXnd = MAXn * MAXlogsuma * <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>);<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T x = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (c ^ <span class="number">48</span>);&#125;a = f ? -x : x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cntnd, ls[MAXnd + <span class="number">10</span>], rs[MAXnd + <span class="number">10</span>], le[MAXnd + <span class="number">10</span>], ri[MAXnd + <span class="number">10</span>], sum[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">sum[id] = sum[ls[id]] + sum[rs[id]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">AddNew</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> p, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> id = ++cntnd;</span><br><span class="line">le[id] = l;</span><br><span class="line">ri[id] = r;</span><br><span class="line"><span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">sum[id] = k;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (p &lt;= mid) &#123;</span><br><span class="line">ls[id] = <span class="built_in">AddNew</span>(l, mid, p, k);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">rs[id] = <span class="built_in">AddNew</span>(mid + <span class="number">1</span>, r, p, k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AddOld</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> p, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (le[id] == ri[id]) &#123;</span><br><span class="line">sum[id] += k;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (le[id] + ri[id]) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (p &lt;= mid) &#123;</span><br><span class="line"><span class="keyword">if</span> (ls[id]) &#123;</span><br><span class="line"><span class="built_in">AddOld</span>(ls[id], p, k);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ls[id] = <span class="built_in">AddNew</span>(le[id], mid, p, k);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (rs[id]) &#123;</span><br><span class="line"><span class="built_in">AddOld</span>(rs[id], p, k);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">rs[id] = <span class="built_in">AddNew</span>(mid + <span class="number">1</span>, ri[id], p, k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Sec</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!id) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (le[id] &gt;= l &amp;&amp; ri[id] &lt;= r) &#123;</span><br><span class="line"><span class="keyword">return</span> sum[id];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (le[id] + ri[id]) &gt;&gt; <span class="number">1</span>, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) ans += <span class="built_in">Sec</span>(ls[id], l, r);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid) ans += <span class="built_in">Sec</span>(rs[id], l, r);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n1, n2, L, R, a[MAXn + <span class="number">10</span>], suma[MAXn + <span class="number">10</span>], ans;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n1, L, R);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n1; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">suma[i] = suma[i - <span class="number">1</span>] + a[i];</span><br><span class="line">&#125;</span><br><span class="line">++cntnd;</span><br><span class="line">le[cntnd] = -MAXsuma; ri[cntnd] = MAXsuma; sum[cntnd] = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">AddOld</span>(<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n1; ++i) &#123;</span><br><span class="line">ans += <span class="built_in">Sec</span>(<span class="number">1</span>, suma[i] - R, suma[i] - L);</span><br><span class="line"><span class="built_in">AddOld</span>(<span class="number">1</span>, suma[i], <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主席树</title>
      <link href="/2021/09/15/%E4%B8%BB%E5%B8%AD%E6%A0%91/index/"/>
      <url>/2021/09/15/%E4%B8%BB%E5%B8%AD%E6%A0%91/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3834【模板】可持久化线段树-2（主席树）"><a href="https://www.luogu.com.cn/problem/P3834">P3834【模板】可持久化线段树 2（主席树）</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> std::map;</span><br><span class="line"><span class="keyword">using</span> std::sort;</span><br><span class="line"><span class="keyword">using</span> std::unique;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">2e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXlogn = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = <span class="number">2e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXnd = MAXn * <span class="number">4</span> + MAXm * MAXlogn;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXroot = MAXm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>);<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T x = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (c ^ <span class="number">48</span>);&#125;a = f ? -x : x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cntnd, ls[MAXnd + <span class="number">10</span>], rs[MAXnd + <span class="number">10</span>], sum[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> cntroot, root[MAXroot + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> end[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">sum[id] = sum[ls[id]] + sum[rs[id]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Build0</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> id = ++cntnd;</span><br><span class="line"><span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">end[id] = l;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">ls[id] = <span class="built_in">Build0</span>(l, mid);</span><br><span class="line">rs[id] = <span class="built_in">Build0</span>(mid + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BuildUseArr</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> *a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> id = ++cntnd;</span><br><span class="line"><span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">end[id] = l;</span><br><span class="line">sum[id] = a[l];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">ls[id] = <span class="built_in">BuildUseArr</span>(l, mid, a);</span><br><span class="line">rs[id] = <span class="built_in">BuildUseArr</span>(mid + <span class="number">1</span>, r, a);</span><br><span class="line"><span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> verid, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> p, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> id = ++cntnd;</span><br><span class="line"><span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">end[id] = l;</span><br><span class="line">sum[id] = sum[verid] + k;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (p &lt;= mid) &#123;</span><br><span class="line">ls[id] = <span class="built_in">Insert</span>(ls[verid], l, mid, p, k);</span><br><span class="line">rs[id] = rs[verid];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ls[id] = ls[verid];</span><br><span class="line">rs[id] = <span class="built_in">Insert</span>(rs[verid], mid + <span class="number">1</span>, r, p, k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mapdown; <span class="keyword">int</span> cntmap, mapup[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> n1, n2, m, a[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> lid, <span class="keyword">int</span> rid, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (end[lid]) &#123;</span><br><span class="line"><span class="keyword">return</span> mapup[end[lid]];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (k &lt;= sum[ls[rid]] - sum[ls[lid]]) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Query</span>(ls[lid], ls[rid], k);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Query</span>(rs[lid], rs[rid], k - (sum[ls[rid]] - sum[ls[lid]]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n1, m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n1; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">mapup[i] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(mapup + <span class="number">1</span>, mapup + <span class="number">1</span> + n1);</span><br><span class="line">n2 = <span class="built_in">unique</span>(mapup + <span class="number">1</span>, mapup + <span class="number">1</span> + n1) - mapup - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n2; ++i) &#123;</span><br><span class="line">mapdown[mapup[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line">cntroot = <span class="number">-1</span>;</span><br><span class="line">root[++cntroot] = <span class="built_in">Build0</span>(<span class="number">1</span>, n2);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n1; ++i) &#123;</span><br><span class="line">++cntroot;</span><br><span class="line">root[cntroot] = <span class="built_in">Insert</span>(root[cntroot - <span class="number">1</span>], <span class="number">1</span>, n2, mapdown[a[i]], <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, l, r, k; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(l, r, k);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">Query</span>(root[l - <span class="number">1</span>], root[r], k));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前缀积法求逆元</title>
      <link href="/2021/09/08/%E5%89%8D%E7%BC%80%E7%A7%AF%E6%B3%95%E6%B1%82%E9%80%86%E5%85%83/index/"/>
      <url>/2021/09/08/%E5%89%8D%E7%BC%80%E7%A7%AF%E6%B3%95%E6%B1%82%E9%80%86%E5%85%83/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P5431-【模板】乘法逆元-2"><a href="https://www.luogu.com.cn/problem/P5431">P5431 【模板】乘法逆元 2</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">5e6</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>)x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + c - <span class="string">&#x27;0&#x27;</span>;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">power</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> mod)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (y) &#123;</span><br><span class="line"><span class="keyword">if</span> (y &amp; <span class="number">1</span>) &#123;</span><br><span class="line">ans = ans * x % mod;</span><br><span class="line">&#125;</span><br><span class="line">x = x * x % mod;</span><br><span class="line">y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> mod)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> inv = <span class="built_in">power</span>(n, mod - <span class="number">2</span>, mod);</span><br><span class="line">    <span class="keyword">return</span> (inv % mod + mod) % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, p, k, a[MAXn + <span class="number">10</span>], pi[MAXn + <span class="number">10</span>], mi[MAXn + <span class="number">10</span>], invv, ans;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(p), <span class="built_in">read</span>(k);</span><br><span class="line">pi[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">pi[i] = (pi[i - <span class="number">1</span>] * a[i]) % p;</span><br><span class="line">&#125;</span><br><span class="line">mi[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">mi[i] = (mi[i - <span class="number">1</span>] * k) % p;</span><br><span class="line">&#125;</span><br><span class="line">invv = <span class="built_in">inv</span>(pi[n], p);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = n; i; --i) &#123;</span><br><span class="line">ans = (ans + mi[i] * (invv * pi[i - <span class="number">1</span>] % p)) % p;</span><br><span class="line">invv = (invv * a[i]) % p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有理数取余</title>
      <link href="/2021/09/06/%E6%9C%89%E7%90%86%E6%95%B0%E5%8F%96%E4%BD%99/index/"/>
      <url>/2021/09/06/%E6%9C%89%E7%90%86%E6%95%B0%E5%8F%96%E4%BD%99/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P2613-【模板】有理数取余"><a href="https://www.luogu.com.cn/problem/P2613">P2613 【模板】有理数取余 </a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">19260817</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">register</span> <span class="keyword">int</span> <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = (x * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>) % MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    a = x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span>&amp; x, <span class="keyword">int</span>&amp; y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b) &#123;</span><br><span class="line">        x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> d = <span class="built_in">exgcd</span>(b, a % b, y, x);</span><br><span class="line">    y -= a / b * x;</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> mod)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> inv, k;</span><br><span class="line">    <span class="built_in">exgcd</span>(n, mod, inv, k);</span><br><span class="line">    <span class="keyword">return</span> (inv % mod + mod) % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">frac</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> mod)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (a * <span class="built_in">inv</span>(b, mod)) % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(a), <span class="built_in">read</span>(b);</span><br><span class="line"><span class="keyword">if</span> (!(b % MOD)) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Angry!\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">frac</span>(a, b, MOD));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速乘</title>
      <link href="/2021/09/05/%E5%BF%AB%E9%80%9F%E4%B9%98/index/"/>
      <url>/2021/09/05/%E5%BF%AB%E9%80%9F%E4%B9%98/index/</url>
      
        <content type="html"><![CDATA[<p><s>龟速乘</s></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> T <span class="title">mul</span><span class="params">(T x, T y, T mod)</span> </span>&#123;</span><br><span class="line">x %= mod; y %= mod;</span><br><span class="line">T ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (y) &#123;</span><br><span class="line"><span class="keyword">if</span> (y &amp; <span class="number">1</span>) &#123;</span><br><span class="line">ans = (ans + x) % mod;</span><br><span class="line">&#125;</span><br><span class="line">x = (x + x) % mod;</span><br><span class="line">y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>可重集全排列</title>
      <link href="/2021/09/01/%E5%8F%AF%E9%87%8D%E9%9B%86%E5%85%A8%E6%8E%92%E5%88%97/index/"/>
      <url>/2021/09/01/%E5%8F%AF%E9%87%8D%E9%9B%86%E5%85%A8%E6%8E%92%E5%88%97/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P2518-HAOI2010-计数"><a href="https://www.luogu.com.cn/problem/P2518">P2518 [HAOI2010]计数</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> C[MAXn + <span class="number">10</span>][MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EvaC</span><span class="params">(<span class="keyword">int</span> top)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= top; ++i) &#123;</span><br><span class="line">C[i][<span class="number">0</span>] = C[i][i] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= top; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; ++j) &#123;</span><br><span class="line">C[i][j] = C[i - <span class="number">1</span>][j - <span class="number">1</span>] + C[i - <span class="number">1</span>][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Pmult</span><span class="params">(<span class="keyword">int</span> top, <span class="keyword">int</span> *cnt, <span class="keyword">int</span> sum = <span class="number">-1</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (sum == <span class="number">-1</span>) &#123;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= top; ++i) &#123;</span><br><span class="line">sum += cnt[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= top; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (cnt[i]) &#123;</span><br><span class="line">ans *= C[sum][cnt[i]];</span><br><span class="line">sum -= cnt[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> str[MAXn + <span class="number">10</span>]; <span class="keyword">int</span> len;</span><br><span class="line"><span class="keyword">int</span> sumcnt, cnt[<span class="number">11</span>], ans;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">EvaC</span>(MAXn);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str + <span class="number">1</span>);</span><br><span class="line">len = <span class="built_in">strlen</span>(str + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">reverse</span>(str + <span class="number">1</span>, str + <span class="number">1</span> + len);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (str[i] - <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">++cnt[str[i] - <span class="string">&#x27;0&#x27;</span>];</span><br><span class="line">++sumcnt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = len; i; --i) &#123;</span><br><span class="line"><span class="keyword">if</span> (str[i] - <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">cnt[<span class="number">10</span>] = i - <span class="number">1</span> - sumcnt;</span><br><span class="line">ans += <span class="built_in">Pmult</span>(<span class="number">10</span>, cnt, i - <span class="number">1</span>);</span><br><span class="line">cnt[<span class="number">10</span>] = i - <span class="number">1</span> - (sumcnt - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">1</span>; j &lt; str[i] - <span class="string">&#x27;0&#x27;</span>; ++j) &#123;</span><br><span class="line"><span class="keyword">if</span> (cnt[j]) &#123;</span><br><span class="line">--cnt[j];</span><br><span class="line">ans += <span class="built_in">Pmult</span>(<span class="number">10</span>, cnt, i - <span class="number">1</span>);</span><br><span class="line">++cnt[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">--cnt[str[i] - <span class="string">&#x27;0&#x27;</span>];</span><br><span class="line">--sumcnt;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>次短路</title>
      <link href="/2021/09/01/%E6%AC%A1%E7%9F%AD%E8%B7%AF/index/"/>
      <url>/2021/09/01/%E6%AC%A1%E7%9F%AD%E8%B7%AF/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P2865-USACO06NOV-Roadblocks-G"><a href="https://www.luogu.com.cn/problem/P2865">P2865 [USACO06NOV]Roadblocks G</a></h2><h4 id="1-Dijkstra">1. Dijkstra</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> dis[MAXn + <span class="number">10</span>], secdis[MAXn + <span class="number">10</span>];</span><br><span class="line">priority_queue&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> root)</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(dis, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line"><span class="built_in">memset</span>(secdis, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(secdis));</span><br><span class="line">dis[root] = <span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(<span class="number">0</span>, root));</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line"><span class="keyword">int</span> cur = q.<span class="built_in">top</span>().second, d = -q.<span class="built_in">top</span>().first; q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span> (secdis[cur] &lt; d) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">int</span> dist = d + wei[i];</span><br><span class="line"><span class="keyword">if</span> (dis[to[i]] &gt; dist) &#123;</span><br><span class="line"><span class="built_in">swap</span>(dis[to[i]], dist);</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(-dis[to[i]], to[i]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (secdis[to[i]] &gt; dist) &#123;</span><br><span class="line">secdis[tod[i]] = dist;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(-secdis[to[i]], to[i]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// main函数中</span></span><br><span class="line"><span class="built_in">Dijkstra</span>(root);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, secdis[cur]);</span><br></pre></td></tr></table></figure><h4 id="2-Spfa">2. Spfa</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> inque[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> dis[MAXn + <span class="number">10</span>], secdis[MAXn + <span class="number">10</span>];</span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Spfa</span><span class="params">(<span class="keyword">int</span> root)</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(dis, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line"><span class="built_in">memset</span>(secdis, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(secdis));</span><br><span class="line">dis[root] = <span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">push</span>(root); inque[root] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line"><span class="keyword">int</span> cur = q.<span class="built_in">front</span>(); q.<span class="built_in">pop</span>(); inque[cur] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">bool</span> trans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> dist = dis[cur] + wei[i], secdist = secdis[cur] + wei[i];</span><br><span class="line"><span class="keyword">if</span> (dis[to[i]] &gt; dist) &#123;</span><br><span class="line">secdis[to[i]] = dis[to[i]];</span><br><span class="line">dis[to[i]] = dist;</span><br><span class="line">trans = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (dis[to[i]] &lt; dist &amp;&amp; secdis[to[i]] &gt; dist) &#123;</span><br><span class="line">secdis[to[i]] = dist;</span><br><span class="line">trans = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (secdis[to[i]] &gt; secdist) &#123;</span><br><span class="line">secdis[to[i]] = secdist;</span><br><span class="line">trans = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (trans) &#123;</span><br><span class="line"><span class="keyword">if</span> (!inque[to[i]]) &#123;</span><br><span class="line">q.<span class="built_in">push</span>(to[i]); inque[to[i]] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// main函数中</span></span><br><span class="line"><span class="built_in">Spfa</span>(root);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, secdis[cur]);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>严格次小生成树</title>
      <link href="/2021/08/31/%E4%B8%A5%E6%A0%BC%E6%AC%A1%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/index/"/>
      <url>/2021/08/31/%E4%B8%A5%E6%A0%BC%E6%AC%A1%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P4180-BJWC2010-严格次小生成树"><a href="https://www.luogu.com.cn/problem/P4180">P4180 [BJWC2010]严格次小生成树</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = <span class="number">3e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>);<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T x = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (c ^ <span class="number">48</span>);&#125;a = f ? -x : x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, root = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> head[MAXn + <span class="number">10</span>], cntnex, nex[MAXm * <span class="number">2</span> + <span class="number">10</span>], to[MAXm * <span class="number">2</span> + <span class="number">10</span>], wei[MAXm * <span class="number">2</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">nex[++cntnex] = head[u];</span><br><span class="line">head[u] = cntnex;</span><br><span class="line">to[cntnex] = v;</span><br><span class="line">wei[cntnex] = w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fat[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">anc</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> fat[x] = fat[x] == x ? x : <span class="built_in">anc</span>(fat[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">anc</span>(x) != <span class="built_in">anc</span>(y)) &#123;</span><br><span class="line">fat[<span class="built_in">anc</span>(x)] = y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">SameAnc</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">anc</span>(x) == <span class="built_in">anc</span>(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">(<span class="keyword">int</span> top)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= top; ++i) &#123;</span><br><span class="line">fat[i] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> u, v, w;</span><br><span class="line"><span class="built_in">Edge</span>():<span class="built_in">u</span>(<span class="number">0</span>), <span class="built_in">v</span>(<span class="number">0</span>), <span class="built_in">w</span>(<span class="number">0</span>)&#123;&#125;</span><br><span class="line"><span class="built_in">Edge</span>(<span class="keyword">int</span> u_, <span class="keyword">int</span> v_, <span class="keyword">int</span> w_):<span class="built_in">u</span>(u_), <span class="built_in">v</span>(v_), <span class="built_in">w</span>(w_)&#123;&#125;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(Edge x) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>-&gt;w &lt; x.w;</span><br><span class="line">&#125;</span><br><span class="line">&#125;edge[MAXm + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> intree[MAXm + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Kruskal</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">sort</span>(edge + <span class="number">1</span>, edge + <span class="number">1</span> + m);</span><br><span class="line"><span class="built_in">Init</span>(n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">SameAnc</span>(edge[i].u, edge[i].v)) &#123;</span><br><span class="line">ans += edge[i].w;</span><br><span class="line"><span class="built_in">Merge</span>(edge[i].u, edge[i].v);</span><br><span class="line">intree[i] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergemax</span><span class="params">(<span class="keyword">int</span> &amp;ansmax, <span class="keyword">int</span> &amp;anscmx, <span class="keyword">int</span> max1, <span class="keyword">int</span> cmx1, <span class="keyword">int</span> max2, <span class="keyword">int</span> cmx2)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (max1 &gt; max2) &#123;</span><br><span class="line">ansmax = max1;</span><br><span class="line">anscmx = <span class="built_in">max</span>(max2, cmx1);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (max1 &lt; max2) &#123;</span><br><span class="line">ansmax = max2;</span><br><span class="line">anscmx = <span class="built_in">max</span>(max1, cmx2);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ansmax = max1;</span><br><span class="line">anscmx = <span class="built_in">max</span>(cmx1, cmx2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> le[MAXn * <span class="number">4</span> + <span class="number">10</span>], ri[MAXn * <span class="number">4</span> + <span class="number">10</span>], maxx[MAXn * <span class="number">4</span> + <span class="number">10</span>], cmax[MAXn * <span class="number">4</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="built_in">mergemax</span>(maxx[id], cmax[id], maxx[id &lt;&lt; <span class="number">1</span>], cmax[id &lt;&lt; <span class="number">1</span>], maxx[(id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>], cmax[(id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BuildUseArr</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> *a)</span> </span>&#123;</span><br><span class="line">le[id] = l;</span><br><span class="line">ri[id] = r;</span><br><span class="line"><span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">maxx[id] = a[l];</span><br><span class="line">cmax[id] = -INF;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">BuildUseArr</span>(id &lt;&lt; <span class="number">1</span>, l, mid, a);</span><br><span class="line"><span class="built_in">BuildUseArr</span>((id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>, mid + <span class="number">1</span>, r, a);</span><br><span class="line"><span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; <span class="title">Eva</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (le[id] &gt;= l &amp;&amp; ri[id] &lt;= r) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(maxx[id], cmax[id]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (le[id] + ri[id]) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid &amp;&amp; r &gt; mid) &#123;</span><br><span class="line"><span class="keyword">int</span> ansmax, anscmx;</span><br><span class="line">pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; left, right;</span><br><span class="line">left = <span class="built_in">Eva</span>(id &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line">right = <span class="built_in">Eva</span>((id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>, l, r);</span><br><span class="line"><span class="built_in">mergemax</span>(ansmax, anscmx, left.first, left.second, right.first, right.second);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(ansmax, anscmx);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (l &lt;= mid) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Eva</span>(id &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Eva</span>((id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>, l, r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ndwei[MAXn + <span class="number">10</span>], idxwei[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> fa[MAXn + <span class="number">10</span>], dep[MAXn + <span class="number">10</span>], siz[MAXn + <span class="number">10</span>], hson[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs1</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">dep[cur] = dep[fa[cur]] + <span class="number">1</span>;</span><br><span class="line">siz[cur] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> mx = -INF;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (!intree[i &gt;&gt; <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (to[i] == fa[cur]) <span class="keyword">continue</span>;</span><br><span class="line">fa[to[i]] = cur;</span><br><span class="line">ndwei[to[i]] = wei[i];</span><br><span class="line"><span class="built_in">Dfs1</span>(to[i]);</span><br><span class="line">siz[cur] += siz[to[i]];</span><br><span class="line"><span class="keyword">if</span> (siz[to[i]] &gt; mx) &#123;</span><br><span class="line">mx = siz[to[i]];</span><br><span class="line">hson[cur] = to[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cntdfs, nddfs[MAXn + <span class="number">10</span>], idxdfs[MAXn + <span class="number">10</span>], top[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs2</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">nddfs[cur] = ++cntdfs;</span><br><span class="line">idxdfs[cntdfs] = cur;</span><br><span class="line"><span class="keyword">if</span> (hson[cur]) &#123;</span><br><span class="line">top[hson[cur]] = top[cur];</span><br><span class="line"><span class="built_in">Dfs2</span>(hson[cur]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (!intree[i &gt;&gt; <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (to[i] == hson[cur] || to[i] == fa[cur]) <span class="keyword">continue</span>;</span><br><span class="line">top[to[i]] = to[i];</span><br><span class="line"><span class="built_in">Dfs2</span>(to[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; <span class="title">TreePathEva</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ansmax = -INF, anscmx = -INF;</span><br><span class="line"><span class="keyword">int</span> tmpansmax, tmpanscmx;</span><br><span class="line">pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; tmp;</span><br><span class="line"><span class="keyword">while</span> (top[x] != top[y]) &#123;</span><br><span class="line"><span class="keyword">if</span> (dep[top[x]] &gt; dep[top[y]]) &#123;</span><br><span class="line"><span class="built_in">swap</span>(x, y);</span><br><span class="line">&#125;</span><br><span class="line">tmp = <span class="built_in">Eva</span>(<span class="number">1</span>, nddfs[top[y]], nddfs[y]);</span><br><span class="line"><span class="built_in">mergemax</span>(tmpansmax, tmpanscmx, ansmax, anscmx, tmp.first, tmp.second);</span><br><span class="line">ansmax = tmpansmax;</span><br><span class="line">anscmx = tmpanscmx;</span><br><span class="line">y = fa[top[y]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (dep[x] &gt; dep[y]) &#123;</span><br><span class="line"><span class="built_in">swap</span>(x, y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x == y) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(ansmax, anscmx);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">tmp = <span class="built_in">Eva</span>(<span class="number">1</span>, nddfs[x] + <span class="number">1</span>, nddfs[y]);</span><br><span class="line"><span class="built_in">mergemax</span>(tmpansmax, tmpanscmx, ansmax, anscmx, tmp.first, tmp.second);</span><br><span class="line">ansmax = tmpansmax;</span><br><span class="line">anscmx = tmpanscmx;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(ansmax, anscmx);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans, diff = INF;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cntnex = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(m);</span><br><span class="line"><span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, u, v, w; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(u), <span class="built_in">read</span>(v), <span class="built_in">read</span>(w);</span><br><span class="line"><span class="keyword">if</span> (u == v) &#123;</span><br><span class="line">++tmp;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">edge[i - tmp] = <span class="built_in">Edge</span>(u, v, w);</span><br><span class="line">&#125;</span><br><span class="line">m -= tmp;</span><br><span class="line">ans = <span class="built_in">Kruskal</span>();</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">Insert</span>(edge[i].u, edge[i].v, edge[i].w);</span><br><span class="line"><span class="built_in">Insert</span>(edge[i].v, edge[i].u, edge[i].w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Dfs1</span>(root);</span><br><span class="line"><span class="built_in">Dfs2</span>(root);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">idxwei[i] = ndwei[idxdfs[i]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">BuildUseArr</span>(<span class="number">1</span>, <span class="number">1</span>, n, idxwei);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!intree[i]) &#123;</span><br><span class="line">pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; tmp = <span class="built_in">TreePathEva</span>(edge[i].u, edge[i].v);</span><br><span class="line"><span class="keyword">if</span> (tmp.first == edge[i].w) &#123;</span><br><span class="line">diff = <span class="built_in">min</span>(diff, edge[i].w - tmp.second);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">diff = <span class="built_in">min</span>(diff, edge[i].w - tmp.first);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans + diff);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最小生成树</title>
      <link href="/2021/08/31/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/index/"/>
      <url>/2021/08/31/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3366-【模板】最小生成树"><a href="https://www.luogu.com.cn/problem/P3366">P3366 【模板】最小生成树</a></h2><h4 id="Kruskal">Kruskal</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">5e3</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = <span class="number">2e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> fa[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">anc</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> fa[x] = fa[x] == x ? x : <span class="built_in">anc</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">anc</span>(x) != <span class="built_in">anc</span>(y)) &#123;</span><br><span class="line">fa[<span class="built_in">anc</span>(x)] = y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">SameAnc</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">anc</span>(x) == <span class="built_in">anc</span>(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">(<span class="keyword">int</span> top)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= top; ++i) &#123;</span><br><span class="line">fa[i] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> u, v, w;</span><br><span class="line"><span class="built_in">Edge</span>():<span class="built_in">u</span>(<span class="number">0</span>), <span class="built_in">v</span>(<span class="number">0</span>), <span class="built_in">w</span>(<span class="number">0</span>)&#123;&#125;</span><br><span class="line"><span class="built_in">Edge</span>(<span class="keyword">int</span> u_, <span class="keyword">int</span> v_, <span class="keyword">int</span> w_):<span class="built_in">u</span>(u_), <span class="built_in">v</span>(v_), <span class="built_in">w</span>(w_)&#123;&#125;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(Edge x) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>-&gt;w &lt; x.w;</span><br><span class="line">&#125;</span><br><span class="line">&#125;edge[MAXm + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Kruskal</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">sort</span>(edge + <span class="number">1</span>, edge + <span class="number">1</span> + m);</span><br><span class="line"><span class="built_in">Init</span>(n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">SameAnc</span>(edge[i].u, edge[i].v)) &#123;</span><br><span class="line">ans += edge[i].w;</span><br><span class="line"><span class="built_in">Merge</span>(edge[i].u, edge[i].v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(m);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, u, v, w; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(u), <span class="built_in">read</span>(v), <span class="built_in">read</span>(w);</span><br><span class="line">edge[i] = <span class="built_in">Edge</span>(u, v, w);</span><br><span class="line">&#125;</span><br><span class="line">ans = <span class="built_in">Kruskal</span>();</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">SameAnc</span>(i, i + <span class="number">1</span>)) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;orz\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树上关键点</title>
      <link href="/2021/08/30/%E6%A0%91%E4%B8%8A%E5%85%B3%E9%94%AE%E7%82%B9/index/"/>
      <url>/2021/08/30/%E6%A0%91%E4%B8%8A%E5%85%B3%E9%94%AE%E7%82%B9/index/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = MAXn;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">re <span class="keyword">char</span> c;<span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>; c = <span class="built_in">getchar</span>());re <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;re T x = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>; c = <span class="built_in">getchar</span>()) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + c - <span class="string">&#x27;0&#x27;</span>;&#125;a = f ? -x : x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> head[MAXn + <span class="number">10</span>], cntnex, nex[MAXm * <span class="number">2</span> + <span class="number">10</span>], to[MAXm * <span class="number">2</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">nex[++cntnex] = head[u];</span><br><span class="line">head[u] = cntnex;</span><br><span class="line">to[cntnex] = v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, k, ans, root = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function">pair&lt;<span class="keyword">int</span>, <span class="keyword">bool</span>&gt; <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123; <span class="comment">// 0: hav, 1: ned</span></span><br><span class="line">vis[cur] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> ned = -INF, hav = -INF;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (vis[to[i]]) <span class="keyword">continue</span>;</span><br><span class="line">pair&lt;<span class="keyword">int</span>, <span class="keyword">bool</span>&gt; tmp = <span class="built_in">Dfs</span>(to[i]);</span><br><span class="line"><span class="keyword">if</span> (tmp.second) &#123;</span><br><span class="line">ned = <span class="built_in">max</span>(ned, tmp.first);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">hav = <span class="built_in">max</span>(hav, tmp.first);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (cur == root) &#123;</span><br><span class="line"><span class="keyword">if</span> (ned == -INF &amp;&amp; hav == -INF) &#123;</span><br><span class="line">++ans;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (ned == -INF) &#123;</span><br><span class="line">;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (hav == -INF) &#123;</span><br><span class="line">++ans;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (ned &gt; hav) &#123;</span><br><span class="line">++ans;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(<span class="number">-1</span>, <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ned == -INF &amp;&amp; hav == -INF) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (ned == -INF) &#123;</span><br><span class="line"><span class="keyword">if</span> (hav == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(hav - <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (hav == -INF) &#123;</span><br><span class="line"><span class="keyword">if</span> (ned == k) &#123;</span><br><span class="line">++ans;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(k - <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(ned + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (ned &gt; hav) &#123;</span><br><span class="line"><span class="keyword">if</span> (ned == k) &#123;</span><br><span class="line">++ans;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(k - <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(ned + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (hav == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(hav - <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line"><span class="built_in">read</span>(k);</span><br><span class="line"><span class="keyword">if</span> (k == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, u, v; i &lt; n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(u), <span class="built_in">read</span>(v);</span><br><span class="line"><span class="built_in">Insert</span>(u, v); <span class="built_in">Insert</span>(v, u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Dfs</span>(root);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分块</title>
      <link href="/2021/08/29/%E5%88%86%E5%9D%97/index/"/>
      <url>/2021/08/29/%E5%88%86%E5%9D%97/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P2357-守墓人"><a href="https://www.luogu.com.cn/problem/P2357">P2357 守墓人</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">2e6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXsqrtn = <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>);<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T x = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (c ^ <span class="number">48</span>);&#125;a = f ? -x : x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> a[MAXn + <span class="number">10</span>], inpart[MAXn + <span class="number">10</span>], length;</span><br><span class="line"><span class="keyword">int</span> cntpart, sum[MAXsqrtn + <span class="number">10</span>], add[MAXsqrtn + <span class="number">10</span>], le[MAXsqrtn + <span class="number">10</span>], ri[MAXsqrtn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BuildUseArray</span><span class="params">(<span class="keyword">int</span> *a)</span> </span>&#123;</span><br><span class="line">length = cntpart = <span class="built_in">sqrt</span>(n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, l = <span class="number">1</span>, r = cntpart; i &lt;= cntpart; ++i) &#123;</span><br><span class="line">le[i] = l;</span><br><span class="line">ri[i] = r;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = l; j &lt;= r; ++j) &#123;</span><br><span class="line">sum[i] += a[j];</span><br><span class="line">inpart[j] = i;</span><br><span class="line">&#125;</span><br><span class="line">l = r + <span class="number">1</span>;</span><br><span class="line">r += length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ri[cntpart] &lt; n) &#123;</span><br><span class="line">++cntpart;</span><br><span class="line">le[cntpart] = ri[cntpart - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">ri[cntpart] = n;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = le[cntpart]; i &lt;= ri[cntpart]; ++i) &#123;</span><br><span class="line">sum[cntpart] += a[i];</span><br><span class="line">inpart[i] = cntpart;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (inpart[l] == inpart[r]) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = l; i &lt;= r; ++i) &#123;</span><br><span class="line">a[i] += k;</span><br><span class="line">&#125;</span><br><span class="line">sum[inpart[l]] += k * (r - l + <span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = l; i &lt;= ri[inpart[l]]; ++i) &#123;</span><br><span class="line">a[i] += k;</span><br><span class="line">&#125;</span><br><span class="line">sum[inpart[l]] += k * (ri[inpart[l]] - l + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = le[inpart[r]]; i &lt;= r; ++i) &#123;</span><br><span class="line">a[i] += k;</span><br><span class="line">&#125;</span><br><span class="line">sum[inpart[r]] += k * (r - le[inpart[r]] + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = inpart[l] + <span class="number">1</span>; i &lt; inpart[r]; ++i) &#123;</span><br><span class="line">add[i] += k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EvaSum</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (inpart[l] == inpart[r]) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = l; i &lt;= r; ++i) &#123;</span><br><span class="line">ans += a[i];</span><br><span class="line">&#125;</span><br><span class="line">ans += add[inpart[l]] * (r - l + <span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = l; i &lt;= ri[inpart[l]]; ++i) &#123;</span><br><span class="line">ans += a[i];</span><br><span class="line">&#125;</span><br><span class="line">ans += add[inpart[l]] * (ri[inpart[l]] - l + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = le[inpart[r]]; i &lt;= r; ++i) &#123;</span><br><span class="line">ans += a[i];</span><br><span class="line">&#125;</span><br><span class="line">ans += add[inpart[r]] * (r - le[inpart[r]] + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = inpart[l] + <span class="number">1</span>; i &lt; inpart[r]; ++i) &#123;</span><br><span class="line">ans += sum[i] + add[i] * length;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(m);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">BuildUseArray</span>(a);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, opt, x, y, z; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(opt);</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (opt) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">read</span>(x), <span class="built_in">read</span>(y), <span class="built_in">read</span>(z);</span><br><span class="line"><span class="built_in">Add</span>(x, y, z);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">read</span>(x);</span><br><span class="line">a[<span class="number">1</span>] += x;</span><br><span class="line">sum[<span class="number">1</span>] += x;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">read</span>(x);</span><br><span class="line">a[<span class="number">1</span>] -= x;</span><br><span class="line">sum[<span class="number">1</span>] -= x;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="built_in">read</span>(x), <span class="built_in">read</span>(y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">EvaSum</span>(x, y));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, a[<span class="number">1</span>] + add[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本来我是用线段树的板题来测我的分块的，但是后来又用这道题测了一下，发现始终过不了，调了很久才发现 “<code>EvaSum</code> -&gt; <code>if (inpart[l] == inpart[r])</code> -&gt; <code>ans += add[inpart[l]] * (r - l + 1);</code>” 这句没有写。但是线段树的板题竟然过了，就离谱，这就是我不推荐用线段树板题测分块的原因。<s>（不是为了水题）</s>。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆康托展开</title>
      <link href="/2021/08/25/%E9%80%86%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80/index/"/>
      <url>/2021/08/25/%E9%80%86%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80/index/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">18</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXk = <span class="number">1e16</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="keyword">int</span> trector[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x) &amp; (-(x)))</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BuildUseSum</span><span class="params">(<span class="keyword">int</span> *sum)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        trector[i] = sum[i] - sum[i - <span class="built_in">lowbit</span>(i)];       </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (p &lt;= n) &#123;</span><br><span class="line">        trector[p] += k;</span><br><span class="line">        p += <span class="built_in">lowbit</span>(p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EvaSum</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (p &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        sum += trector[p];</span><br><span class="line">        p -= <span class="built_in">lowbit</span>(p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fac[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Evafac</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    fac[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        fac[i] = fac[i - <span class="number">1</span>] * i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sum[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Initsum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        sum[i] = sum[i - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Div</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">EvaSum</span>(mid) &gt;= x) &#123;</span><br><span class="line">            r = mid;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            l = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cantor[MAXn + <span class="number">10</span>], ans[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(k);</span><br><span class="line">    --k;</span><br><span class="line">    <span class="built_in">Evafac</span>();</span><br><span class="line">    <span class="keyword">for</span> (re <span class="keyword">int</span> i = n; i &gt; <span class="number">1</span>; --i) &#123;</span><br><span class="line">        cantor[i] = k / fac[i - <span class="number">1</span>];</span><br><span class="line">        k %= fac[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Initsum</span>();</span><br><span class="line">    <span class="built_in">BuildUseSum</span>(sum);</span><br><span class="line">    <span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        ans[i] = <span class="built_in">Div</span>(<span class="number">1</span>, n, cantor[n - i + <span class="number">1</span>]);</span><br><span class="line">        <span class="built_in">Add</span>(ans[i], <span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld &quot;</span>, ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对顶栈</title>
      <link href="/2021/08/23/%E5%AF%B9%E9%A1%B6%E6%A0%88/index/"/>
      <url>/2021/08/23/%E5%AF%B9%E9%A1%B6%E6%A0%88/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P2201-数列编辑器"><a href="https://www.luogu.com.cn/problem/P2201">P2201 数列编辑器</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>);<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T x = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (c ^ <span class="number">48</span>);&#125;a = f ? -x : x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Ele</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> val, sum, maxsum;</span><br><span class="line"><span class="built_in">Ele</span>()&#123;&#125;</span><br><span class="line"><span class="built_in">Ele</span>(<span class="keyword">int</span> val_):<span class="built_in">val</span>(val_)&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Stack</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> top;</span><br><span class="line">Ele stk[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Push</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">stk[++top] = <span class="built_in">Ele</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> stk[top--].val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;fro, beh;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">char</span> opt;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, x; i &lt;= n; ++i) &#123;</span><br><span class="line">cin &gt;&gt; opt;</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (opt) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;I&#x27;</span>:</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">fro.<span class="built_in">Push</span>(x);</span><br><span class="line">fro.stk[fro.top].sum = fro.stk[fro.top - <span class="number">1</span>].sum + fro.stk[fro.top].val;</span><br><span class="line">fro.stk[fro.top].maxsum = (fro.top == <span class="number">1</span>) ? fro.stk[fro.top].sum :</span><br><span class="line"><span class="built_in">max</span>(fro.stk[fro.top - <span class="number">1</span>].maxsum, fro.stk[fro.top].sum);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line">fro.<span class="built_in">Pop</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line">beh.<span class="built_in">Push</span>(fro.<span class="built_in">Pop</span>());</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;R&#x27;</span>:</span><br><span class="line">fro.<span class="built_in">Push</span>(beh.<span class="built_in">Pop</span>());</span><br><span class="line">fro.stk[fro.top].sum = fro.stk[fro.top - <span class="number">1</span>].sum + fro.stk[fro.top].val;</span><br><span class="line">fro.stk[fro.top].maxsum = (fro.top == <span class="number">1</span>) ? fro.stk[fro.top].sum :</span><br><span class="line"><span class="built_in">max</span>(fro.stk[fro.top - <span class="number">1</span>].maxsum, fro.stk[fro.top].sum);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;Q&#x27;</span>:</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">cout &lt;&lt; fro.stk[x].maxsum &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实用小高精</title>
      <link href="/2021/08/18/%E5%AE%9E%E7%94%A8%E5%B0%8F%E9%AB%98%E7%B2%BE/index/"/>
      <url>/2021/08/18/%E5%AE%9E%E7%94%A8%E5%B0%8F%E9%AB%98%E7%B2%BE/index/</url>
      
        <content type="html"><![CDATA[<p><a href="https://rsdbkhusky.github.io/2021/06/07/%E9%AB%98%E7%B2%BE%E8%BF%90%E7%AE%97/">不实用的高精</a></p><p>推荐一个实用小高精：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BigInt</span> &#123;</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="keyword">long</span> base = <span class="number">1e13</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> s[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">friend</span> BigInt <span class="keyword">operator</span> + (BigInt a, <span class="keyword">const</span> BigInt b) &#123;</span><br><span class="line">a.s[<span class="number">0</span>] += b.s[<span class="number">0</span>];</span><br><span class="line">a.s[<span class="number">1</span>] += b.s[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (a.s[<span class="number">0</span>] &gt;= base) ++a.s[<span class="number">1</span>], a.s[<span class="number">0</span>] -= base;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">int</span> <span class="keyword">operator</span> % (BigInt a, <span class="keyword">int</span> b) &#123;</span><br><span class="line"><span class="keyword">return</span> ((a.s[<span class="number">1</span>] % b) * base + a.s[<span class="number">0</span>]) % b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> BigInt <span class="keyword">operator</span> / (BigInt a, <span class="keyword">int</span> b) &#123;</span><br><span class="line">BigInt c;</span><br><span class="line">c.s[<span class="number">1</span>] = a.s[<span class="number">1</span>] / b;</span><br><span class="line">c.s[<span class="number">0</span>] = ((a.s[<span class="number">1</span>] % b) * base + a.s[<span class="number">0</span>]) / b;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (s[<span class="number">1</span>]) <span class="built_in">printf</span>(<span class="string">&quot;%lld%13lld&quot;</span>, s[<span class="number">1</span>], s[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, s[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>乘法不用考虑，用 <code>s[1] * s[1]</code> 就炸了。减法还要考虑负数（如果需要的话）。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线段树优化建图</title>
      <link href="/2021/08/13/%E7%BA%BF%E6%AE%B5%E6%A0%91%E4%BC%98%E5%8C%96%E5%BB%BA%E5%9B%BE/index/"/>
      <url>/2021/08/13/%E7%BA%BF%E6%AE%B5%E6%A0%91%E4%BC%98%E5%8C%96%E5%BB%BA%E5%9B%BE/index/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">5e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXedge = <span class="number">3e7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> head[MAXn * <span class="number">11</span> + <span class="number">10</span>], cntnex, nex[MAXedge + <span class="number">10</span>], to[MAXedge + <span class="number">10</span>]; <span class="keyword">bool</span> wei[MAXedge + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">nex[++cntnex] = head[u];</span><br><span class="line">head[u] = cntnex;</span><br><span class="line">to[cntnex] = v;</span><br><span class="line">wei[cntnex] = w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, root;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> l, r, idx;</span><br><span class="line">&#125;out[MAXn * <span class="number">4</span> + <span class="number">10</span>], in[MAXn * <span class="number">4</span> + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> cntnd;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BuildOut</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">out[id].idx = ++cntnd;</span><br><span class="line">out[id].l = l;</span><br><span class="line">out[id].r = r;</span><br><span class="line"><span class="keyword">if</span> (l == r) &#123;</span><br><span class="line"><span class="built_in">Insert</span>(l, out[id].idx, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">BuildOut</span>(id &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">BuildOut</span>((id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">Insert</span>(out[id &lt;&lt; <span class="number">1</span>].idx, out[id].idx, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">Insert</span>(out[(id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>].idx, out[id].idx, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BuildIn</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">in[id].idx = ++cntnd;</span><br><span class="line">in[id].l = l;</span><br><span class="line">in[id].r = r;</span><br><span class="line"><span class="keyword">if</span> (l == r) &#123;</span><br><span class="line"><span class="built_in">Insert</span>(in[id].idx, <span class="number">10</span> * n + l, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">BuildIn</span>(id &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">BuildIn</span>((id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">Insert</span>(in[id].idx, in[id &lt;&lt; <span class="number">1</span>].idx, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">Insert</span>(in[id].idx, in[(id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>].idx, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cntqin, qin[MAXn + <span class="number">10</span>], cntqout, qout[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetSecIn</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (in[id].l &gt;= l &amp;&amp; in[id].r &lt;= r) &#123;</span><br><span class="line">qin[++cntqin] = in[id].idx;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mid = (in[id].l + in[id].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (mid &gt;= l) &#123;</span><br><span class="line"><span class="built_in">GetSecIn</span>(id &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (mid + <span class="number">1</span> &lt;= r) &#123;</span><br><span class="line"><span class="built_in">GetSecIn</span>((id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>, l, r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetSecOut</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (out[id].l &gt;= l &amp;&amp; out[id].r &lt;= r) &#123;</span><br><span class="line">qout[++cntqout] = out[id].idx;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mid = (out[id].l + out[id].r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (mid &gt;= l) &#123;</span><br><span class="line"><span class="built_in">GetSecOut</span>(id &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (mid + <span class="number">1</span> &lt;= r) &#123;</span><br><span class="line"><span class="built_in">GetSecOut</span>((id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>, l, r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertSec</span><span class="params">(<span class="keyword">int</span> l1, <span class="keyword">int</span> r1, <span class="keyword">int</span> l2, <span class="keyword">int</span> r2)</span> </span>&#123;</span><br><span class="line">cntqin = cntqout = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">GetSecOut</span>(<span class="number">1</span>, l2, r2);</span><br><span class="line"><span class="built_in">GetSecIn</span>(<span class="number">1</span>, l1, r1);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cntqout; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cntqin; ++j) &#123;</span><br><span class="line"><span class="built_in">Insert</span>(qout[i], qin[j], <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[MAXn * <span class="number">11</span> + <span class="number">10</span>]; <span class="keyword">int</span> dis[MAXn * <span class="number">11</span> + <span class="number">10</span>];</span><br><span class="line">priority_queue&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> root)</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(dis, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line">dis[root] = <span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(<span class="number">0</span>, root));</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line"><span class="keyword">int</span> cur = q.<span class="built_in">top</span>().second; q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span> (vis[cur]) <span class="keyword">continue</span>;</span><br><span class="line">vis[cur] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (dis[to[i]] &gt; dis[cur] + wei[i]) &#123;</span><br><span class="line">dis[to[i]] = dis[cur] + wei[i];</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(-dis[to[i]], to[i]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(m), <span class="built_in">read</span>(root);</span><br><span class="line">cntnd = n;</span><br><span class="line"><span class="built_in">BuildOut</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line"><span class="built_in">BuildIn</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, l1, r1, l2, r2; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(l1), <span class="built_in">read</span>(r1), <span class="built_in">read</span>(l2), <span class="built_in">read</span>(r2);</span><br><span class="line"><span class="built_in">InsertSec</span>(l1, r1, l2, r2);</span><br><span class="line"><span class="built_in">InsertSec</span>(l2, r2, l1, r1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">Insert</span>(i, <span class="number">10</span> * n + i, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">Insert</span>(<span class="number">10</span> * n + i, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Dijkstra</span>(root);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">10</span> * n + <span class="number">1</span>; i &lt;= <span class="number">11</span> * n; ++i) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, dis[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基环树</title>
      <link href="/2021/08/12/%E5%9F%BA%E7%8E%AF%E6%A0%91/index/"/>
      <url>/2021/08/12/%E5%9F%BA%E7%8E%AF%E6%A0%91/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1453-城市环路"><a href="https://www.luogu.com.cn/problem/P1453">P1453 城市环路</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = MAXn;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> head[MAXn + <span class="number">10</span>], cntnex, nex[MAXm * <span class="number">2</span> + <span class="number">10</span>], to[MAXm * <span class="number">2</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">nex[++cntnex] = head[u];</span><br><span class="line">head[u] = cntnex;</span><br><span class="line">to[cntnex] = v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> k;</span><br><span class="line"><span class="keyword">int</span> n, a[MAXn + <span class="number">10</span>], deg[MAXn + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">bool</span> vis[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> cntring, ring[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EvaRing</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (deg[i] == <span class="number">1</span>) &#123;</span><br><span class="line">q.<span class="built_in">push</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cur;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">cur = q.<span class="built_in">front</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line">vis[cur] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (!vis[to[i]]) &#123;</span><br><span class="line">--deg[to[i]];</span><br><span class="line"><span class="keyword">if</span> (deg[to[i]] == <span class="number">1</span>) &#123;</span><br><span class="line">q.<span class="built_in">push</span>(to[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (deg[i] == <span class="number">2</span>) &#123;</span><br><span class="line">vis[i] = <span class="number">1</span>;</span><br><span class="line">ring[++cntring] = i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> ok = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (ok) &#123;</span><br><span class="line">ok = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[ring[cntring]]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (vis[to[i]] || deg[to[i]] == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">vis[to[i]] = <span class="number">1</span>;</span><br><span class="line">ring[++cntring] = to[i];</span><br><span class="line">ok = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> d[MAXn + <span class="number">10</span>][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">vis[cur] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (vis[to[i]] || deg[to[i]] == <span class="number">2</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">dp</span>(to[i]);</span><br><span class="line">d[cur][<span class="number">0</span>] += <span class="built_in">max</span>(d[to[i]][<span class="number">1</span>], d[to[i]][<span class="number">0</span>]);</span><br><span class="line">d[cur][<span class="number">1</span>] += d[to[i]][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line">d[cur][<span class="number">1</span>] += a[cur];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dp</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(vis));</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cntring; ++i) &#123;</span><br><span class="line"><span class="built_in">dp</span>(ring[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> f[MAXn + <span class="number">10</span>][<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dp2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">f[<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>] = d[ring[<span class="number">1</span>]][<span class="number">0</span>];</span><br><span class="line">f[<span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>] = d[ring[<span class="number">1</span>]][<span class="number">1</span>];</span><br><span class="line">f[<span class="number">1</span>][<span class="number">0</span>][<span class="number">1</span>] = f[<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>] = -INF;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= cntring; ++i) &#123;</span><br><span class="line">f[i][<span class="number">0</span>][<span class="number">0</span>] = <span class="built_in">max</span>(f[i - <span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>], f[i - <span class="number">1</span>][<span class="number">0</span>][<span class="number">1</span>]) + d[ring[i]][<span class="number">0</span>];</span><br><span class="line">f[i][<span class="number">0</span>][<span class="number">1</span>] = f[i - <span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>] + d[ring[i]][<span class="number">1</span>];</span><br><span class="line">f[i][<span class="number">1</span>][<span class="number">0</span>] = <span class="built_in">max</span>(f[i - <span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>], f[i - <span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>]) + d[ring[i]][<span class="number">0</span>];</span><br><span class="line">f[i][<span class="number">1</span>][<span class="number">1</span>] = f[i - <span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>] + d[ring[i]][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">max</span>(<span class="built_in">max</span>(f[cntring][<span class="number">0</span>][<span class="number">0</span>], f[cntring][<span class="number">0</span>][<span class="number">1</span>]), f[cntring][<span class="number">1</span>][<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, u, v; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(u), <span class="built_in">read</span>(v);</span><br><span class="line">++u; ++v;</span><br><span class="line">++deg[u]; ++deg[v];</span><br><span class="line"><span class="built_in">Insert</span>(u, v); <span class="built_in">Insert</span>(v, u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;k);</span><br><span class="line"><span class="built_in">EvaRing</span>();</span><br><span class="line"><span class="built_in">Dp</span>();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.1lf\n&quot;</span>, (<span class="keyword">double</span>)<span class="built_in">Dp2</span>() * k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="基环树求环长度和环上每个节点前的边的长度：">基环树求环长度和环上每个节点前的边的长度：</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> cntinring, ring[MAXnd + <span class="number">10</span>], ringdis;</span><br><span class="line"><span class="keyword">int</span> ndwei[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EvaRing</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> fromedge, <span class="keyword">int</span> begin)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (iscut[i] || i == (fromedge ^ <span class="number">1</span>)) <span class="keyword">continue</span>;</span><br><span class="line">        ring[++cntinring] = to[i];</span><br><span class="line">        ringdis += wei[i];</span><br><span class="line">        ndwei[to[i]] = wei[i];</span><br><span class="line">        <span class="keyword">if</span> (to[i] != begin) <span class="built_in">EvaRing</span>(to[i], i, begin);</span><br><span class="line">        <span class="keyword">if</span> (cur == begin) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cdq解三维偏序</title>
      <link href="/2021/08/10/Cdq%E8%A7%A3%E4%B8%89%E7%BB%B4%E5%81%8F%E5%BA%8F/index/"/>
      <url>/2021/08/10/Cdq%E8%A7%A3%E4%B8%89%E7%BB%B4%E5%81%8F%E5%BA%8F/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3810-【模板】三维偏序（陌上花开）"><a href="https://www.luogu.com.cn/problem/P3810">P3810 【模板】三维偏序（陌上花开）</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXk = <span class="number">2e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> top, t[MAXk + <span class="number">10</span>];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x &amp; (-x))</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (p &lt;= top) &#123;</span><br><span class="line">t[p] += v;</span><br><span class="line">p += <span class="built_in">lowbit</span>(p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EvaSum</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (p) &#123;</span><br><span class="line">ans += t[p];</span><br><span class="line">p -= <span class="built_in">lowbit</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Ele</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> a, b, c, cnt, ans;</span><br><span class="line">&#125;eletmp[MAXn + <span class="number">10</span>], ele[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmpc</span><span class="params">(Ele x, Ele y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x.c == y.c) &#123;</span><br><span class="line"><span class="keyword">if</span> (x.b == y.b) &#123;</span><br><span class="line"><span class="keyword">return</span> x.a &lt; y.a;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> x.b &lt; y.b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x.c &lt; y.c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmpb</span><span class="params">(Ele x, Ele y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x.b == y.b) &#123;</span><br><span class="line"><span class="keyword">return</span> x.a &lt; y.a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> x.b &lt; y.b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cdq</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (l == r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">cdq</span>(l, mid); <span class="built_in">cdq</span>(mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="keyword">int</span> j = l;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = mid + <span class="number">1</span>; i &lt;= r; ++i) &#123;</span><br><span class="line"><span class="keyword">while</span> (j &lt;= mid &amp;&amp; ele[i].b &gt;= ele[j].b) &#123;</span><br><span class="line"><span class="built_in">Add</span>(ele[j].a, ele[j].cnt);</span><br><span class="line">++j;</span><br><span class="line">&#125;</span><br><span class="line">ele[i].ans += <span class="built_in">EvaSum</span>(ele[i].a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt; j; ++i) &#123;</span><br><span class="line"><span class="built_in">Add</span>(ele[i].a, -ele[i].cnt);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">inplace_merge</span>(ele + l, ele + <span class="number">1</span> + mid, ele + <span class="number">1</span> + r, cmpb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ans[MAXn + <span class="number">10</span>], m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(k);</span><br><span class="line">top = k;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(eletmp[i].a), <span class="built_in">read</span>(eletmp[i].b), <span class="built_in">read</span>(eletmp[i].c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(eletmp + <span class="number">1</span>, eletmp + <span class="number">1</span> + n, cmpc);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">++j;</span><br><span class="line"><span class="keyword">if</span> (eletmp[i].a != eletmp[i + <span class="number">1</span>].a || </span><br><span class="line">eletmp[i].b != eletmp[i + <span class="number">1</span>].b || </span><br><span class="line">eletmp[i].c != eletmp[i + <span class="number">1</span>].c) &#123;</span><br><span class="line">++m;</span><br><span class="line">ele[m].a = eletmp[i].a;</span><br><span class="line">ele[m].b = eletmp[i].b;</span><br><span class="line">ele[m].c = eletmp[i].c;</span><br><span class="line">ele[m].cnt = j;</span><br><span class="line">j = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cdq</span>(<span class="number">1</span>, m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">ans[ele[i].ans + ele[i].cnt - <span class="number">1</span>] += ele[i].cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三分</title>
      <link href="/2021/08/10/%E4%B8%89%E5%88%86/index/"/>
      <url>/2021/08/10/%E4%B8%89%E5%88%86/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3382-【模板】三分法"><a href="https://www.luogu.com.cn/problem/P3382">P3382 【模板】三分法</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">13</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> EPS = <span class="number">1e-6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> l, r, a[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">f</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = n; ~i; --i) &#123;</span><br><span class="line">ans = ans * x + a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ThreeDiv</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (r - l &lt; EPS) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">double</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">f</span>(mid - EPS) &gt; <span class="built_in">f</span>(mid + EPS)) &#123;</span><br><span class="line">r = mid;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">l = mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">ThreeDiv</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%lf%lf&quot;</span>, &amp;n, &amp;l, &amp;r);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = n; ~i; --i) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">ThreeDiv</span>();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.5lf\n&quot;</span>, l);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分</title>
      <link href="/2021/08/10/%E4%BA%8C%E5%88%86/index/"/>
      <url>/2021/08/10/%E4%BA%8C%E5%88%86/index/</url>
      
        <content type="html"><![CDATA[<h4 id="重点：">重点：</h4><ol><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">mid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">mi</span><span class="mord mathnormal">d</span></span></span></span> 取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo>+</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">l+r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> 还是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mo>+</mo><mi>r</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">l+r+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</p></li><li><p>&quot; <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo></mrow><annotation encoding="application/x-tex">=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span></span></span></span> &quot; 的话应该算那种情况。</p></li></ol><h4 id="代码：">代码：</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>);<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T x = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (c ^ <span class="number">48</span>);&#125;a = f ? -x : x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, x, arr[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">a</span><span class="params">()</span> </span>&#123;<span class="comment">//大于等于中最小的(lower_bound)</span></span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (arr[mid] &gt;= x) &#123;</span><br><span class="line">r = mid;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">b</span><span class="params">()</span> </span>&#123;<span class="comment">//大于中最小的(upper_bound)</span></span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (arr[mid] &gt; x) &#123;</span><br><span class="line">r = mid;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">c</span><span class="params">()</span> </span>&#123;<span class="comment">//小于中最大的</span></span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (arr[mid] &gt;= x) &#123;</span><br><span class="line">r = mid - <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">l = mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">d</span><span class="params">()</span> </span>&#123;<span class="comment">//小于等于中最大的</span></span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (arr[mid] &gt; x) &#123;</span><br><span class="line">r = mid - <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">l = mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(x);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d\n&quot;</span>, <span class="built_in">a</span>(), <span class="built_in">b</span>(), <span class="built_in">c</span>(), <span class="built_in">d</span>());</span><br><span class="line"><span class="comment">// printf(&quot;%d %d\n&quot;, int(lower_bound(arr + 1, arr + 1 + n, x) - arr), int(upper_bound(arr + 1, arr + 1 + n, x) - arr));</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结果：">结果：</h4><p><img src="https://figurebed-1306986731.file.myqcloud.com/blog/2021/08/10/%E4%BA%8C%E5%88%86/%E4%BA%8C%E5%88%86.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符串哈希解最小循环节</title>
      <link href="/2021/08/10/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C%E8%A7%A3%E6%9C%80%E5%B0%8F%E5%BE%AA%E7%8E%AF%E8%8A%82/index/"/>
      <url>/2021/08/10/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C%E8%A7%A3%E6%9C%80%E5%B0%8F%E5%BE%AA%E7%8E%AF%E8%8A%82/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3538-POI2012-OKR-A-Horrible-Poem"><a href="https://www.luogu.com.cn/problem/P3538">P3538 POI2012\OKR-A Horrible Poem</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">5e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BASE = <span class="number">107</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, cntp, p[MAXn + <span class="number">10</span>], minpf[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> notp[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LS</span><span class="params">(<span class="keyword">int</span> up)</span> </span>&#123;</span><br><span class="line">notp[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= up; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!notp[i]) &#123;</span><br><span class="line">p[++cntp] = i;</span><br><span class="line">minpf[i] = i;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">int</span> up2 = up / i;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cntp &amp;&amp; p[j] &lt;= up2; ++j) &#123;</span><br><span class="line">notp[i * p[j]] = <span class="number">1</span>;</span><br><span class="line">minpf[i * p[j]] = p[j];</span><br><span class="line"><span class="keyword">if</span> (!(i % p[j])) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> hashpre[MAXn + <span class="number">10</span>], poww[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> ((hashpre[r] - hashpre[l - <span class="number">1</span>] * poww[r - l + <span class="number">1</span>]) % MOD + MOD) % MOD;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> str[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line"><span class="built_in">LS</span>(n);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">hashpre[i] = (hashpre[i - <span class="number">1</span>] * BASE + str[i] - <span class="string">&#x27;a&#x27;</span>) % MOD;</span><br><span class="line">&#125;</span><br><span class="line">poww[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">poww[i] = (poww[i - <span class="number">1</span>] * BASE) % MOD;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">read</span>(m);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="keyword">int</span> l, r, len, ans;</span><br><span class="line"><span class="built_in">read</span>(l), <span class="built_in">read</span>(r);</span><br><span class="line">ans = len = r - l + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">hash</span>(l + <span class="number">1</span>, r) == <span class="built_in">hash</span>(l, r - <span class="number">1</span>)) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">while</span> (len &gt; <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">hash</span>(l + ans / minpf[len], r) == <span class="built_in">hash</span>(l, r - ans / minpf[len])) &#123;</span><br><span class="line">ans /= minpf[len];<span class="comment">//ans: 循环节长度</span></span><br><span class="line">&#125;<span class="comment">//minpf: 最小质因数，循环次数</span></span><br><span class="line">len /= minpf[len];<span class="comment">//len: 无实际意义，用于提取所有质因数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>整体二分解静态区间第k小</title>
      <link href="/2021/08/10/%E6%95%B4%E4%BD%93%E4%BA%8C%E5%88%86%E8%A7%A3%E9%9D%99%E6%80%81%E5%8C%BA%E9%97%B4%E7%AC%ACk%E5%B0%8F/index/"/>
      <url>/2021/08/10/%E6%95%B4%E4%BD%93%E4%BA%8C%E5%88%86%E8%A7%A3%E9%9D%99%E6%80%81%E5%8C%BA%E9%97%B4%E7%AC%ACk%E5%B0%8F/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3834【模板】可持久化线段树-2（主席树）"><a href="https://www.luogu.com.cn/problem/P3834">P3834【模板】可持久化线段树 2（主席树）</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">2e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = <span class="number">2e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXai = <span class="number">1e9</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>);<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T x = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + c - <span class="string">&#x27;0&#x27;</span>;&#125;a = f ? -x : x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> top, t[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x) &amp; (-(x)))</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BuildUseSum</span><span class="params">(<span class="keyword">int</span> *sum)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= top; ++i) &#123;</span><br><span class="line">t[i] = sum[i] - sum[i - <span class="built_in">lowbit</span>(i)];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (p &lt;= top) &#123;</span><br><span class="line">t[p] += v;</span><br><span class="line">p += <span class="built_in">lowbit</span>(p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EvaSum</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (p) &#123;</span><br><span class="line">ans += t[p];</span><br><span class="line">p -= <span class="built_in">lowbit</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, cnt, ans[MAXm + <span class="number">10</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Ele</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> idx, v, l, r, opt;</span><br><span class="line"><span class="built_in">Ele</span>(): <span class="built_in">idx</span>(<span class="number">0</span>), <span class="built_in">v</span>(<span class="number">0</span>), <span class="built_in">l</span>(<span class="number">0</span>), <span class="built_in">r</span>(<span class="number">0</span>), <span class="built_in">opt</span>(<span class="number">0</span>) &#123;&#125;</span><br><span class="line"><span class="built_in">Ele</span>(<span class="keyword">int</span> idx_, <span class="keyword">int</span> v_, <span class="keyword">int</span> l_, <span class="keyword">int</span> r_, <span class="keyword">int</span> opt_): </span><br><span class="line"><span class="built_in">idx</span>(idx_), <span class="built_in">v</span>(v_), <span class="built_in">l</span>(l_), <span class="built_in">r</span>(r_), <span class="built_in">opt</span>(opt_) &#123;&#125;</span><br><span class="line">&#125;a[MAXn + MAXm + <span class="number">10</span>], a1[MAXn + MAXm + <span class="number">10</span>], a2[MAXn + MAXm + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Div</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (l &gt; r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (L == R) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = l; i &lt;= r; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i].opt) &#123;</span><br><span class="line">ans[a[i].idx] = L;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (L + R) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> cnt1 = <span class="number">0</span>; <span class="keyword">int</span> cnt2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = l; i &lt;= r; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!a[i].opt) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i].v &lt;= mid) &#123;</span><br><span class="line">a1[++cnt1] = a[i];</span><br><span class="line"><span class="built_in">Add</span>(a[i].idx, <span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">a2[++cnt2] = a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="built_in">EvaSum</span>(a[i].r) - <span class="built_in">EvaSum</span>(a[i].l - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (a[i].v &lt;= x) &#123;</span><br><span class="line">a1[++cnt1] = a[i];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">a[i].v -= x;</span><br><span class="line">a2[++cnt2] = a[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cnt1; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!a1[i].opt) &#123;</span><br><span class="line"><span class="built_in">Add</span>(a1[i].idx, <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cnt1; ++i) &#123;</span><br><span class="line">a[l + i - <span class="number">1</span>] = a1[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cnt2; ++i) &#123;</span><br><span class="line">a[l + cnt1 + i - <span class="number">1</span>] = a2[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Div</span>(L, mid, l, l + cnt1 - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">Div</span>(mid + <span class="number">1</span>, R, l + cnt1, r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(m);</span><br><span class="line">top = n;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, v; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(v);</span><br><span class="line">a[++cnt] = <span class="built_in">Ele</span>(i, v, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, l, r, k; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(l), <span class="built_in">read</span>(r), <span class="built_in">read</span>(k);</span><br><span class="line">a[++cnt] = <span class="built_in">Ele</span>(i, k, l, r, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Div</span>(-MAXai, MAXai, <span class="number">1</span>, cnt);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最长上升子序列(lis)</title>
      <link href="/2021/08/10/%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97(lis)/index/"/>
      <url>/2021/08/10/%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97(lis)/index/</url>
      
        <content type="html"><![CDATA[<p>本解法时间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，还有一种 <strong>DP</strong> 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的求法，感兴趣的可以上网了解一下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, s[MAXn + <span class="number">10</span>], cnt;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(a);</span><br><span class="line"><span class="keyword">if</span> (a &gt; s[cnt]) &#123;</span><br><span class="line">s[++cnt] = a;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">*<span class="built_in">lower_bound</span>(s + <span class="number">1</span>, s + <span class="number">1</span> + cnt, a) = a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, cnt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>错排问题</title>
      <link href="/2021/08/10/%E9%94%99%E6%8E%92%E9%97%AE%E9%A2%98/index/"/>
      <url>/2021/08/10/%E9%94%99%E6%8E%92%E9%97%AE%E9%A2%98/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1595-信封问题"><a href="https://www.luogu.com.cn/problem/P1595">P1595 信封问题</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, a[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">a[<span class="number">1</span>] = <span class="number">0</span>; a[<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">a[i] = (i - <span class="number">1</span>) * (a[i - <span class="number">2</span>] + a[i - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, a[n]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ac自动机</title>
      <link href="/2021/07/21/Ac%E8%87%AA%E5%8A%A8%E6%9C%BA/index/"/>
      <url>/2021/07/21/Ac%E8%87%AA%E5%8A%A8%E6%9C%BA/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3808-【模板】AC自动机（简单版）"><a href="https://www.luogu.com.cn/problem/P3808">P3808 【模板】AC自动机（简单版）</a></h2><h2 id="P3796-【模板】AC自动机（加强版）"><a href="https://www.luogu.com.cn/problem/P3796">P3796 【模板】AC自动机（加强版）</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXtxtlen = <span class="number">1e6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXwrdlen = <span class="number">70</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXwrdcnt = <span class="number">150</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXnd = <span class="number">1e6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cntnd, son[MAXnd + <span class="number">10</span>][<span class="number">26</span>], mat[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> txt[MAXtxtlen + <span class="number">10</span>], wrd[MAXwrdcnt + <span class="number">10</span>][MAXwrdlen + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> ltxt, lwrd;</span><br><span class="line"><span class="keyword">int</span> fail[MAXnd + <span class="number">10</span>], ndidx[MAXwrdcnt + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">(queue&lt;<span class="keyword">int</span>&gt; &amp;q)</span> </span>&#123;</span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; empty;</span><br><span class="line"><span class="built_in">swap</span>(q, empty);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cntnd = ltxt = lwrd = n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(son, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(son));</span><br><span class="line"><span class="built_in">memset</span>(mat, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(mat));</span><br><span class="line"><span class="built_in">memset</span>(txt, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(txt));</span><br><span class="line"><span class="built_in">memset</span>(wrd, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(wrd));</span><br><span class="line"><span class="built_in">memset</span>(fail, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(fail));</span><br><span class="line"><span class="built_in">memset</span>(ndidx, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(ndidx));</span><br><span class="line"><span class="built_in">memset</span>(mat, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(mat));</span><br><span class="line"><span class="built_in">clear</span>(q);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> *wrd, <span class="keyword">int</span> wrdidx)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> cur = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lwrd; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (son[cur][wrd[i] - <span class="number">97</span>]) &#123;</span><br><span class="line">cur = son[cur][wrd[i] - <span class="number">97</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">cur = son[cur][wrd[i] - <span class="number">97</span>] = ++cntnd;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ndidx[wrdidx] = cur;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetFail</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (son[<span class="number">0</span>][i]) &#123;</span><br><span class="line">q.<span class="built_in">push</span>(son[<span class="number">0</span>][i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line"><span class="keyword">int</span> cur = q.<span class="built_in">front</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (son[cur][i]) &#123;</span><br><span class="line">fail[son[cur][i]] = son[fail[cur]][i];</span><br><span class="line">q.<span class="built_in">push</span>(son[cur][i]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">son[cur][i] = son[fail[cur]][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Work</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> cur = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= ltxt; ++i) &#123;</span><br><span class="line">cur = son[cur][txt[i] - <span class="number">97</span>];</span><br><span class="line"><span class="keyword">int</span> x = cur;</span><br><span class="line"><span class="keyword">while</span> (x) &#123;</span><br><span class="line">++mat[x];</span><br><span class="line">x = fail[x];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="built_in">Init</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">if</span> (!n) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, wrd[i] + <span class="number">1</span>);</span><br><span class="line">lwrd = <span class="built_in">strlen</span>(wrd[i] + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">Insert</span>(wrd[i], i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">GetFail</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, txt + <span class="number">1</span>);</span><br><span class="line">ltxt = <span class="built_in">strlen</span>(txt + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">Work</span>();</span><br><span class="line"><span class="keyword">int</span> mx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (mat[ndidx[i]] &gt; mx) &#123;</span><br><span class="line">mx = mat[ndidx[i]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, mx);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (mat[ndidx[i]] == mx) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, wrd[i] + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每个字符串只算一次的 <code>Work</code> 函数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Work</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= ltxt; ++i) &#123;</span><br><span class="line">j = son[j][txt[i] - <span class="number">97</span>];</span><br><span class="line"><span class="keyword">int</span> k = j;</span><br><span class="line"><span class="keyword">while</span> (cnt[k] &amp;&amp; k) &#123;</span><br><span class="line">ans += cnt[k];</span><br><span class="line">cnt[k] = <span class="number">0</span>;</span><br><span class="line">k = fail[k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Luogu CF727C Guess the Array</title>
      <link href="/2021/07/21/Guess%20the%20Array/index/"/>
      <url>/2021/07/21/Guess%20the%20Array/index/</url>
      
        <content type="html"><![CDATA[<h2 id="CF727C-Guess-the-Array"><a href="https://www.luogu.com.cn/problem/CF727C">CF727C Guess the Array</a></h2><p><strong>注：本文含交互题 endl 与 fflush 不同种类的配合使用效果的 测试（见 “四”）</strong></p><h2 id="一-审题：">一. 审题：</h2><h4 id="1-前提条件：">1. 前提条件：</h4><ul><li>一个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 代表数组中数的个数。</li></ul><h4 id="2-询问-输入：">2. 询问 &amp; 输入：</h4><ul><li><p>询问：</p><p>输出两个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 。代表询问 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">a_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">a_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 的和。</p><p>格式：<code>? x y</code></p></li><li><p>输入：</p><p>读入一个数代表这两个数的和。</p></li></ul><h4 id="3-输出：">3. 输出：</h4><ul><li>数组中所有数的值。格式：<code>! a[1] a[2] a[3] ... a[n]</code></li></ul><h2 id="二-思路">二. 思路</h2><h4 id="1-思考解法">1. 思考解法</h4><p>我们可以不一口气把 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 次都询问完（当然最后肯定是都要询问完的），既然 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个数询问 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 次一定有解，那么我们可以先询问 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">a_1+a_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>2</mn></msub><mo>+</mo><msub><mi>a</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">a_2+a_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 以及 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>3</mn></msub><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a_3+a_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。这样就能先计算出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">a_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">a_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 以及 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">a_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>只要有了一个数的具体值，我们每询问一次就可以算出一个数的具体值，这样一气呵成，避免了一口气询问完后堆积过多条件无从下手的情况。</p><h4 id="2-具体实现">2. 具体实现</h4><ol><li><p>前三个数：</p><p>解法有很多，如</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>    </mtext><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mi>a</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mo>+</mo><mi>z</mi><mo>=</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>+</mo><mi>x</mi><mo>=</mo><mi>c</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\ \ \ \ \begin{cases}x+y=a\\y+z=b\\z+x=c\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">a</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">b</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>⟹</mo><mn>2</mn><mi>x</mi><mo>+</mo><mn>2</mn><mi>y</mi><mo>+</mo><mn>2</mn><mi>z</mi><mo>=</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo>+</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">\Longrightarrow 2x+2y+2z=a+b+c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>⟹</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo>+</mo><mi>z</mi><mo>=</mo><mfrac><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mo>+</mo><mi>c</mi></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\Longrightarrow x+y+z=\dfrac{a+b+c}{2} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>⟹</mo><mi>x</mi><mo>=</mo><mfrac><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mo>+</mo><mi>c</mi></mrow><mn>2</mn></mfrac><mo>−</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">\Longrightarrow x=\dfrac{a+b+c}{2}-b </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0574em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span> 同理。</p></li><li><p>剩下的数：</p><p>接下来询问<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">a_1+a_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">a_1+a_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> . . . <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_1+a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p></li></ol><h2 id="三-代码">三. 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> add12,add13,add23;<span class="comment">//addxy:第x个和第y个数的和</span></span><br><span class="line"><span class="keyword">int</span> add[MAXn + <span class="number">10</span>];<span class="comment">//add[x]:第1个和第x个数的和</span></span><br><span class="line"><span class="keyword">int</span> first;<span class="comment">//第一个数的值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;? 1 2&quot;</span> &lt;&lt; endl;<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;add12);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;? 2 3&quot;</span> &lt;&lt; endl;    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;add23);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;? 1 3&quot;</span> &lt;&lt; endl;<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;add13);<span class="comment">//这里用了endl就不需要fflush(stdout)了</span></span><br><span class="line">    first = (add13 - add23 + add12) &gt;&gt; <span class="number">1</span>;<span class="comment">//读入前三个数间两两值得和，并计算第一个数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">4</span> ; i &lt;= n; ++i) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;? 1 &quot;</span> &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;add[i]);</span><br><span class="line">    &#125;<span class="comment">//读入第1个数和第4-n个数间两两的值</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;! &quot;</span> &lt;&lt; first;<span class="built_in">fflush</span>(stdout);</span><br><span class="line">    cout &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; add12 - first;<span class="built_in">fflush</span>(stdout);</span><br><span class="line">    cout &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; add23 - add12 + first;<span class="built_in">fflush</span>(stdout);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">4</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; add[i] - first;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四-endl-与-fflush">四. endl 与 fflush</h2><p>对交互题来说，弄清楚 <code>endl</code> 和 <code>fflush</code> 怎么用格外重要。不多废话了，直接摆上测试结果：</p><p><img src="https://figurebed-1306986731.file.myqcloud.com/blog/2021/07/21/Guess%20the%20Array/%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C.png" alt=""></p><p><strong>结论：</strong><code>endl</code> 后面 不用跟 <code>fflush</code>，但如果没有 <code>endl</code> （或是用 <code>printf</code>）要加上 <code>fflush(stdout)</code>。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Manacher</title>
      <link href="/2021/07/21/Manacher/index/"/>
      <url>/2021/07/21/Manacher/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3805-【模板】manacher-算法"><a href="https://www.luogu.com.cn/problem/P3805">P3805 【模板】manacher 算法</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e7</span> + <span class="number">1e6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> str[MAXn * <span class="number">2</span> + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> n, cntch;</span><br><span class="line"><span class="keyword">int</span> rad[MAXn * <span class="number">2</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Evarad</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">0</span>, l = <span class="number">0</span>, r = <span class="number">-1</span>; i &lt;= cntch; ++i) &#123;</span><br><span class="line">rad[i] = (i &gt; r) ? <span class="number">0</span> : <span class="built_in">min</span>(rad[l + r - i], r - i);</span><br><span class="line"><span class="keyword">while</span> (i - rad[i] &gt; <span class="number">0</span> &amp;&amp; i + rad[i] &lt; cntch &amp;&amp; str[i - rad[i] - <span class="number">1</span>] == str[i + rad[i] + <span class="number">1</span>]) &#123;</span><br><span class="line">++rad[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i + rad[i] &gt; r) &#123;</span><br><span class="line">r = i + rad[i];</span><br><span class="line">l = i - rad[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">str[<span class="number">0</span>] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="keyword">if</span> (ch &lt; <span class="string">&#x27;a&#x27;</span> || ch &gt; <span class="string">&#x27;z&#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">str[++cntch] = ch; str[++cntch] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Evarad</span>();</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= cntch; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span>) &#123;</span><br><span class="line">ans = <span class="built_in">max</span>(ans, <span class="number">2</span> * (rad[i] / <span class="number">2</span>) + <span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ans = <span class="built_in">max</span>(ans, <span class="number">2</span> * (rad[i] / <span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Splay</title>
      <link href="/2021/07/21/Splay/index/"/>
      <url>/2021/07/21/Splay/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3369-【模板】普通平衡树"><a href="https://www.luogu.com.cn/problem/P3369">P3369 【模板】普通平衡树</a></h2><h2 id="P3391-【模板】文艺平衡树"><a href="https://www.luogu.com.cn/problem/P3391">P3391 【模板】文艺平衡树</a></h2><h4 id="函数汇总：">函数汇总：</h4><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>h</mi><mi>e</mi><mi>c</mi><mi>k</mi><mo stretchy="false">(</mo><mi>i</mi><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">check(id)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal">ec</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>u</mi><mi>s</mi><mi>h</mi><mi>u</mi><mi>p</mi><mo stretchy="false">(</mo><mi>i</mi><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pushup(id)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span><span class="mord mathnormal">h</span><span class="mord mathnormal">u</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi><mo stretchy="false">(</mo><mi>i</mi><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">rotate(id)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ro</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi><mo stretchy="false">(</mo><mi>i</mi><mi>d</mi><mo separator="true">,</mo><mi>g</mi><mi>o</mi><mi>a</mi><mi>l</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">splay(id, goal)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.01968em;">pl</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>i</mi><mi>n</mi><mi>d</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">find(v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">in</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>v</mi><mi>a</mi><mi>P</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">EvaPre(v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">re</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mi>v</mi><mi>a</mi><mi>N</mi><mi>e</mi><mi>x</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">EvaNex(v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>n</mi><mi>s</mi><mi>e</mi><mi>r</mi><mi>t</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Insert(v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.02778em;">ser</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>e</mi><mi>l</mi><mi>e</mi><mi>t</mi><mi>e</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Delete(v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">De</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mi>a</mi><mi>l</mi><mi>t</mi><mi>o</mi><mi>R</mi><mi>a</mi><mi>n</mi><mi>k</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ValtoRank(v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">Va</span><span class="mord mathnormal">lt</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.03148em;">ank</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>a</mi><mi>n</mi><mi>k</mi><mi>t</mi><mi>o</mi><mi>V</mi><mi>a</mi><mi>l</mi><mo stretchy="false">(</mo><mi>r</mi><mi>a</mi><mi>n</mi><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">RanktoVal(rank)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.03148em;">ank</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mord mathnormal">Va</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03148em;">ank</span><span class="mclose">)</span></span></span></span></li></ul><p>文艺平衡树独有的：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>u</mi><mi>s</mi><mi>h</mi><mi>d</mi><mi>o</mi><mi>w</mi><mi>n</mi><mo stretchy="false">(</mo><mi>i</mi><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">pushdown(id)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span><span class="mord mathnormal">h</span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span></li><li>带 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>u</mi><mi>s</mi><mi>h</mi><mi>d</mi><mi>o</mi><mi>w</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">pushdown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span><span class="mord mathnormal">h</span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">n</span></span></span></span> 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>a</mi><mi>n</mi><mi>k</mi><mi>t</mi><mi>o</mi><mi>V</mi><mi>a</mi><mi>l</mi><mo stretchy="false">(</mo><mi>r</mi><mi>a</mi><mi>n</mi><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">RanktoVal(rank)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.03148em;">ank</span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mord mathnormal">Va</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03148em;">ank</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>e</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>e</mi><mi>r</mi><mo stretchy="false">(</mo><mi>r</mi><mi>a</mi><mi>n</mi><mi>k</mi><mo separator="true">,</mo><mi>r</mi><mi>a</mi><mi>n</mi><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Reverser(rank, rank)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.02778em;">erser</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03148em;">ank</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03148em;">ank</span><span class="mclose">)</span></span></span></span></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;class T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>; c = <span class="built_in">getchar</span>());<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T s = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>; c = <span class="built_in">getchar</span>()) &#123;s = (s &lt;&lt; <span class="number">3</span>) + (s &lt;&lt; <span class="number">1</span>) + c - <span class="string">&#x27;0&#x27;</span>;&#125;a = f ? -s : s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> root, cntnd;</span><br><span class="line"><span class="keyword">int</span> son[MAXn + <span class="number">10</span>][<span class="number">2</span>], fa[MAXn + <span class="number">10</span>], cnt[MAXn + <span class="number">10</span>], siz[MAXn + <span class="number">10</span>], val[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id == son[fa[id]][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">siz[id] = siz[son[id][<span class="number">0</span>]] + siz[son[id][<span class="number">1</span>]] + cnt[id];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = id, y = fa[x], z = fa[y]; <span class="keyword">bool</span> b = <span class="built_in">check</span>(x); <span class="keyword">int</span> s = son[x][b ^ <span class="number">1</span>];</span><br><span class="line">son[y][b] = s; fa[s] = y;</span><br><span class="line">son[z][<span class="built_in">check</span>(y)] = x; fa[x] = z;</span><br><span class="line">son[x][b ^ <span class="number">1</span>] = y; fa[y] = x;</span><br><span class="line"><span class="built_in">pushup</span>(y); <span class="built_in">pushup</span>(x); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> goal = <span class="number">0</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (fa[id] != goal) &#123;</span><br><span class="line"><span class="keyword">int</span> y = fa[id];</span><br><span class="line"><span class="keyword">if</span> (fa[y] != goal) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(id) == <span class="built_in">check</span>(y)) &#123;</span><br><span class="line"><span class="built_in">rotate</span>(y);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">rotate</span>(id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">rotate</span>(id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!goal) &#123;</span><br><span class="line">root = id;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> id = root;</span><br><span class="line"><span class="keyword">while</span> (son[id][val[id] &lt; v] &amp;&amp; val[id] != v) &#123;</span><br><span class="line">id = son[id][val[id] &lt; v];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">splay</span>(id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EvaPre</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="built_in">find</span>(v);</span><br><span class="line"><span class="keyword">if</span> (val[root] &lt; v) &#123;</span><br><span class="line"><span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> id = son[root][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">while</span> (son[id][<span class="number">1</span>]) &#123;</span><br><span class="line">id = son[id][<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EvaNex</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="built_in">find</span>(v);</span><br><span class="line"><span class="keyword">if</span> (val[root] &gt; v) &#123;</span><br><span class="line"><span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> id = son[root][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span> (son[id][<span class="number">0</span>]) &#123;</span><br><span class="line">id = son[id][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> id = root, f = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (val[id] != v &amp;&amp; id) &#123;</span><br><span class="line">f = id;</span><br><span class="line">id = son[id][val[id] &lt; v];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (id) &#123;</span><br><span class="line">++cnt[id];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">id = ++cntnd;</span><br><span class="line"><span class="keyword">if</span> (f) &#123;</span><br><span class="line">son[f][v &gt; val[f]] = id;</span><br><span class="line">&#125;</span><br><span class="line">fa[id] = f;</span><br><span class="line">son[id][<span class="number">0</span>] = son[id][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">cnt[id] = siz[id] = <span class="number">1</span>;</span><br><span class="line">val[id] = v; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">splay</span>(id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> pre = <span class="built_in">EvaPre</span>(v), nex = <span class="built_in">EvaNex</span>(v);</span><br><span class="line"><span class="built_in">splay</span>(pre); <span class="built_in">splay</span>(nex, pre);</span><br><span class="line"><span class="keyword">int</span> del = son[nex][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span> (cnt[del] &gt; <span class="number">1</span>) &#123;</span><br><span class="line">--cnt[del];</span><br><span class="line"><span class="built_in">splay</span>(del);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">son[nex][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ValtoRank</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="built_in">find</span>(v);</span><br><span class="line"><span class="keyword">if</span> (val[root] &gt;= v) &#123;</span><br><span class="line"><span class="keyword">return</span> siz[son[root][<span class="number">0</span>]] + <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> siz[son[root][<span class="number">0</span>]] + cnt[root] + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">RanktoId</span><span class="params">(<span class="keyword">int</span> rank)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> id = root;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (son[id][<span class="number">0</span>] &amp;&amp; rank &lt;= siz[son[id][<span class="number">0</span>]]) &#123; </span><br><span class="line">id = son[id][<span class="number">0</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (rank &gt; siz[son[id][<span class="number">0</span>]] + cnt[id]) &#123;</span><br><span class="line">rank -= siz[son[id][<span class="number">0</span>]] + cnt[id];    <span class="comment">//两者位置不能反</span></span><br><span class="line">id = son[id][<span class="number">1</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, opt, x;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line"><span class="built_in">Insert</span>(INF);</span><br><span class="line"><span class="built_in">Insert</span>(-INF);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(opt), <span class="built_in">read</span>(x);</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (opt) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">Insert</span>(x);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">Delete</span>(x);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">ValtoRank</span>(x) - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, val[<span class="built_in">RanktoId</span>(x + <span class="number">1</span>)]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, val[<span class="built_in">EvaPre</span>(x)]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, val[<span class="built_in">EvaNex</span>(x)]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文艺平衡树独有的：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> rev[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (rev[id]) &#123;</span><br><span class="line"><span class="built_in">swap</span>(son[id][<span class="number">0</span>], son[id][<span class="number">1</span>]);</span><br><span class="line">rev[son[id][<span class="number">0</span>]] ^= <span class="number">1</span>;</span><br><span class="line">rev[son[id][<span class="number">1</span>]] ^= <span class="number">1</span>;</span><br><span class="line">rev[id] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">RanktoId</span><span class="params">(<span class="keyword">int</span> rank)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> id = root;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="built_in">pushdown</span>(id);    <span class="comment">//add</span></span><br><span class="line"><span class="keyword">if</span> (son[id][<span class="number">0</span>] &amp;&amp; rank &lt;= siz[son[id][<span class="number">0</span>]]) &#123;</span><br><span class="line">id = son[id][<span class="number">0</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (rank &gt; siz[son[id][<span class="number">0</span>]] + cnt[id]) &#123;</span><br><span class="line">rank -= siz[son[id][<span class="number">0</span>]] + cnt[id];</span><br><span class="line">id = son[id][<span class="number">1</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Reverse</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> pre = <span class="built_in">RanktoId</span>(l - <span class="number">1</span>), nex = <span class="built_in">RanktoId</span>(r + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">splay</span>(pre); <span class="built_in">splay</span>(nex, pre);</span><br><span class="line">rev[son[nex][<span class="number">0</span>]] ^= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Treap</title>
      <link href="/2021/07/21/Treap/index/"/>
      <url>/2021/07/21/Treap/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3369-【模板】普通平衡树"><a href="https://www.luogu.com.cn/problem/P3369">P3369 【模板】普通平衡树</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">2147483647</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>; c = <span class="built_in">getchar</span>());<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T s = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>; c = <span class="built_in">getchar</span>()) &#123;s = (s &lt;&lt; <span class="number">3</span>) + (s &lt;&lt; <span class="number">1</span>) + c - <span class="string">&#x27;0&#x27;</span>;&#125;a = f ? -s : s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cntnd, val[MAXn + <span class="number">10</span>], cnt[MAXn + <span class="number">10</span>], siz[MAXn + <span class="number">10</span>], son[MAXn + <span class="number">10</span>][<span class="number">2</span>], rd[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">siz[id] = siz[son[id][<span class="number">0</span>]] + siz[son[id][<span class="number">1</span>]] + cnt[id];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> &amp;id, <span class="keyword">bool</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> s = son[id][b ^ <span class="number">1</span>];</span><br><span class="line">son[id][b ^ <span class="number">1</span>] = son[s][b];</span><br><span class="line">son[s][b] = id;</span><br><span class="line"><span class="built_in">pushup</span>(id);</span><br><span class="line"><span class="built_in">pushup</span>(s);</span><br><span class="line">id = s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> &amp;id, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!id) &#123;</span><br><span class="line">id = ++cntnd;</span><br><span class="line">val[cntnd] = v;</span><br><span class="line">cnt[cntnd] = <span class="number">1</span>;</span><br><span class="line">siz[cntnd] = <span class="number">1</span>;</span><br><span class="line">rd[cntnd] = <span class="built_in">rand</span>();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (val[id] == v) &#123;</span><br><span class="line">++cnt[id];</span><br><span class="line">++siz[id];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">bool</span> bol = val[id] &lt; v;</span><br><span class="line"><span class="built_in">Insert</span>(son[id][bol], v); </span><br><span class="line"><span class="keyword">if</span> (rd[son[id][bol]] &gt; rd[id]) &#123;</span><br><span class="line"><span class="built_in">rotate</span>(id, bol ^ <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">(<span class="keyword">int</span> &amp;id, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!id) &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (val[id] == v) &#123;</span><br><span class="line"><span class="keyword">if</span> (!son[id][<span class="number">0</span>] &amp;&amp; !son[id][<span class="number">1</span>]) &#123;</span><br><span class="line">--cnt[id]; --siz[id];</span><br><span class="line"><span class="keyword">if</span> (!siz[id]) &#123;</span><br><span class="line">id = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!son[id][<span class="number">0</span>] &amp;&amp; son[id][<span class="number">1</span>]) &#123;</span><br><span class="line"><span class="built_in">rotate</span>(id, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">Delete</span>(son[id][<span class="number">0</span>], v);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (son[id][<span class="number">0</span>] &amp;&amp; !son[id][<span class="number">1</span>]) &#123;</span><br><span class="line"><span class="built_in">rotate</span>(id, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">Delete</span>(son[id][<span class="number">1</span>], v);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">bool</span> bol = rd[son[id][<span class="number">0</span>]] &gt;= rd[son[id][<span class="number">1</span>]];</span><br><span class="line"><span class="built_in">rotate</span>(id, bol);</span><br><span class="line"><span class="built_in">Delete</span>(son[id][bol], v);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (val[id] &lt; v) &#123;</span><br><span class="line"><span class="built_in">Delete</span>(son[id][<span class="number">1</span>], v);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">Delete</span>(son[id][<span class="number">0</span>], v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ValtoRank</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!id) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (val[id] == v) &#123;</span><br><span class="line"><span class="keyword">return</span> siz[son[id][<span class="number">0</span>]] + <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (val[id] &lt; v) &#123;</span><br><span class="line"><span class="keyword">return</span> siz[son[id][<span class="number">0</span>]] + cnt[id] + <span class="built_in">ValtoRank</span>(son[id][<span class="number">1</span>], v);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">ValtoRank</span>(son[id][<span class="number">0</span>], v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">RanktoVal</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> rank)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!id) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-123456789</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (rank &lt;= siz[son[id][<span class="number">0</span>]]) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">RanktoVal</span>(son[id][<span class="number">0</span>], rank);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (rank &gt; siz[son[id][<span class="number">0</span>]] + cnt[id]) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">RanktoVal</span>(son[id][<span class="number">1</span>], rank - siz[son[id][<span class="number">0</span>]] - cnt[id]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> val[id];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EvaPre</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!id) &#123;</span><br><span class="line"><span class="keyword">return</span> -INF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (val[id] &gt;= v) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">EvaPre</span>(son[id][<span class="number">0</span>], v);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">max</span>(val[id], <span class="built_in">EvaPre</span>(son[id][<span class="number">1</span>], v));</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EvaNex</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!id) &#123;</span><br><span class="line"><span class="keyword">return</span> INF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (val[id] &lt;= v) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">EvaNex</span>(son[id][<span class="number">1</span>], v);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">min</span>(val[id], <span class="built_in">EvaNex</span>(son[id][<span class="number">0</span>], v));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> root, n, opt, x;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(opt), <span class="built_in">read</span>(x);</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (opt) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">Insert</span>(root, x);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">Delete</span>(root, x);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">ValtoRank</span>(root, x));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">RanktoVal</span>(root, x));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">EvaPre</span>(root, x));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">EvaNex</span>(root, x));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二叉搜索树</title>
      <link href="/2021/07/21/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/index/"/>
      <url>/2021/07/21/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P5076-【深基16-例7】普通二叉树（简化版）"><a href="https://www.luogu.com.cn/problem/P5076">P5076 【深基16.例7】普通二叉树（简化版）</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">2147483647</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>; c = <span class="built_in">getchar</span>());<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T s = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>; c = <span class="built_in">getchar</span>()) &#123;s = (s &lt;&lt; <span class="number">3</span>) + (s &lt;&lt; <span class="number">1</span>) + c - <span class="string">&#x27;0&#x27;</span>;&#125;a = f ? -s : s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> l, r, siz, cnt, val;</span><br><span class="line">&#125;;</span><br><span class="line">Node nd[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">++nd[id].siz;</span><br><span class="line"><span class="keyword">if</span> (nd[id].val == val) &#123;</span><br><span class="line">++nd[id].cnt;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (nd[id].val &lt; val) &#123;</span><br><span class="line"><span class="keyword">if</span> (!nd[id].r) &#123;</span><br><span class="line">nd[++cnt].val = val;</span><br><span class="line">nd[id].r = cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Insert</span>(nd[id].r, val);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (!nd[id].l) &#123;</span><br><span class="line">nd[++cnt].val = val;</span><br><span class="line">nd[id].l = cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Insert</span>(nd[id].l, val);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ValtoRank</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!id) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (nd[id].val == val) &#123;</span><br><span class="line"><span class="keyword">return</span> nd[nd[id].l].siz + <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (nd[id].val &lt; val) &#123;</span><br><span class="line"><span class="keyword">return</span> nd[nd[id].l].siz + nd[id].cnt + <span class="built_in">ValtoRank</span>(nd[id].r, val);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">ValtoRank</span>(nd[id].l, val);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">RanktoVal</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> rank)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!id) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-123456789</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (rank &lt;= nd[nd[id].l].siz) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">RanktoVal</span>(nd[id].l, rank);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (rank &gt; nd[nd[id].l].siz + nd[id].cnt) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">RanktoVal</span>(nd[id].r, rank - nd[nd[id].l].siz - nd[id].cnt);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> nd[id].val;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EvaPreVal</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!id) &#123;</span><br><span class="line"><span class="keyword">return</span> -INF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (nd[id].val &gt;= val) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">EvaPreVal</span>(nd[id].l, val);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">max</span>(nd[id].val, <span class="built_in">EvaPreVal</span>(nd[id].r, val));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EvaNexVal</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!id) &#123;</span><br><span class="line"><span class="keyword">return</span> INF;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (nd[id].val &lt;= val) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">EvaNexVal</span>(nd[id].r, val);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">min</span>(nd[id].val, <span class="built_in">EvaNexVal</span>(nd[id].l, val));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> root = <span class="number">1</span>, n, opt, x;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line">nd[<span class="number">1</span>].cnt = <span class="number">1</span>; nd[<span class="number">1</span>].l = <span class="number">2</span>; nd[<span class="number">1</span>].siz = <span class="number">2</span>; nd[<span class="number">1</span>].val = INF;</span><br><span class="line">nd[<span class="number">2</span>].cnt = <span class="number">1</span>; nd[<span class="number">2</span>].siz = <span class="number">1</span>; nd[<span class="number">2</span>].val = -INF;</span><br><span class="line">cnt += <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(opt), <span class="built_in">read</span>(x);</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (opt) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">ValtoRank</span>(root, x) - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">RanktoVal</span>(root, x + <span class="number">1</span>));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">EvaPreVal</span>(root, x));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">EvaNexVal</span>(root, x));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="built_in">Insert</span>(root, x);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>割点 &amp; 点双连通分量</title>
      <link href="/2021/07/21/%E5%89%B2%E7%82%B9%20&amp;%20%E7%82%B9%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/index/"/>
      <url>/2021/07/21/%E5%89%B2%E7%82%B9%20&amp;%20%E7%82%B9%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3388-【模板】割点（割顶）"><a href="https://www.luogu.com.cn/problem/P3388">P3388 【模板】割点（割顶）</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> cntdfs, dfs[MAXnd + <span class="number">10</span>], low[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> cntcut; bitset&lt;MAXnd + 10&gt; iscut;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> root)</span> </span>&#123;</span><br><span class="line">dfs[cur] = low[cur] = ++cntdfs;</span><br><span class="line"><span class="keyword">int</span> times = <span class="number">0</span>; <span class="keyword">bool</span> havcnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (dfs[to[i]]) &#123;</span><br><span class="line">low[cur] = <span class="built_in">min</span>(low[cur], dfs[to[i]]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">Tarjan</span>(to[i], root);</span><br><span class="line">low[cur] = <span class="built_in">min</span>(low[cur], low[to[i]]);</span><br><span class="line"><span class="keyword">if</span> (!havcnt) &#123;</span><br><span class="line"><span class="keyword">if</span> (low[to[i]] &gt;= dfs[cur]) &#123;</span><br><span class="line">++times;</span><br><span class="line"><span class="keyword">if</span> (cur != root || times &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">havcnt = <span class="number">1</span>;</span><br><span class="line">++cntcut;</span><br><span class="line">iscut[cur] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// ......</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!dfs[i]) &#123;</span><br><span class="line"><span class="built_in">Tarjan</span>(i, i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="T103492-【模板】点双连通分量"><a href="https://www.luogu.com.cn/problem/T103492">T103492 【模板】点双连通分量</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> cntdfs, dfs[MAXnd + <span class="number">10</span>], low[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> cntdcc; vector&lt;<span class="keyword">int</span>&gt; dcc[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> top, stk[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">dfs[cur] = low[cur] = ++cntdfs;</span><br><span class="line"><span class="keyword">if</span> (!head[cur]) &#123;</span><br><span class="line">dcc[++cntdcc].<span class="built_in">push_back</span>(cur);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">stk[++top] = cur;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (dfs[to[i]]) &#123;</span><br><span class="line">low[cur] = <span class="built_in">min</span>(low[cur], dfs[to[i]]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">Tarjan</span>(to[i]);</span><br><span class="line">low[cur] = <span class="built_in">min</span>(low[cur], low[to[i]]);</span><br><span class="line"><span class="keyword">if</span> (low[to[i]] &gt;= dfs[cur]) &#123;</span><br><span class="line">++cntdcc;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">x = stk[top--];</span><br><span class="line">dcc[cntdcc].<span class="built_in">push_back</span>(x);</span><br><span class="line">&#125; <span class="keyword">while</span> (x != to[i]);</span><br><span class="line">dcc[cntdcc].<span class="built_in">push_back</span>(cur);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// ......</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!dfs[i]) &#123;</span><br><span class="line"><span class="built_in">Tarjan</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>割边 &amp; 边双连通分量</title>
      <link href="/2021/07/21/%E5%89%B2%E8%BE%B9%20&amp;%20%E8%BE%B9%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/index/"/>
      <url>/2021/07/21/%E5%89%B2%E8%BE%B9%20&amp;%20%E8%BE%B9%E5%8F%8C%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/index/</url>
      
        <content type="html"><![CDATA[<h2 id="T103481-【模板】割边"><a href="https://www.luogu.com.cn/problem/T103481">T103481 【模板】割边</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> cntdfs, dfs[MAXnd + <span class="number">10</span>], low[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> cntcut; bitset&lt;MAXeg * 2 + 10&gt; iscut;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> fromedge)</span> </span>&#123;</span><br><span class="line">dfs[cur] = low[cur] = ++cntdfs;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == (fromedge ^ <span class="number">1</span>)) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (dfs[to[i]]) &#123;</span><br><span class="line">low[cur] = <span class="built_in">min</span>(low[cur], dfs[to[i]]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">Tarjan</span>(to[i], i);</span><br><span class="line">low[cur] = <span class="built_in">min</span>(low[cur], low[to[i]]);</span><br><span class="line"><span class="keyword">if</span> (low[to[i]] &gt; dfs[cur]) &#123;</span><br><span class="line">++cntcut;</span><br><span class="line">iscut[i] = iscut[i ^ <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// ......</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!dfs[i]) &#123;</span><br><span class="line"><span class="built_in">Tarjan</span>(i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="T103489-【模板】边双连通分量"><a href="https://www.luogu.com.cn/problem/T103489">T103489 【模板】边双连通分量</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> cntdfs, dfs[MAXnd + <span class="number">10</span>], low[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> cntcut; bitset&lt;MAXeg * 2 + 10&gt; iscut;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> cur, <span class="keyword">int</span> fromedge)</span> </span>&#123;</span><br><span class="line">    dfs[cur] = low[cur] = ++cntdfs;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == (fromedge ^ <span class="number">1</span>)) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (dfs[to[i]]) &#123;</span><br><span class="line">            low[cur] = <span class="built_in">min</span>(low[cur], dfs[to[i]]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">Tarjan</span>(to[i], i);</span><br><span class="line">            low[cur] = <span class="built_in">min</span>(low[cur], low[to[i]]);</span><br><span class="line">            <span class="keyword">if</span> (low[to[i]] &gt; dfs[cur]) &#123;</span><br><span class="line">                ++cntcut;</span><br><span class="line">                iscut[i] = iscut[i ^ <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cntdcc, indcc[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EvaDcc</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">    indcc[cur] = cntdcc;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (indcc[to[i]] || iscut[i]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">EvaDcc</span>(to[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!dfs[i]) &#123;</span><br><span class="line">            <span class="built_in">Tarjan</span>(i, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!indcc[i]) &#123;</span><br><span class="line">            ++cntdcc;</span><br><span class="line">            <span class="built_in">EvaDcc</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果只让输出边双的个数，<strong>桥数+不连通的图数</strong>也是正确答案。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>卢卡斯定理</title>
      <link href="/2021/07/21/%E5%8D%A2%E5%8D%A1%E6%96%AF%E5%AE%9A%E7%90%86/index/"/>
      <url>/2021/07/21/%E5%8D%A2%E5%8D%A1%E6%96%AF%E5%AE%9A%E7%90%86/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3807-【模板】卢卡斯定理-Lucas-定理"><a href="https://www.luogu.com.cn/problem/P3807">P3807 【模板】卢卡斯定理/Lucas 定理</a></h2><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mrow><mi mathvariant="normal">C</mi><mo>⁡</mo></mrow><mi>n</mi><mi>m</mi></msubsup><mi mathvariant="normal">mod</mi><mo>⁡</mo><mi>p</mi><mo>=</mo><msubsup><mrow><mi mathvariant="normal">C</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mi>p</mi></mrow><mrow><mi>m</mi><mi mathvariant="normal">/</mi><mi>p</mi></mrow></msubsup><mo>×</mo><msubsup><mrow><mi mathvariant="normal">C</mi><mo>⁡</mo></mrow><mrow><mi>n</mi><mi mathvariant="normal">mod</mi><mo>⁡</mo><mi>p</mi></mrow><mrow><mi>m</mi><mi mathvariant="normal">mod</mi><mo>⁡</mo><mi>p</mi></mrow></msubsup><mi mathvariant="normal">mod</mi><mo>⁡</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">\operatorname{C}^m_n\operatorname{mod}p=\operatorname{C}^{m/p}_{n/p}\times \operatorname{C}^{m\operatorname{mod}p}_{n \operatorname{mod}p}\operatorname{mod}p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9846em;vertical-align:-0.247em;"></span><span class="mop"><span class="mop"><span class="mord mathrm">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7376em;"><span style="top:-2.453em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.1362em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mord mathrm">mod</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.56em;vertical-align:-0.5152em;"></span><span class="mop"><span class="mop"><span class="mord mathrm">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3598em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5152em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">×</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop"><span class="mord mathrm">C</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967em;"><span style="top:-2.3987em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mop mtight"><span class="mord mathrm mtight">mod</span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mop mtight"><span class="mord mathrm mtight">mod</span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4374em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mord mathrm">mod</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span></span></span></span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXC = <span class="number">1e5</span> + <span class="number">1e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> &amp;x, <span class="keyword">int</span> &amp;y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!b) &#123;</span><br><span class="line">x = <span class="number">1</span>; y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> d = <span class="built_in">exgcd</span>(b, a % b, y, x);</span><br><span class="line">y -= a / b * x;</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans, k;</span><br><span class="line"><span class="built_in">exgcd</span>(x, p, ans, k);</span><br><span class="line"><span class="keyword">return</span> (ans % p + p) % p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fac[MAXC + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EvaFac</span><span class="params">(<span class="keyword">int</span> top, <span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= top; ++i) &#123;</span><br><span class="line">fac[i] = ((ll)fac[i - <span class="number">1</span>] * i) % p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n &lt; m) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> (ll)fac[n] * <span class="built_in">inv</span>(fac[m], p) % p * <span class="built_in">inv</span>(fac[n - m], p) % p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Lucas</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!m) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> (ll)<span class="built_in">Lucas</span>(n / p, m / p, p) * <span class="built_in">C</span>(n % p, m % p, p) % p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, n, m, p;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(T);</span><br><span class="line"><span class="keyword">while</span> (T--) &#123;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(m), <span class="built_in">read</span>(p);</span><br><span class="line"><span class="built_in">EvaFac</span>(MAXC, p);</span><br><span class="line">n += m;</span><br><span class="line">m = n - m;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">Lucas</span>(n, m, p));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>康托展开</title>
      <link href="/2021/07/21/%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80/index/"/>
      <url>/2021/07/21/%E5%BA%B7%E6%89%98%E5%B1%95%E5%BC%80/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P5367-【模板】康托展开"><a href="https://www.luogu.com.cn/problem/P5367">P5367 【模板】康托展开</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>)x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + c - <span class="string">&#x27;0&#x27;</span>;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, trector[MAXn + <span class="number">10</span>], sum[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x&amp;(-x))</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Build</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">trector[i] = sum[i] - sum[i - <span class="built_in">lowbit</span>(i)];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (p &lt;= n) &#123;</span><br><span class="line">trector[p] += k;</span><br><span class="line">p += <span class="built_in">lowbit</span>(p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EvaSum</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (p &gt; <span class="number">0</span>) &#123;</span><br><span class="line">sum += trector[p];</span><br><span class="line">p -= <span class="built_in">lowbit</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> fac[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Evafac</span><span class="params">()</span> </span>&#123;</span><br><span class="line">fac[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">fac[i] = fac[i - <span class="number">1</span>] * i;</span><br><span class="line">fac[i] %= MOD;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> arr[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Cantor</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = n, sum; i; --i) &#123;</span><br><span class="line">sum = <span class="built_in">EvaSum</span>(arr[i] - <span class="number">1</span>);</span><br><span class="line">ans += sum * fac[i - <span class="number">1</span>];</span><br><span class="line">ans %= MOD;</span><br><span class="line"><span class="built_in">Add</span>(arr[i], <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans % MOD;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">sum[i] = sum[i - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Build</span>();</span><br><span class="line"><span class="built_in">Evafac</span>();</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(arr[n - i + <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">Cantor</span>() + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>强连通分量</title>
      <link href="/2021/07/21/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/index/"/>
      <url>/2021/07/21/%E5%BC%BA%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F/index/</url>
      
        <content type="html"><![CDATA[<h2 id="B3609-图论与代数结构-701-强连通分量"><a href="https://www.luogu.com.cn/problem/B3609">B3609 [图论与代数结构 701] 强连通分量</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> cntdfs, dfs[MAXnd + <span class="number">10</span>], low[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> cntscc; vector&lt;<span class="keyword">int</span>&gt; scc[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> top, stk[MAXnd + <span class="number">10</span>]; <span class="keyword">bool</span> instk[MAXnd + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">dfs[cur] = low[cur] = ++cntdfs;</span><br><span class="line">stk[++top] = cur; instk[cur] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (dfs[to[i]] &amp;&amp; instk[to[i]]) &#123;</span><br><span class="line">low[cur] = <span class="built_in">min</span>(low[cur], dfs[to[i]]);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!dfs[to[i]]) &#123;</span><br><span class="line"><span class="built_in">Tarjan</span>(to[i]);</span><br><span class="line">low[cur] = <span class="built_in">min</span>(low[cur], low[to[i]]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (dfs[cur] == low[cur]) &#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">++cntscc;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">x = stk[top--]; instk[x] = <span class="number">0</span>;</span><br><span class="line">scc[cntscc].<span class="built_in">push_back</span>(x);</span><br><span class="line">&#125; <span class="keyword">while</span> (x != cur);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// ......</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!dfs[i]) &#123;</span><br><span class="line"><span class="built_in">Tarjan</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="缩点：">缩点：</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (inscc[from1[i]] != inscc[to1[i]]) &#123;</span><br><span class="line"><span class="built_in">Insert2</span>(inscc[from1[i]], inscc[to1[i]]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快读</title>
      <link href="/2021/07/21/%E5%BF%AB%E8%AF%BB/index/"/>
      <url>/2021/07/21/%E5%BF%AB%E8%AF%BB/index/</url>
      
        <content type="html"><![CDATA[<h5 id="上面的只能读非负数，下面的能读负数">上面的只能读非负数，下面的能读负数</h5><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>);<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T x = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (c ^ <span class="number">48</span>);&#125;a = f ? -x : x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最近公共祖先(lca)</title>
      <link href="/2021/07/21/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88(lca)/index/"/>
      <url>/2021/07/21/%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88(lca)/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3379-【模板】最近公共祖先（LCA）"><a href="https://www.luogu.com.cn/problem/P3379">P3379 【模板】最近公共祖先（LCA）</a></h2><h4 id="1-倍增">1. 倍增</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">500000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXlogdep = <span class="number">19</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = MAXn - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> anc[MAXn + <span class="number">10</span>][MAXlogdep + <span class="number">10</span>], dep[MAXn + <span class="number">10</span>], n, q, s;</span><br><span class="line"><span class="keyword">int</span> head[MAXn + <span class="number">10</span>], next[MAXm * <span class="number">2</span> + <span class="number">10</span>], toid[MAXm * <span class="number">2</span> + <span class="number">10</span>], nown;</span><br><span class="line"><span class="keyword">int</span> lg2[MAXn + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> to)</span> </span>&#123;</span><br><span class="line">next[++nown] = head[from];</span><br><span class="line">head[from] = nown;</span><br><span class="line">toid[nown] = to;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">register</span> <span class="keyword">int</span> <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> nodeid, <span class="keyword">int</span> fa)</span> </span>&#123;</span><br><span class="line">anc[nodeid][<span class="number">0</span>] = fa;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= MAXlogdep; ++i) &#123;</span><br><span class="line">anc[nodeid][i] = anc[anc[nodeid][i - <span class="number">1</span>]][i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">dep[nodeid] = dep[fa] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = head[nodeid]; i; i = next[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (toid[i] != fa) &#123;</span><br><span class="line"><span class="built_in">Dfs</span>(toid[i], nodeid);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">lg2[i] = lg2[i - <span class="number">1</span>] + (<span class="number">1</span> &lt;&lt; lg2[i - <span class="number">1</span>] == i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">lg2[i]--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Lca</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (dep[x] &gt; dep[y]) &#123;</span><br><span class="line"><span class="built_in">swap</span>(x, y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (dep[x] &lt; dep[y]) &#123;</span><br><span class="line">y = anc[y][lg2[dep[y] - dep[x]]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x == y) &#123;</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = lg2[dep[y]]; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line"><span class="keyword">if</span> (anc[x][i] != anc[y][i]) &#123;</span><br><span class="line">x = anc[x][i];</span><br><span class="line">y = anc[y][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> anc[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = <span class="built_in">read</span>();</span><br><span class="line">q = <span class="built_in">read</span>();</span><br><span class="line">s = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">Init</span>();</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">x = <span class="built_in">read</span>();</span><br><span class="line">y = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">Insert</span>(x, y);</span><br><span class="line"><span class="built_in">Insert</span>(y, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Dfs</span>(s, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; q; ++i) &#123;</span><br><span class="line">x = <span class="built_in">read</span>();</span><br><span class="line">y = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">Lca</span>(x, y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-树剖">2. 树剖</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Lca</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (top[x] != top[y]) &#123;</span><br><span class="line"><span class="keyword">if</span> (dep[top[x]] &gt; dep[top[y]]) &#123;</span><br><span class="line">x = fa[top[x]];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">y = fa[top[y]];</span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">return</span> dep[x] &gt; dep[y] ? y : x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-离线Tarjan">3. 离线Tarjan</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">5e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = MAXn;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXq = <span class="number">5e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> head[MAXn + <span class="number">10</span>], cntnex, nex[MAXm * <span class="number">2</span> + <span class="number">10</span>], to[MAXm * <span class="number">2</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">nex[++cntnex] = head[u];</span><br><span class="line">head[u] = cntnex;</span><br><span class="line">to[cntnex] = v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> headq[MAXn + <span class="number">10</span>], cntnexq, nexq[MAXq + <span class="number">10</span>], q[MAXq + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insertq</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">nexq[++cntnexq] = headq[u];</span><br><span class="line">headq[u] = cntnexq;</span><br><span class="line">q[cntnexq] = v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fa[MAXn + <span class="number">10</span>]; <span class="keyword">bool</span> vis[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs1</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">vis[cur] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (vis[to[i]]) <span class="keyword">continue</span>;</span><br><span class="line">fa[to[i]] = cur;</span><br><span class="line"><span class="built_in">Dfs1</span>(to[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> times[MAXn + <span class="number">10</span>], ans[MAXq + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs2</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">++times[cur];</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = headq[cur]; i; i = nexq[i]) &#123;</span><br><span class="line"><span class="keyword">int</span> id = q[i];</span><br><span class="line"><span class="keyword">while</span> (times[id] != <span class="number">1</span>) &#123;</span><br><span class="line">id = fa[id];</span><br><span class="line">&#125;</span><br><span class="line">ans[i] = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (times[to[i]]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">Dfs2</span>(to[i]);</span><br><span class="line">&#125;</span><br><span class="line">++times[cur];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, Q, root, qid_nexq[MAXq + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;n, &amp;Q, &amp;root);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, u, v; i &lt; n; ++i) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;u, &amp;v);</span><br><span class="line"><span class="built_in">Insert</span>(u, v);</span><br><span class="line"><span class="built_in">Insert</span>(v, u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Dfs1</span>(root);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, u, v; i &lt;= Q; ++i) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;u, &amp;v);</span><br><span class="line"><span class="built_in">Insertq</span>(u, v);</span><br><span class="line">qid_nexq[i] = cntnexq;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Dfs2</span>(root);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= Q; ++i) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans[qid_nexq[i]]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-欧拉序">4. 欧拉序</h4><p>请见 <a href="https://www.cnblogs.com/stxy-ferryman/p/7741970.html">一位dalao的博客</a>。<s>（我懒得写了）</s></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树的直径</title>
      <link href="/2021/07/21/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/index/"/>
      <url>/2021/07/21/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/index/</url>
      
        <content type="html"><![CDATA[<h2 id="U81904-【模板】树的直径"><a href="https://www.luogu.com.cn/problem/U81904">U81904 【模板】树的直径</a></h2><h4 id="1-两次Dfs">1. 两次Dfs</h4><p>注意：该方法无法解决负权树。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">5e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = MAXn;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> FINF = <span class="number">0xc0c0c0c0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> head[MAXn + <span class="number">10</span>], cntnex, nex[MAXm * <span class="number">2</span> + <span class="number">10</span>], to[MAXm * <span class="number">2</span> + <span class="number">10</span>], wei[MAXm * <span class="number">2</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">nex[++cntnex] = head[u];</span><br><span class="line">head[u] = cntnex;</span><br><span class="line">to[cntnex] = v;</span><br><span class="line">wei[cntnex] = w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis[MAXn + <span class="number">10</span>]; <span class="keyword">bool</span> vis[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">vis[cur] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (vis[to[i]]) <span class="keyword">continue</span>;</span><br><span class="line">dis[to[i]] = dis[cur] + wei[i];</span><br><span class="line"><span class="built_in">Dfs</span>(to[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EvaFar</span><span class="params">(<span class="keyword">int</span> root)</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(dis, <span class="number">0xc0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line"><span class="built_in">memset</span>(vis, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(vis));</span><br><span class="line">dis[root] = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">Dfs</span>(root);</span><br><span class="line"><span class="keyword">int</span> mx = FINF, maxer = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (mx &lt; dis[i]) &#123;</span><br><span class="line">mx = dis[i];</span><br><span class="line">maxer = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> maxer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> side1, side2;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, u, v, w; i &lt; n; ++i) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line"><span class="built_in">Insert</span>(u, v, w);</span><br><span class="line"><span class="built_in">Insert</span>(v, u, w);</span><br><span class="line">&#125;</span><br><span class="line">side1 = <span class="built_in">EvaFar</span>(<span class="number">1</span>);</span><br><span class="line">side2 = <span class="built_in">EvaFar</span>(side1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, side1, side2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, dis[side2]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-树形Dp">2. 树形Dp</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">5e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = MAXn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> head[MAXn + <span class="number">10</span>], cntnex, nex[MAXm * <span class="number">2</span> + <span class="number">10</span>], to[MAXm * <span class="number">2</span> + <span class="number">10</span>], wei[MAXm * <span class="number">2</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">nex[++cntnex] = head[u];</span><br><span class="line">head[u] = cntnex;</span><br><span class="line">to[cntnex] = v;</span><br><span class="line">wei[cntnex] = w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[MAXn + <span class="number">10</span>]; <span class="keyword">int</span> d[MAXn + <span class="number">10</span>], n, ans;</span><br><span class="line"><span class="comment">// d[i]: 节点d到所有节点最长路径长度路径</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">vis[cur] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (vis[to[i]]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">Dfs</span>(to[i]);</span><br><span class="line">ans = <span class="built_in">max</span>(ans, d[cur] + d[to[i]] + wei[i]); <span class="comment">// 虽然d[i]为最长路径长度，但这里的d[i]还没有更新好，只是更新到了的中的最长。</span></span><br><span class="line">d[cur] = <span class="built_in">max</span>(d[cur], d[to[i]] + wei[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, u, v, w; i &lt; n; ++i) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line"><span class="built_in">Insert</span>(u, v, w);</span><br><span class="line"><span class="built_in">Insert</span>(v, u, w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Dfs</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树状数组</title>
      <link href="/2021/07/21/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/index/"/>
      <url>/2021/07/21/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3374-【模板】树状数组-1"><a href="https://www.luogu.com.cn/problem/P3374">P3374 【模板】树状数组 1</a></h2><h2 id="P3368-【模板】树状数组-2"><a href="https://www.luogu.com.cn/problem/P3368">P3368 【模板】树状数组 2</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">5e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>);<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T x = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + c - <span class="string">&#x27;0&#x27;</span>;&#125;a = f ? -x : x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, t[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x) &amp; (-(x))</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BuildUseSum</span><span class="params">(<span class="keyword">int</span> *sum)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">t[i] = sum[i] - sum[i - <span class="built_in">lowbit</span>(i)];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (p &lt;= n) &#123;</span><br><span class="line">t[p] += v;</span><br><span class="line">p += <span class="built_in">lowbit</span>(p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EvaSum</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (p) &#123;</span><br><span class="line">ans += t[p];</span><br><span class="line">p -= <span class="built_in">lowbit</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[MAXn + <span class="number">10</span>], m;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(m);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">BuildUseSum</span>(a);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, opt, x, y, k; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(opt);</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (opt) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">read</span>(x), <span class="built_in">read</span>(y), <span class="built_in">read</span>(k);</span><br><span class="line"><span class="built_in">Add</span>(x, k); <span class="built_in">Add</span>(y + <span class="number">1</span>, -k);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">read</span>(x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">EvaSum</span>(x));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树的重心</title>
      <link href="/2021/07/21/%E6%A0%91%E7%9A%84%E9%87%8D%E5%BF%83/index/"/>
      <url>/2021/07/21/%E6%A0%91%E7%9A%84%E9%87%8D%E5%BF%83/index/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> head[MAXn + <span class="number">10</span>], cntnex, nex[MAXm * <span class="number">2</span> + <span class="number">10</span>], to[MAXm * <span class="number">2</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">nex[++cntnex] = head[u];</span><br><span class="line">head[u] = cntnex;</span><br><span class="line">to[cntnex] = v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">bool</span> vis[MAXn + <span class="number">10</span>]; <span class="keyword">int</span> siz[MAXn + <span class="number">10</span>], w[MAXn + <span class="number">10</span>], cen[<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetCen</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">vis[cur] = <span class="number">1</span>;</span><br><span class="line">siz[cur] = <span class="number">1</span>;</span><br><span class="line">w[cur] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (vis[to[i]]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">GetCen</span>(to[i]);</span><br><span class="line">siz[cur] += siz[to[i]];</span><br><span class="line">w[cur] = <span class="built_in">max</span>(w[cur], siz[to[i]]);</span><br><span class="line">&#125;</span><br><span class="line">w[cur] = <span class="built_in">max</span>(w[cur], n - siz[cur]);</span><br><span class="line"><span class="keyword">if</span> (w[cur] &lt;= n / <span class="number">2</span>) &#123;</span><br><span class="line">cen[cen[<span class="number">0</span>] != <span class="number">0</span>] = cur;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">GetCen</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树链剖分</title>
      <link href="/2021/07/21/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/index/"/>
      <url>/2021/07/21/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3384-【模板】轻重链剖分"><a href="https://www.luogu.com.cn/problem/P3384">P3384 【模板】轻重链剖分</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = MAXn;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>);<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T x = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (c ^ <span class="number">48</span>);&#125;a = f ? -x : x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, k, root, mod;</span><br><span class="line"><span class="keyword">int</span> head[MAXn + <span class="number">10</span>], cntnex, nex[MAXm * <span class="number">2</span> + <span class="number">10</span>], to[MAXm * <span class="number">2</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">nex[++cntnex] = head[u];</span><br><span class="line">head[u] = cntnex;</span><br><span class="line">to[cntnex] = v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> le[MAXn * <span class="number">4</span> + <span class="number">10</span>], ri[MAXn * <span class="number">4</span> + <span class="number">10</span>], sum[MAXn * <span class="number">4</span> + <span class="number">10</span>], add[MAXn * <span class="number">4</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">sum[id] = sum[id &lt;&lt; <span class="number">1</span>] + sum[(id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">sum[id &lt;&lt; <span class="number">1</span>] += add[id] * (ri[id &lt;&lt; <span class="number">1</span>] - le[id &lt;&lt; <span class="number">1</span>] + <span class="number">1</span>);</span><br><span class="line">sum[(id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>] += add[id] * (ri[(id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>] - le[(id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>] + <span class="number">1</span>);</span><br><span class="line">add[id &lt;&lt; <span class="number">1</span>] += add[id];</span><br><span class="line">add[(id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>] += add[id];</span><br><span class="line">add[id] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BuildUseArray</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> *a)</span> </span>&#123;</span><br><span class="line">le[id] = l;</span><br><span class="line">ri[id] = r;</span><br><span class="line"><span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">sum[id] = a[l];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">BuildUseArray</span>(id &lt;&lt; <span class="number">1</span>, l, mid, a);</span><br><span class="line"><span class="built_in">BuildUseArray</span>((id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>, mid + <span class="number">1</span>, r, a);</span><br><span class="line"><span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (le[id] &gt;= l &amp;&amp; ri[id] &lt;= r) &#123;</span><br><span class="line">sum[id] += w * (ri[id] - le[id] + <span class="number">1</span>);</span><br><span class="line">add[id] += w;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">pushdown</span>(id);</span><br><span class="line"><span class="keyword">int</span> mid = (le[id] + ri[id]) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) <span class="built_in">Add</span>(id &lt;&lt; <span class="number">1</span>, l, r, w);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid) <span class="built_in">Add</span>((id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>, l, r, w);</span><br><span class="line"><span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Eva</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (le[id] &gt;= l &amp;&amp; ri[id] &lt;= r) &#123;</span><br><span class="line">ans += sum[id];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">pushdown</span>(id);</span><br><span class="line"><span class="keyword">int</span> mid = (le[id] + ri[id]) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) ans += <span class="built_in">Eva</span>(id &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid) ans += <span class="built_in">Eva</span>((id &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>, l, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fa[MAXn + <span class="number">10</span>], dep[MAXn + <span class="number">10</span>], siz[MAXn + <span class="number">10</span>], hson[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs1</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">dep[cur] = dep[fa[cur]] + <span class="number">1</span>;</span><br><span class="line">siz[cur] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> mx = -INF;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (to[i] == fa[cur]) <span class="keyword">continue</span>;</span><br><span class="line">fa[to[i]] = cur;</span><br><span class="line"><span class="built_in">Dfs1</span>(to[i]);</span><br><span class="line">siz[cur] += siz[to[i]];</span><br><span class="line"><span class="keyword">if</span> (siz[to[i]] &gt; mx) &#123;</span><br><span class="line">mx = siz[to[i]];</span><br><span class="line">hson[cur] = to[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cntdfs, nddfs[MAXn + <span class="number">10</span>], idxdfs[MAXn + <span class="number">10</span>], top[MAXn + <span class="number">10</span>], bottom[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dfs2</span><span class="params">(<span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">nddfs[cur] = ++cntdfs;</span><br><span class="line">idxdfs[cntdfs] = cur;</span><br><span class="line"><span class="keyword">if</span> (hson[cur]) &#123;</span><br><span class="line">top[hson[cur]] = top[cur];</span><br><span class="line"><span class="built_in">Dfs2</span>(hson[cur]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (to[i] == hson[cur] || to[i] == fa[cur]) <span class="keyword">continue</span>;</span><br><span class="line">top[to[i]] = to[i];</span><br><span class="line"><span class="built_in">Dfs2</span>(to[i]);</span><br><span class="line">&#125;</span><br><span class="line">bottom[cur] = idxdfs[cntdfs];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TreePathAdd</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (top[x] != top[y]) &#123;</span><br><span class="line"><span class="keyword">if</span> (dep[top[x]] &gt; dep[top[y]]) &#123;</span><br><span class="line"><span class="built_in">swap</span>(x, y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Add</span>(<span class="number">1</span>, nddfs[top[y]], nddfs[y], w);</span><br><span class="line">y = fa[top[y]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (dep[x] &gt; dep[y]) &#123;</span><br><span class="line"><span class="built_in">swap</span>(x, y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Add</span>(<span class="number">1</span>, nddfs[x], nddfs[y], w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">TreePathEva</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (top[x] != top[y]) &#123;</span><br><span class="line"><span class="keyword">if</span> (dep[top[x]] &gt; dep[top[y]]) &#123;</span><br><span class="line"><span class="built_in">swap</span>(x, y);</span><br><span class="line">&#125;</span><br><span class="line">ans += <span class="built_in">Eva</span>(<span class="number">1</span>, nddfs[top[y]], nddfs[y]);</span><br><span class="line">y = fa[top[y]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (dep[x] &gt; dep[y]) &#123;</span><br><span class="line"><span class="built_in">swap</span>(x, y);</span><br><span class="line">&#125;</span><br><span class="line">ans += <span class="built_in">Eva</span>(<span class="number">1</span>, nddfs[x], nddfs[y]);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SonTreeAdd</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line"><span class="built_in">Add</span>(<span class="number">1</span>, nddfs[x], nddfs[bottom[x]], w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SonTreeEva</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Eva</span>(<span class="number">1</span>, nddfs[x], nddfs[bottom[x]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Lca</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (top[x] != top[y]) &#123;</span><br><span class="line"><span class="keyword">if</span> (dep[top[x]] &gt; dep[top[y]]) &#123;</span><br><span class="line"><span class="built_in">swap</span>(x, y);</span><br><span class="line">&#125;</span><br><span class="line">y = fa[top[y]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dep[x] &gt; dep[y] ? y : x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ndwei[MAXn + <span class="number">10</span>], idxwei[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(k), <span class="built_in">read</span>(root), <span class="built_in">read</span>(mod);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(ndwei[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, u, v; i &lt; n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(u), <span class="built_in">read</span>(v);</span><br><span class="line"><span class="built_in">Insert</span>(u, v); <span class="built_in">Insert</span>(v, u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Dfs1</span>(root);</span><br><span class="line"><span class="built_in">Dfs2</span>(root);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">idxwei[i] = ndwei[idxdfs[i]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">BuildUseArray</span>(<span class="number">1</span>, <span class="number">1</span>, n, idxwei);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, opt, x, y, w; i &lt;= k; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(opt);</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (opt) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">read</span>(x), <span class="built_in">read</span>(y), <span class="built_in">read</span>(w);</span><br><span class="line"><span class="built_in">TreePathAdd</span>(x, y, w);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">read</span>(x), <span class="built_in">read</span>(y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">TreePathEva</span>(x, y) % mod);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">read</span>(x), <span class="built_in">read</span>(w);</span><br><span class="line"><span class="built_in">SonTreeAdd</span>(x, w);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="built_in">read</span>(x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">SonTreeEva</span>(x) % mod);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>点分治</title>
      <link href="/2021/07/21/%E7%82%B9%E5%88%86%E6%B2%BB/index/"/>
      <url>/2021/07/21/%E7%82%B9%E5%88%86%E6%B2%BB/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3806-【模板】点分治1"><a href="https://www.luogu.com.cn/problem/P3806">P3806 【模板】点分治1</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">2e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = <span class="number">2e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXpathlen = <span class="number">1e8</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>)x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + c - <span class="string">&#x27;0&#x27;</span>;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cntnext, head[MAXn + <span class="number">10</span>], next[MAXm + <span class="number">10</span>], to[MAXm + <span class="number">10</span>], wei[MAXm + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> too, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">next[++cntnext] = head[from];</span><br><span class="line">head[from] = cntnext;</span><br><span class="line">to[cntnext] = too;</span><br><span class="line">wei[cntnext] = w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> root, nsontree, size[MAXn + <span class="number">10</span>], weight[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[MAXn + <span class="number">10</span>];    <span class="comment">//vis代表的是在Solve中是否访问过 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetCore</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa)</span> </span>&#123;</span><br><span class="line">size[u] = <span class="number">1</span>;</span><br><span class="line">weight[u] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> i = head[u]; i; i = next[i]) &#123;</span><br><span class="line"><span class="keyword">int</span> v = to[i];</span><br><span class="line"><span class="keyword">if</span>(v == fa || vis[v]) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">GetCore</span>(v, u);</span><br><span class="line">size[u] += size[v];</span><br><span class="line">weight[u] = <span class="built_in">max</span>(weight[u], size[v]);</span><br><span class="line">&#125;</span><br><span class="line">weight[u] = <span class="built_in">max</span>(weight[u], nsontree - size[u]);</span><br><span class="line"><span class="keyword">if</span>(weight[u] &lt; weight[root]) &#123;</span><br><span class="line">root = u;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> dis[MAXn + <span class="number">10</span>], cntrem, rem[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GetDis</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> fa)</span> </span>&#123;</span><br><span class="line">rem[++cntrem] = dis[u];</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> i = head[u]; i; i = next[i]) &#123;</span><br><span class="line"><span class="keyword">int</span> v = to[i];</span><br><span class="line"><span class="keyword">if</span>(v == fa || vis[v])<span class="keyword">continue</span>;</span><br><span class="line">dis[v] = dis[u] + wei[i];</span><br><span class="line"><span class="built_in">GetDis</span>(v, u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> nque;</span><br><span class="line"><span class="keyword">int</span> test[MAXn + <span class="number">10</span>], q[MAXn + <span class="number">10</span>], query[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> judge[MAXpathlen + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Calc</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> i = head[u]; i; i = next[i]) &#123;</span><br><span class="line"><span class="keyword">int</span> v = to[i];</span><br><span class="line"><span class="keyword">if</span>(vis[v])<span class="keyword">continue</span>;</span><br><span class="line">cntrem = <span class="number">0</span>;</span><br><span class="line">dis[v] = wei[i];</span><br><span class="line"><span class="built_in">GetDis</span>(v, u);</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> j = cntrem; j &gt; <span class="number">0</span>; --j) &#123;</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= nque; ++k)&#123;</span><br><span class="line"><span class="keyword">if</span>(query[k] &gt;= rem[j])test[k] |= judge[query[k] - rem[j]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> j = cntrem; j &gt; <span class="number">0</span>; --j) &#123;</span><br><span class="line">judge[rem[j]] = <span class="literal">true</span>;</span><br><span class="line">q[++cnt] = rem[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cnt; ++i) &#123;</span><br><span class="line">judge[q[i]] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DivRule</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line">vis[u] = <span class="literal">true</span>;</span><br><span class="line">judge[<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">Calc</span>(u);</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> i = head[u]; i; i = next[i]) &#123;</span><br><span class="line"><span class="keyword">int</span> v = to[i];</span><br><span class="line"><span class="keyword">if</span>(vis[v])<span class="keyword">continue</span>;</span><br><span class="line">nsontree = size[v];</span><br><span class="line">weight[root = <span class="number">0</span>] = INF;</span><br><span class="line"><span class="built_in">GetCore</span>(v, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">DivRule</span>(root);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line"><span class="built_in">read</span>(nque);</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> i = <span class="number">1</span>, u, v, w; i &lt; n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(u);</span><br><span class="line"><span class="built_in">read</span>(v);</span><br><span class="line"><span class="built_in">read</span>(w);</span><br><span class="line"><span class="built_in">Insert</span>(u, v, w);</span><br><span class="line"><span class="built_in">Insert</span>(v, u, w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= nque; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(query[i]);</span><br><span class="line">&#125;</span><br><span class="line">weight[root] = INF;</span><br><span class="line">nsontree = n;</span><br><span class="line"><span class="built_in">GetCore</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">DivRule</span>(root);</span><br><span class="line"><span class="keyword">for</span>(re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= nque; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span>(test[i]) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;AYE\n&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;NAY\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线段树</title>
      <link href="/2021/07/21/%E7%BA%BF%E6%AE%B5%E6%A0%91/index/"/>
      <url>/2021/07/21/%E7%BA%BF%E6%AE%B5%E6%A0%91/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3372-【模板】线段树-1"><a href="https://www.luogu.com.cn/problem/P3372">P3372 【模板】线段树 1</a></h2><h4 id="1-无懒标记">1. 无懒标记</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>);<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T x = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (c ^ <span class="number">48</span>);&#125;a = f ? -x : x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls (id &lt;&lt; 1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs (id &lt;&lt; 1 | 1)</span></span><br><span class="line"><span class="keyword">int</span> le[MAXn * <span class="number">4</span> + <span class="number">10</span>], ri[MAXn * <span class="number">4</span> + <span class="number">10</span>], sum[MAXn * <span class="number">4</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">sum[id] = sum[ls] + sum[rs];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Build0</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">le[id] = l;</span><br><span class="line">ri[id] = r;</span><br><span class="line"><span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">Build0</span>(ls, l, mid);</span><br><span class="line"><span class="built_in">Build0</span>(rs, mid + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BuildUseArr</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> *a)</span> </span>&#123;</span><br><span class="line">le[id] = l;</span><br><span class="line">ri[id] = r;</span><br><span class="line"><span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">sum[id] = a[l];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">BuildUseArr</span>(ls, l, mid, a);</span><br><span class="line"><span class="built_in">BuildUseArr</span>(rs, mid + <span class="number">1</span>, r, a);</span><br><span class="line"><span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (le[id] == ri[id]) &#123;</span><br><span class="line">sum[id] = sum[id] + k;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (le[id] + ri[id]) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) <span class="built_in">Add</span>(ls, l, r, k);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid) <span class="built_in">Add</span>(rs, l, r, k);</span><br><span class="line"><span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Eva</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (le[id] &gt;= l &amp;&amp; ri[id] &lt;= r) &#123;</span><br><span class="line"><span class="keyword">return</span> sum[id];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (le[id] + ri[id]) &gt;&gt; <span class="number">1</span>, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) ans = ans + <span class="built_in">Eva</span>(ls, l, r);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid) ans = ans + <span class="built_in">Eva</span>(rs, l, r);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> ls</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> rs</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, a[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n, m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">BuildUseArr</span>(<span class="number">1</span>, <span class="number">1</span>, n, a);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, opt, x, y, z; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(opt);</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (opt) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">read</span>(x, y, z);</span><br><span class="line"><span class="built_in">Add</span>(<span class="number">1</span>, x, y, z);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">read</span>(x, y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">Eva</span>(<span class="number">1</span>, x, y));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-有懒标记">2. 有懒标记</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>);<span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;<span class="keyword">register</span> T x = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (c ^ <span class="number">48</span>);&#125;a = f ? -x : x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ls (id &lt;&lt; 1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs (id &lt;&lt; 1 | 1)</span></span><br><span class="line"><span class="keyword">int</span> le[MAXn * <span class="number">4</span> + <span class="number">10</span>], ri[MAXn * <span class="number">4</span> + <span class="number">10</span>], add[MAXn * <span class="number">4</span> + <span class="number">10</span>], sum[MAXn * <span class="number">4</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">sum[id] = sum[ls] + sum[rs];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">sum[ls] = sum[ls] + add[id] * (ri[ls] - le[ls] + <span class="number">1</span>);</span><br><span class="line">sum[rs] = sum[rs] + add[id] * (ri[rs] - le[rs] + <span class="number">1</span>);</span><br><span class="line">add[ls] = add[ls] + add[id];</span><br><span class="line">add[rs] = add[rs] + add[id];</span><br><span class="line">add[id] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Build0</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">le[id] = l;</span><br><span class="line">ri[id] = r;</span><br><span class="line"><span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">Build0</span>(ls, l, mid);</span><br><span class="line"><span class="built_in">Build0</span>(rs, mid + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BuildUseArr</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> *a)</span> </span>&#123;</span><br><span class="line">le[id] = l;</span><br><span class="line">ri[id] = r;</span><br><span class="line"><span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">sum[id] = a[l];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">BuildUseArr</span>(ls, l, mid, a);</span><br><span class="line"><span class="built_in">BuildUseArr</span>(rs, mid + <span class="number">1</span>, r, a);</span><br><span class="line"><span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (le[id] &gt;= l &amp;&amp; ri[id] &lt;= r) &#123;</span><br><span class="line">sum[id] = sum[id] + k * (ri[id] - le[id] + <span class="number">1</span>);</span><br><span class="line">add[id] = add[id] + k;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">pushdown</span>(id);</span><br><span class="line"><span class="keyword">int</span> mid = (le[id] + ri[id]) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) <span class="built_in">Add</span>(ls, l, r, k);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid) <span class="built_in">Add</span>(rs, l, r, k);</span><br><span class="line"><span class="built_in">pushup</span>(id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Eva</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (le[id] &gt;= l &amp;&amp; ri[id] &lt;= r) &#123;</span><br><span class="line"><span class="keyword">return</span> sum[id];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">pushdown</span>(id);</span><br><span class="line"><span class="keyword">int</span> mid = (le[id] + ri[id]) &gt;&gt; <span class="number">1</span>, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid) ans = ans + <span class="built_in">Eva</span>(ls, l, r);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid) ans = ans + <span class="built_in">Eva</span>(rs, l, r);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> ls</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> rs</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, a[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n, m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">BuildUseArr</span>(<span class="number">1</span>, <span class="number">1</span>, n, a);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, opt, x, y, z; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(opt);</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (opt) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">read</span>(x, y, z);</span><br><span class="line"><span class="built_in">Add</span>(<span class="number">1</span>, x, y, z);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">read</span>(x, y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">Eva</span>(<span class="number">1</span>, x, y));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>邻接表</title>
      <link href="/2021/07/21/%E9%82%BB%E6%8E%A5%E8%A1%A8/index/"/>
      <url>/2021/07/21/%E9%82%BB%E6%8E%A5%E8%A1%A8/index/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXm = <span class="number">1e4</span> * <span class="number">2</span>;<span class="comment">//无向图MAXM应开边数二倍</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> head[MAXn + <span class="number">10</span>], cntnex, nex[MAXm * <span class="number">2</span> + <span class="number">10</span>], to[MAXm * <span class="number">2</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">nex[++cntnex] = head[u];</span><br><span class="line">head[u] = cntnex;</span><br><span class="line">to[cntnex] = v;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>锁机</title>
      <link href="/2021/07/21/%E9%94%81%E6%9C%BA/index/"/>
      <url>/2021/07/21/%E9%94%81%E6%9C%BA/index/</url>
      
        <content type="html"><![CDATA[<p>作为一名 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mi>I</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">OIer</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span></span></span></span>，我们时时刻刻都有被 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">jc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord mathnormal">c</span></span></span></span> 的风险。这事我们需要一款简单的锁机程序来<s>锁死</s>保护我们的电脑：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;winable.h&gt;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">FreeConsole(); </span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (clock() &gt; <span class="number">10000</span>) <span class="keyword">break</span>;</span><br><span class="line">BlockInput(<span class="number">1</span>);</span><br><span class="line">&#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>比如这就是一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10</mn></mrow><annotation encoding="application/x-tex">10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10</span></span></span></span> 秒钟的锁机 ，<code>clock()</code> 函数的单位是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ms</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span></span></span></span>。</p><p>如果无效试试用管理员身份运行。</p><p><s>小心别多数了个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>。</s></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Exgcd求逆元</title>
      <link href="/2021/06/07/Exgcd%E6%B1%82%E9%80%86%E5%85%83/index/"/>
      <url>/2021/06/07/Exgcd%E6%B1%82%E9%80%86%E5%85%83/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3811-【模板】乘法逆元"><a href="https://www.luogu.com.cn/problem/P3811">P3811 【模板】乘法逆元</a></h2><p>此题不是求单个逆元的模板题，但可以用这道模板题检验这种求逆方法的正确性（没有WA）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span>&amp; x, <span class="keyword">int</span>&amp; y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b) &#123;</span><br><span class="line">        x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> d = <span class="built_in">exgcd</span>(b, a % b, y, x);</span><br><span class="line">    y -= a / b * x;</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> mod)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans, k;</span><br><span class="line">    <span class="built_in">exgcd</span>(n, mod, ans, k);</span><br><span class="line">    <span class="keyword">return</span> (ans % mod + mod) % mod;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01背包</title>
      <link href="/2021/06/07/01%E8%83%8C%E5%8C%85/index/"/>
      <url>/2021/06/07/01%E8%83%8C%E5%8C%85/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1048-NOIP2005-普及组-采药"><a href="https://www.luogu.com.cn/problem/P1048">P1048 [NOIP2005 普及组] 采药</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> LL MAXn = <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">const</span> LL MAXW = <span class="number">10000000</span>;</span><br><span class="line"></span><br><span class="line">LL n, W;</span><br><span class="line">LL d[MAXW + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">register</span> LL <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">max</span><span class="params">(LL a, LL b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">W = <span class="built_in">read</span>();</span><br><span class="line">n = <span class="built_in">read</span>();</span><br><span class="line">LL w, v;</span><br><span class="line"><span class="keyword">for</span> (LL i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">w = <span class="built_in">read</span>();</span><br><span class="line">v = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span> (LL i = W; i &gt;= w; i--) &#123;</span><br><span class="line">d[i] = <span class="built_in">max</span>(d[i], d[i - w] + v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, d[W]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gcd Lcm</title>
      <link href="/2021/06/07/Gcd%20Lcm/index/"/>
      <url>/2021/06/07/Gcd%20Lcm/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1029-NOIP2001-普及组-最大公约数和最小公倍数问题"><a href="https://www.luogu.com.cn/problem/P1029">P1029 [NOIP2001 普及组] 最大公约数和最小公倍数问题</a></h2><h4 id="1-最大公约数-gcd">1. 最大公约数(gcd)</h4><ol><li>辗转相除法</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span></span><br><span class="line"><span class="function">    <span class="keyword">return</span> b ? <span class="title">gcd</span><span class="params">(b, a % b)</span> : a;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>更相减损术</li></ol><ul><li>带取模的</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> twice = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (a % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; b % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        a /= <span class="number">2</span>, b /= <span class="number">2</span>;</span><br><span class="line">        twice *= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(a != b) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">            a -= b;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            b -= a;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> twice * a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>不带取模的</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(a != b) &#123;</span><br><span class="line"><span class="keyword">if</span>(a &gt; b) &#123;</span><br><span class="line">a -= b;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">b -= a;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-最小公倍数">2. 最小公倍数</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lcm</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a / <span class="built_in">gcd</span>(a, b) * b;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国剩余定理(crt)</title>
      <link href="/2021/06/07/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86(crt)/index/"/>
      <url>/2021/06/07/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86(crt)/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1495-【模板】中国剩余定理-CRT-曹冲养猪"><a href="https://www.luogu.com.cn/problem/P1495">P1495 【模板】中国剩余定理(CRT)/曹冲养猪</a></h2><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>a</mi><mi>i</mi></msub><mo>×</mo><msub><mi>M</mi><mi>i</mi></msub><mo>×</mo><msubsup><mi>M</mi><mi>i</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">(</mo><mi mathvariant="normal">mod</mi><mo>⁡</mo><mtext> </mtext><msub><mi>m</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mtext> </mtext><mi mathvariant="normal">mod</mi><mo>⁡</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">x=\sum\limits_{i=1}^{n}a_i\times M_i\times M^{-1}_i(\operatorname{mod}~m_i)~\operatorname{mod}m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3291em;vertical-align:-0.9777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3514em;"><span style="top:-2.1223em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1311em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8542em;"><span style="top:-2.4231em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mop"><span class="mord mathrm">mod</span></span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace nobreak"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mord mathrm">mod</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span></span></span></span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span>&amp; x, <span class="keyword">int</span>&amp; y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b) &#123;</span><br><span class="line">        x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> d = <span class="built_in">exgcd</span>(b, a % b, y, x);</span><br><span class="line">    y -= a / b * x;</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> mod)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans, k;</span><br><span class="line">    <span class="built_in">exgcd</span>(n, mod, ans, k);</span><br><span class="line">    <span class="keyword">return</span> (ans % mod + mod) % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, a[MAXn + <span class="number">10</span>], m[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Crt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>, mulm = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        mulm = mulm * m[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> M = mulm / m[i];</span><br><span class="line">        ans = (ans + ((a[i] * M) % mulm * <span class="built_in">inv</span>(M, m[i])) % mulm) % mulm;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="built_in">read</span>(m[i]), <span class="built_in">read</span>(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, <span class="built_in">Crt</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二叉堆</title>
      <link href="/2021/06/07/%E4%BA%8C%E5%8F%89%E5%A0%86/index/"/>
      <url>/2021/06/07/%E4%BA%8C%E5%8F%89%E5%A0%86/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3378-【模板】堆"><a href="https://www.luogu.com.cn/problem/P3378">P3378 【模板】堆</a></h2><h4 id="大根堆">大根堆</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1000000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); (c &lt; <span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>; c = <span class="built_in">getchar</span>());</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> s = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>; c = <span class="built_in">getchar</span>()) &#123;</span><br><span class="line">        s = (s &lt;&lt; <span class="number">3</span>) + (s &lt;&lt; <span class="number">1</span>) + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? -s : s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> heap[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> heapn;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Up</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> f = p / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (p &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (heap[p] &lt; heap[f]) &#123;</span><br><span class="line">            <span class="built_in">swap</span>(heap[p], heap[f]);</span><br><span class="line">            p = f;</span><br><span class="line">            f /= <span class="number">2</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Down</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s = p * <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (s &lt;= heapn) &#123;</span><br><span class="line">        <span class="keyword">if</span> (heap[s] &gt; heap[s + <span class="number">1</span>] &amp;&amp; s &lt; heapn) &#123;</span><br><span class="line">            s++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (heap[s] &lt; heap[p]) &#123;</span><br><span class="line">            <span class="built_in">swap</span>(heap[s], heap[p]);</span><br><span class="line">            p = s;</span><br><span class="line">            s *= <span class="number">2</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    heap[++heapn] = x;</span><br><span class="line">    <span class="built_in">Up</span>(heapn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pop</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    heap[p] = heap[heapn--];</span><br><span class="line">    <span class="built_in">Up</span>(p);</span><br><span class="line">    <span class="built_in">Down</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PopRoot</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    heap[<span class="number">1</span>] = heap[heapn--];</span><br><span class="line">    <span class="built_in">Down</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetRoot</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> heap[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> opt;</span><br><span class="line">    n = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">while</span> (n--) &#123;</span><br><span class="line">        opt = <span class="built_in">read</span>();</span><br><span class="line">        <span class="built_in"><span class="keyword">switch</span></span> (opt) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">Insert</span>(<span class="built_in">read</span>());</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">GetRoot</span>());</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">PopRoot</span>();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="小根堆">小根堆</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1000000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); (c &lt; <span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>; c = <span class="built_in">getchar</span>());</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> s = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>; c = <span class="built_in">getchar</span>()) &#123;</span><br><span class="line">        s = (s &lt;&lt; <span class="number">3</span>) + (s &lt;&lt; <span class="number">1</span>) + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? -s : s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> heap[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> heapn;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Up</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> f = p / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (p &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (heap[p] &gt; heap[f]) &#123;</span><br><span class="line">            <span class="built_in">swap</span>(heap[p], heap[f]);</span><br><span class="line">            p = f;</span><br><span class="line">            f /= <span class="number">2</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Down</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s = p * <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (s &lt;= heapn) &#123;</span><br><span class="line">        <span class="keyword">if</span> (heap[s] &lt; heap[s + <span class="number">1</span>] &amp;&amp; s &lt; heapn) &#123;</span><br><span class="line">            s++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (heap[s] &gt; heap[p]) &#123;</span><br><span class="line">            <span class="built_in">swap</span>(heap[s], heap[p]);</span><br><span class="line">            p = s;</span><br><span class="line">            s *= <span class="number">2</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    heap[++heapn] = x;</span><br><span class="line">    <span class="built_in">Up</span>(heapn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pop</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    heap[p] = heap[heapn--];</span><br><span class="line">    <span class="built_in">Up</span>(p);</span><br><span class="line">    <span class="built_in">Down</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PopRoot</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    heap[<span class="number">1</span>] = heap[heapn--];</span><br><span class="line">    <span class="built_in">Down</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetRoot</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> heap[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">Insert</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">Insert</span>(<span class="number">3</span>);</span><br><span class="line">    <span class="built_in">Insert</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">Insert</span>(<span class="number">7</span>);</span><br><span class="line">    <span class="built_in">Insert</span>(<span class="number">11</span>);</span><br><span class="line">    <span class="built_in">Insert</span>(<span class="number">25</span>);</span><br><span class="line">    cout &lt;&lt; <span class="built_in">GetRoot</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">PopRoot</span>();</span><br><span class="line">    cout &lt;&lt; <span class="built_in">GetRoot</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二维费用背包</title>
      <link href="/2021/06/07/%E4%BA%8C%E7%BB%B4%E8%B4%B9%E7%94%A8%E8%83%8C%E5%8C%85/index/"/>
      <url>/2021/06/07/%E4%BA%8C%E7%BB%B4%E8%B4%B9%E7%94%A8%E8%83%8C%E5%8C%85/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1855-榨取kkksc03"><a href="https://www.luogu.com.cn/problem/P1855">P1855 榨取kkksc03</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXW1 = <span class="number">200</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXW2 = <span class="number">200</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, W1, W2;</span><br><span class="line"><span class="keyword">int</span> d[MAXW1 + <span class="number">10</span>][MAXW2 + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); (c &lt; <span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>; c = <span class="built_in">getchar</span>());</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> s = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>; c = <span class="built_in">getchar</span>())s = (s &lt;&lt; <span class="number">3</span>) + (s &lt;&lt; <span class="number">1</span>) + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> f ? -s : s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">eva_maxV</span><span class="params">(<span class="keyword">int</span> W1, <span class="keyword">int</span> W2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = -INF;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= W1; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= W2; j++)  ans = <span class="built_in">max</span>(ans, d[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = <span class="built_in">read</span>();</span><br><span class="line">    W1 = <span class="built_in">read</span>();</span><br><span class="line">    W2 = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">int</span> v, w1, w2;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        v = <span class="number">1</span>;</span><br><span class="line">        w1 = <span class="built_in">read</span>();</span><br><span class="line">        w2 = <span class="built_in">read</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = W1; j &gt;= w1; j--) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = W2; k &gt;= w2; k--) d[j][k] = <span class="built_in">max</span>(d[j][k], d[j - w1][k - w2] + v);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">eva_maxV</span>(W1, W2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分组背包</title>
      <link href="/2021/06/07/%E5%88%86%E7%BB%84%E8%83%8C%E5%8C%85/index/"/>
      <url>/2021/06/07/%E5%88%86%E7%BB%84%E8%83%8C%E5%8C%85/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1757-通天之分组背包"><a href="https://www.luogu.com.cn/problem/P1757">P1757 通天之分组背包</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXW = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, W;</span><br><span class="line"><span class="keyword">int</span> v[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> w[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> team[MAXn + <span class="number">10</span>][MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> d[MAXW + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>; c = <span class="built_in">getchar</span>());</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> s = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>; c = <span class="built_in">getchar</span>()) &#123;</span><br><span class="line">        s = (s &lt;&lt; <span class="number">3</span>) + (s &lt;&lt; <span class="number">1</span>) + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? -s : s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put_in</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    W = <span class="built_in">read</span>();</span><br><span class="line">    n = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">int</span> teamid;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        w[i] = <span class="built_in">read</span>();</span><br><span class="line">        v[i] = <span class="built_in">read</span>();</span><br><span class="line">        teamid = <span class="built_in">read</span>();</span><br><span class="line">        team[teamid][++team[teamid][<span class="number">0</span>]] = i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rec</span><span class="params">(<span class="keyword">int</span> v[], <span class="keyword">int</span> w[], <span class="keyword">int</span> W)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= MAXn; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (team[i][<span class="number">0</span>]) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = W; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= team[i][<span class="number">0</span>]; k++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (j &gt;= w[team[i][k]])    d[j] = <span class="built_in">max</span>(d[j], d[j - w[team[i][k]]] + v[team[i][k]]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">eva_maxV</span><span class="params">(<span class="keyword">int</span> d[], <span class="keyword">int</span> W)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = -INF;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= W; i++)   ans = <span class="built_in">max</span>(ans, d[i]);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">put_in</span>();</span><br><span class="line">    <span class="built_in">rec</span>(v, w, W);</span><br><span class="line">    cout &lt;&lt; <span class="built_in">eva_maxV</span>(d, W);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哈希</title>
      <link href="/2021/06/07/%E5%93%88%E5%B8%8C/index/"/>
      <url>/2021/06/07/%E5%93%88%E5%B8%8C/index/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">2333</span>;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>, num, mo;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; hash[MOD + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">    mo = a % MOD;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; hash[mo].<span class="built_in">size</span>(); i++)</span><br><span class="line">        <span class="keyword">if</span> (hash[mo][i] == a)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">    ans++;</span><br><span class="line">    hash[mo].<span class="built_in">push_back</span>(a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a), <span class="built_in">insert</span>(a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>埃氏筛</title>
      <link href="/2021/06/07/%E5%9F%83%E6%B0%8F%E7%AD%9B/index/"/>
      <url>/2021/06/07/%E5%9F%83%E6%B0%8F%E7%AD%9B/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3383-【模板】线性筛素数"><a href="https://www.luogu.com.cn/problem/P3383">P3383 【模板】线性筛素数</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register </span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e8</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>)x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + c - <span class="string">&#x27;0&#x27;</span>;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, cntp, p[MAXn / <span class="number">10</span> + <span class="number">100</span>];</span><br><span class="line"><span class="keyword">bool</span> notp[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ES</span><span class="params">(<span class="keyword">int</span> up)</span> </span>&#123;</span><br><span class="line">notp[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= up; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!notp[i]) &#123;</span><br><span class="line">p[++cntp] = i;</span><br><span class="line"><span class="keyword">if</span> ((<span class="keyword">long</span> <span class="keyword">long</span>)i * i &lt;= up)</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = i * i; j &lt;= up; j += i) </span><br><span class="line">notp[j] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(m);</span><br><span class="line"><span class="built_in">ES</span>(n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, q; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(q);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, p[q]);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多重背包</title>
      <link href="/2021/06/07/%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85/index/"/>
      <url>/2021/06/07/%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1776-宝物筛选"><a href="https://www.luogu.com.cn/problem/P1776">P1776 宝物筛选</a></h2><h4 id="1-单调队列优化版">1. 单调队列优化版</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXW = <span class="number">4e4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ...Argv&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;n, Argv &amp;...argv)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">read</span>(n), <span class="built_in">read</span>(argv...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> le, ri; pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; q[MAXW + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">le = <span class="number">1</span>;</span><br><span class="line">ri = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Push_back</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> idx)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (le &lt;= ri &amp;&amp; q[ri].first &lt;= x) &#123;</span><br><span class="line">--ri;</span><br><span class="line">&#125;</span><br><span class="line">q[++ri] = <span class="built_in">make_pair</span>(x, idx);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Front</span><span class="params">(<span class="keyword">int</span> idx)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (le &lt;= ri &amp;&amp; q[le].second &lt; idx) &#123;</span><br><span class="line">++le;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> q[le].first;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, W, d[MAXW + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n, W);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, v, w, m; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(v, w, m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; w; ++j) &#123;</span><br><span class="line"><span class="built_in">Init</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>, l = j; l &lt;= W; ++k, l += w) &#123;</span><br><span class="line"><span class="built_in">Push_back</span>(d[l] - k * v, k);</span><br><span class="line">d[l] = <span class="built_in">Front</span>(k - m) + k * v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, d[W]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-二进制拆分版">2. 二进制拆分版</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXW = <span class="number">40000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, W;</span><br><span class="line"><span class="keyword">int</span> v_new[MAXn * <span class="number">10</span> + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> w_new[MAXn * <span class="number">10</span> + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> num_new;</span><br><span class="line"><span class="keyword">int</span> d[MAXW + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); (c &lt; <span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>; c = <span class="built_in">getchar</span>());</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> s = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>; c = <span class="built_in">getchar</span>())s = (s &lt;&lt; <span class="number">3</span>) + (s &lt;&lt; <span class="number">1</span>) + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> f ? -s : s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bin_divide</span><span class="params">(<span class="keyword">int</span> v, <span class="keyword">int</span> w, <span class="keyword">int</span> num, <span class="keyword">int</span> v_new[], <span class="keyword">int</span> w_new[], <span class="keyword">int</span>&amp; num_new)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; num &gt;= i; i &lt;&lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        v_new[++num_new] = v * i;</span><br><span class="line">        w_new[num_new] = w * i;</span><br><span class="line">        num -= i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        v_new[++num_new] = v * num;</span><br><span class="line">        w_new[num_new] = w * num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rec</span><span class="params">(<span class="keyword">int</span> v[], <span class="keyword">int</span> w[], <span class="keyword">int</span> W, <span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= num; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = W; j &gt;= w[i]; j--)    d[j] = <span class="built_in">max</span>(d[j], d[j - w[i]] + v[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">eva_maxV</span><span class="params">(<span class="keyword">int</span> d[], <span class="keyword">int</span> W)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = -INF;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= W; i++)   ans = <span class="built_in">max</span>(ans, d[i]);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = <span class="built_in">read</span>();</span><br><span class="line">    W = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">int</span> v, w, num;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        v = <span class="built_in">read</span>();</span><br><span class="line">        w = <span class="built_in">read</span>();</span><br><span class="line">        num = <span class="built_in">read</span>();</span><br><span class="line">        <span class="built_in">bin_divide</span>(v, w, num, v_new, w_new, num_new);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">rec</span>(v_new, w_new, W, num_new);</span><br><span class="line">    cout &lt;&lt; <span class="built_in">eva_maxV</span>(d, W);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符串哈希</title>
      <link href="/2021/06/07/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/index/"/>
      <url>/2021/06/07/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3370-【模板】字符串哈希"><a href="https://www.luogu.com.cn/problem/P3370">P3370 【模板】字符串哈希</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1510</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> base = <span class="number">261</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">23333</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> s[MAXn];</span><br><span class="line">vector&lt;string&gt; hash[MOD + <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mo = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; s[i]; i++)</span><br><span class="line">        mo = (mo * <span class="number">1ll</span> * base + s[i]) % MOD;</span><br><span class="line">    string s2 = s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; hash[mo].<span class="built_in">size</span>(); i++)</span><br><span class="line">        <span class="keyword">if</span> (hash[mo][i] == s2)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">    hash[mo].<span class="built_in">push_back</span>(s2);</span><br><span class="line">    ans++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;s), <span class="built_in">insert</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>完全背包</title>
      <link href="/2021/06/07/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/index/"/>
      <url>/2021/06/07/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1616-疯狂的采药"><a href="https://www.luogu.com.cn/problem/P1616">P1616 疯狂的采药</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> LL MAXn = <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">const</span> LL MAXW = <span class="number">10000000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">register</span> LL <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">max</span><span class="params">(LL a, LL b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LL n, W;</span><br><span class="line">LL d[MAXW + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">W = <span class="built_in">read</span>();</span><br><span class="line">n = <span class="built_in">read</span>();</span><br><span class="line">LL w, v;</span><br><span class="line"><span class="keyword">for</span> (LL i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">w = <span class="built_in">read</span>();</span><br><span class="line">v = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span> (LL i = w; i &lt;= W; i++) &#123;</span><br><span class="line">d[i] = <span class="built_in">max</span>(d[i], d[i - w] + v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, d[W]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>并查集</title>
      <link href="/2021/06/07/%E5%B9%B6%E6%9F%A5%E9%9B%86/index/"/>
      <url>/2021/06/07/%E5%B9%B6%E6%9F%A5%E9%9B%86/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3367-【模板】并查集"><a href="https://www.luogu.com.cn/problem/P3367">P3367 【模板】并查集</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e4</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fa[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">anc</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> fa[x] = fa[x] == x ? x : <span class="built_in">anc</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">anc</span>(x) != <span class="built_in">anc</span>(y)) &#123;</span><br><span class="line">fa[<span class="built_in">anc</span>(x)] = y;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">SameAnc</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">anc</span>(x) == <span class="built_in">anc</span>(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">(<span class="keyword">int</span> top)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= top; ++i) &#123;</span><br><span class="line">fa[i] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(m);</span><br><span class="line"><span class="built_in">Init</span>(n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, opt, x, y; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(opt);</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (opt) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="built_in">read</span>(x), <span class="built_in">read</span>(y);</span><br><span class="line"><span class="built_in">Merge</span>(x, y);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="built_in">read</span>(x), <span class="built_in">read</span>(y);</span><br><span class="line"><span class="built_in">SameAnc</span>(x, y) ? <span class="built_in">printf</span>(<span class="string">&quot;Y\n&quot;</span>) : <span class="built_in">printf</span>(<span class="string">&quot;N\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速排序</title>
      <link href="/2021/06/07/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/index/"/>
      <url>/2021/06/07/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1177-【模板】快速排序"><a href="https://www.luogu.com.cn/problem/P1177">P1177 【模板】快速排序</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">void</span> _QuickSort_(<span class="keyword">int</span>* a, <span class="keyword">int</span> l, <span class="keyword">int</span> r) &#123;</span><br><span class="line">    <span class="keyword">int</span> i = l, j = r, f = a[(l + r) / <span class="number">2</span>];</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (a[i] &lt; f) &#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (a[j] &gt; f) &#123;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= j) &#123;</span><br><span class="line">            <span class="keyword">int</span> tmp = a[i];</span><br><span class="line">            a[i] = a[j];</span><br><span class="line">            a[j] = tmp;</span><br><span class="line">            i++;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (i &lt;= j);</span><br><span class="line">    <span class="keyword">if</span> (l &lt; j) &#123;</span><br><span class="line">        _QuickSort_(a, l, j);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; r) &#123;</span><br><span class="line">        _QuickSort_(a, i, r);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QuickSort</span><span class="params">(<span class="keyword">int</span>* a, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    _QuickSort_(a, l, r - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        a[i] = <span class="built_in">read</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">QuickSort</span>(a, <span class="number">0</span>, n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速幂</title>
      <link href="/2021/06/07/%E5%BF%AB%E9%80%9F%E5%B9%82/index/"/>
      <url>/2021/06/07/%E5%BF%AB%E9%80%9F%E5%B9%82/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1226-【模板】快速幂-取余运算"><a href="https://www.luogu.com.cn/problem/P1226">P1226 【模板】快速幂||取余运算</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e7</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">power</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (y) &#123;</span><br><span class="line">        <span class="keyword">if</span> (y &amp; <span class="number">1</span>) &#123;</span><br><span class="line">            ans = ((LL)ans * x) % MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        x = ((LL)x * x) % MOD;</span><br><span class="line">        y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扩展欧几里得定理(exgcd)</title>
      <link href="/2021/06/07/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E5%AE%9A%E7%90%86(exgcd)/index/"/>
      <url>/2021/06/07/%E6%89%A9%E5%B1%95%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E5%AE%9A%E7%90%86(exgcd)/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1082-NOIP2012-提高组-同余方程"><a href="https://www.luogu.com.cn/problem/P1082">P1082 [NOIP2012 提高组] 同余方程</a></h2><h2 id="P5656-【模板】二元一次不定方程-exgcd"><a href="https://www.luogu.com.cn/problem/P5656">P5656 【模板】二元一次不定方程 (exgcd)</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> &amp;x, <span class="keyword">int</span> &amp;y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!b) &#123;</span><br><span class="line">x = <span class="number">1</span>; y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> d = <span class="built_in">exgcd</span>(b, a % b, y, x);</span><br><span class="line">y -= a / b * x;</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a, b, d, x, y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">d = <span class="built_in">exgcd</span>(a, b, x, y);</span><br><span class="line">x *= d;</span><br><span class="line">x = (x % b + b) % b;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最长公共子序列(lcs)</title>
      <link href="/2021/06/07/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97(lcs)/index/"/>
      <url>/2021/06/07/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97(lcs)/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1439-【模板】最长公共子序列"><a href="https://www.luogu.com.cn/problem/P1439">P1439 【模板】最长公共子序列</a></h2><p>本解法时间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，还有一种 <strong>DP</strong> 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的求法，感兴趣的可以上网了解一下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">100000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) x = x * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> id[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> mapping[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> d[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)   id[<span class="built_in">read</span>()] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)   mapping[i] = id[<span class="built_in">read</span>()];</span><br><span class="line">    <span class="built_in">memset</span>(d, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(d));</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">    d[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>, r = len, mid;</span><br><span class="line">        <span class="keyword">if</span> (mapping[i] &gt; d[len])   d[++len] = mapping[i];</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">                mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span> (d[mid] &gt; mapping[i])   r = mid;</span><br><span class="line">                <span class="keyword">else</span>    l = mid + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            d[l] = <span class="built_in">min</span>(mapping[i], d[l]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; len;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>混合背包</title>
      <link href="/2021/06/07/%E6%B7%B7%E5%90%88%E8%83%8C%E5%8C%85/index/"/>
      <url>/2021/06/07/%E6%B7%B7%E5%90%88%E8%83%8C%E5%8C%85/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1833-樱花"><a href="https://www.luogu.com.cn/problem/P1833">P1833 樱花</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXW = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, W;</span><br><span class="line"><span class="keyword">int</span> v_new[MAXn * <span class="number">10</span> + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> w_new[MAXn * <span class="number">10</span> + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> is_limit[MAXn * <span class="number">10</span> + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> num_new;</span><br><span class="line"><span class="keyword">int</span> d[MAXW + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); (c &lt; <span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>; c = <span class="built_in">getchar</span>());</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> s = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>; c = <span class="built_in">getchar</span>())s = (s &lt;&lt; <span class="number">3</span>) + (s &lt;&lt; <span class="number">1</span>) + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> f ? -s : s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bin_divide</span><span class="params">(<span class="keyword">int</span> v, <span class="keyword">int</span> w, <span class="keyword">int</span> num, <span class="keyword">int</span> v_new[], <span class="keyword">int</span> w_new[], <span class="keyword">int</span>&amp; num_new, <span class="keyword">bool</span> is_limit[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; num &gt;= i; i &lt;&lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        v_new[++num_new] = v * i;</span><br><span class="line">        w_new[num_new] = w * i;</span><br><span class="line">        is_limit[num_new] = <span class="number">1</span>;</span><br><span class="line">        num -= i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        v_new[++num_new] = v * num;</span><br><span class="line">        w_new[num_new] = w * num;</span><br><span class="line">        is_limit[num_new] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put_in</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    W = <span class="built_in">read</span>();</span><br><span class="line">    n = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">int</span> v, w, num;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        w = <span class="built_in">read</span>();</span><br><span class="line">        v = <span class="built_in">read</span>();</span><br><span class="line">        num = <span class="built_in">read</span>();</span><br><span class="line">        <span class="keyword">if</span> (num) <span class="built_in">bin_divide</span>(v, w, num, v_new, w_new, num_new, is_limit);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            v_new[++num_new] = v;</span><br><span class="line">            w_new[num_new] = w;</span><br><span class="line">            is_limit[num_new] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rec</span><span class="params">(<span class="keyword">int</span> v[], <span class="keyword">int</span> w[], <span class="keyword">bool</span> is_limit[], <span class="keyword">int</span> W, <span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= num; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (is_limit[i]) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = W; j &gt;= w[i]; j--)    d[j] = <span class="built_in">max</span>(d[j], d[j - w[i]] + v[i]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = w[i]; j &lt;= W; j++)    d[j] = <span class="built_in">max</span>(d[j], d[j - w[i]] + v[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">eva_maxV</span><span class="params">(<span class="keyword">int</span> W)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = -INF;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= W; i++)   ans = <span class="built_in">max</span>(ans, d[i]);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">put_in</span>();</span><br><span class="line">    <span class="built_in">rec</span>(v_new, w_new, is_limit, W, num_new);</span><br><span class="line">    cout &lt;&lt; <span class="built_in">eva_maxV</span>(W);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笛卡尔树</title>
      <link href="/2021/06/07/%E7%AC%9B%E5%8D%A1%E5%B0%94%E6%A0%91/index/"/>
      <url>/2021/06/07/%E7%AC%9B%E5%8D%A1%E5%B0%94%E6%A0%91/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P5854-【模板】笛卡尔树"><a href="https://www.luogu.com.cn/problem/P5854">P5854 【模板】笛卡尔树</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> LL MAXn = <span class="number">1e7</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">LL p;</span><br><span class="line">LL ls;</span><br><span class="line">LL rs;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Node node[MAXn + <span class="number">10</span>];</span><br><span class="line">LL n;</span><br><span class="line">LL nowid;</span><br><span class="line">LL stk[MAXn + <span class="number">10</span>];</span><br><span class="line">LL top;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> LL <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); (c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>; c = <span class="built_in">getchar</span>());</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">    <span class="keyword">register</span> LL s = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>; c = <span class="built_in">getchar</span>()) &#123;</span><br><span class="line">        s = (s &lt;&lt; <span class="number">3</span>) + (s &lt;&lt; <span class="number">1</span>) + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f ? -s : s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(LL p)</span> </span>&#123;</span><br><span class="line">nowid++;</span><br><span class="line">node[nowid].p = p;</span><br><span class="line">LL newtop = top;</span><br><span class="line"><span class="keyword">while</span> (newtop &amp;&amp; node[stk[newtop]].p &gt; node[nowid].p) </span><br><span class="line">newtop--;</span><br><span class="line"><span class="keyword">if</span> (newtop) </span><br><span class="line">node[stk[newtop]].rs = nowid; </span><br><span class="line"><span class="keyword">if</span> (newtop &lt; top) </span><br><span class="line">node[nowid].ls = stk[newtop + <span class="number">1</span>];</span><br><span class="line">stk[++newtop] = nowid;</span><br><span class="line">top = newtop;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">n = <span class="built_in">read</span>();</span><br><span class="line">LL p;</span><br><span class="line"><span class="keyword">for</span> (LL i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">p = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">insert</span>(p);<span class="comment">/*这里 insert 的数字的值(p)没有单调的要求，</span></span><br><span class="line"><span class="comment">但数字的标号(id)要求单增，若不单增要先排序*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (LL i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld %lld %lld\n&quot;</span>, node[i].p, node[i].ls, node[i].rs);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性求区间欧拉函数</title>
      <link href="/2021/06/07/%E7%BA%BF%E6%80%A7%E6%B1%82%E5%8C%BA%E9%97%B4%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/index/"/>
      <url>/2021/06/07/%E7%BA%BF%E6%80%A7%E6%B1%82%E5%8C%BA%E9%97%B4%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/index/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEBUG</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> minpf[MAXn + <span class="number">10</span>], cntp, prime[MAXn / <span class="number">5</span> + <span class="number">100</span>], phi[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EvaEuler</span><span class="params">(<span class="keyword">int</span> up)</span> </span>&#123;</span><br><span class="line">phi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">minpf[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= up; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!minpf[i]) &#123;</span><br><span class="line">minpf[i] = i;</span><br><span class="line">prime[++cntp] = i;</span><br><span class="line">phi[i] = i - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cntp &amp;&amp; i * prime[j] &lt;= up &amp;&amp; minpf[i] &gt;= prime[j]; ++j) &#123;</span><br><span class="line">minpf[i * prime[j]] = prime[j];</span><br><span class="line">phi[i * prime[j]] = phi[i] * (i % prime[j] ? prime[j] - <span class="number">1</span> : prime[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> up = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">EvaEuler</span>(up);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= up; ++i) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= up; ++i) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>, minpf[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= up; ++i) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>, phi[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cntp; ++i) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>, prime[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性求区间逆元</title>
      <link href="/2021/06/07/%E7%BA%BF%E6%80%A7%E6%B1%82%E5%8C%BA%E9%97%B4%E9%80%86%E5%85%83/index/"/>
      <url>/2021/06/07/%E7%BA%BF%E6%80%A7%E6%B1%82%E5%8C%BA%E9%97%B4%E9%80%86%E5%85%83/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3811-【模板】乘法逆元"><a href="https://www.luogu.com.cn/problem/P3811">P3811 【模板】乘法逆元</a></h2><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>n</mi><msub><mi>v</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mrow><mo fence="true">⌊</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mi>p</mi><mi>i</mi></mfrac></mstyle><mo fence="true">⌋</mo></mrow><mo stretchy="false">)</mo><mo>×</mo><mi>i</mi><mi>n</mi><msub><mi>v</mi><mrow><mi>p</mi><mi mathvariant="normal">mod</mi><mo>⁡</mo><mi>i</mi></mrow></msub><mi mathvariant="normal">mod</mi><mo>⁡</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">inv_i=(p-\left\lfloor\dfrac{p}{i}\right\rfloor)\times inv_{p\operatorname{mod}i}\operatorname{mod}p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.15em;"></span><span class="mord mathnormal">in</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.836em;vertical-align:-0.686em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">⌊</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">i</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">⌋</span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">in</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mop mtight"><span class="mord mathrm mtight">mod</span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mord mathrm">mod</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span></span></span></span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EvaSectionInvLine</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> mod, <span class="keyword">int</span> inv[])</span> </span>&#123;</span><br><span class="line">inv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">inv[i] = (<span class="keyword">long</span> <span class="keyword">long</span>) (mod - mod / i) * inv[mod % i] % mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性筛</title>
      <link href="/2021/06/07/%E7%BA%BF%E6%80%A7%E7%AD%9B/index/"/>
      <url>/2021/06/07/%E7%BA%BF%E6%80%A7%E7%AD%9B/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3383-【模板】线性筛素数"><a href="https://www.luogu.com.cn/problem/P3383">P3383 【模板】线性筛素数</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register </span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e8</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>)x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + c - <span class="string">&#x27;0&#x27;</span>;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, cntp, p[MAXn / <span class="number">10</span> + <span class="number">100</span>];</span><br><span class="line"><span class="keyword">bool</span> notp[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LS</span><span class="params">(<span class="keyword">int</span> up)</span> </span>&#123;</span><br><span class="line">notp[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= up; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (!notp[i]) </span><br><span class="line">p[++cntp] = i;</span><br><span class="line"><span class="keyword">int</span> up2 = up / i;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cntp &amp;&amp; p[j] &lt;= up2; ++j) &#123;</span><br><span class="line">notp[i * p[j]] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (!(i % p[j])) </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(m);</span><br><span class="line"><span class="built_in">LS</span>(n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, q; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(q);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, p[q]);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>费马小定理求逆元</title>
      <link href="/2021/06/07/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86%E6%B1%82%E9%80%86%E5%85%83/index/"/>
      <url>/2021/06/07/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86%E6%B1%82%E9%80%86%E5%85%83/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3811-【模板】乘法逆元"><a href="https://www.luogu.com.cn/problem/P3811">P3811 【模板】乘法逆元</a></h2><p>此题不是求单个逆元的模板题，但可以用这道模板题检验这种求逆方法的正确性（没有WA）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">power</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> mod)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (y) &#123;</span><br><span class="line">        <span class="keyword">if</span> (y &amp; <span class="number">1</span>) &#123;</span><br><span class="line">            ans = (<span class="number">1LL</span> * ans * x) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        x = (<span class="number">1LL</span> * x * x) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> mod)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">power</span>(n, mod - <span class="number">2</span>, mod);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高精运算</title>
      <link href="/2021/06/07/%E9%AB%98%E7%B2%BE%E8%BF%90%E7%AE%97/index/"/>
      <url>/2021/06/07/%E9%AB%98%E7%B2%BE%E8%BF%90%E7%AE%97/index/</url>
      
        <content type="html"><![CDATA[<h3 id="实用小高精（推荐）"><a href="https://rsdbkhusky.github.io/2021/08/18/%E5%AE%9E%E7%94%A8%E5%B0%8F%E9%AB%98%E7%B2%BE/">实用小高精（推荐）</a></h3><h2 id="P1601-A-B-Problem（高精）"><a href="https://www.luogu.com.cn/problem/P1601">P1601 A+B Problem（高精）</a></h2><h2 id="P1303-A-B-Problem"><a href="https://www.luogu.com.cn/problem/P1303">P1303 A*B Problem</a></h2><h2 id="P1480-A-B-Problem"><a href="https://www.luogu.com.cn/problem/P1480">P1480 A/B Problem</a></h2><p><strong>(转载的)</strong></p><p><strong>支持负数，压位，重载运算符</strong></p><p><strong><s>不过赛场上应该没人写一遍这个</s></strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BIT = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1e4</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bign</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> num[maxn], len;</span><br><span class="line">    <span class="keyword">bool</span> flag;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> bign <span class="title">abs</span><span class="params">(<span class="keyword">const</span> bign &amp;x)</span> </span>&#123;</span><br><span class="line">        bign k = x;</span><br><span class="line">        k.flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(bign &amp;x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (x.num[x.len] == <span class="number">0</span> &amp;&amp; x.len &gt; <span class="number">1</span>)x.len--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">bign</span>() &#123;</span><br><span class="line">        <span class="built_in">memset</span>(num, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(num));</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        len = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">bign</span>(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) &#123;</span><br><span class="line">        *<span class="keyword">this</span> = <span class="built_in">bign</span>();</span><br><span class="line">        <span class="keyword">if</span> (x) &#123;</span><br><span class="line">            <span class="keyword">int</span> k = x;</span><br><span class="line">            <span class="keyword">if</span> (k &lt; <span class="number">0</span>)k = -k, flag = <span class="literal">false</span>;</span><br><span class="line">            len = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (k) &#123;</span><br><span class="line">                num[++len] = k % MOD;</span><br><span class="line">                k /= MOD;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">bign</span>(<span class="keyword">const</span> ll &amp;x) &#123;</span><br><span class="line">        *<span class="keyword">this</span> = <span class="built_in">bign</span>();</span><br><span class="line">        <span class="keyword">if</span> (x) &#123;</span><br><span class="line">            ll k = x;</span><br><span class="line">            <span class="keyword">if</span> (k &lt; <span class="number">0</span>)k = -k, flag = <span class="literal">false</span>;</span><br><span class="line">            len = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (k) &#123;</span><br><span class="line">                num[++len] = k % MOD;</span><br><span class="line">                k /= MOD;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">bign</span>(<span class="keyword">const</span> <span class="keyword">char</span> *x) &#123;</span><br><span class="line">        <span class="keyword">int</span> l = <span class="built_in">strlen</span>(x), s, t = <span class="number">0</span>, p = <span class="number">0</span>, k = <span class="number">1</span>;</span><br><span class="line">        *<span class="keyword">this</span> = <span class="built_in">bign</span>();</span><br><span class="line">        <span class="keyword">if</span> (x[<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>)flag = <span class="literal">false</span>, s = <span class="number">1</span>;</span><br><span class="line">        len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = l - <span class="number">1</span>; i &gt;= s; i--) &#123;</span><br><span class="line">            p += k * (x[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            k *= <span class="number">10</span>;</span><br><span class="line">            t++;</span><br><span class="line">            <span class="keyword">if</span> (t == <span class="number">4</span>) &#123;</span><br><span class="line">                t = <span class="number">0</span>;</span><br><span class="line">                num[++len] = p;</span><br><span class="line">                p = <span class="number">0</span>;</span><br><span class="line">                k = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (p)num[++len] = p;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">bign</span>(<span class="keyword">const</span> string x) &#123;</span><br><span class="line">        <span class="keyword">int</span> l = x.<span class="built_in">length</span>(), s = <span class="number">0</span>, t = <span class="number">0</span>, p = <span class="number">0</span>, k = <span class="number">1</span>;</span><br><span class="line">        *<span class="keyword">this</span> = <span class="built_in">bign</span>();</span><br><span class="line">        <span class="keyword">if</span> (x[<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>)flag = <span class="literal">false</span>, s = <span class="number">1</span>;</span><br><span class="line">        len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = l - <span class="number">1</span>; i &gt;= s; i--) &#123;</span><br><span class="line">            p += k * (x[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            k *= <span class="number">10</span>;</span><br><span class="line">            t++;</span><br><span class="line">            <span class="keyword">if</span> (t == BIT) &#123;</span><br><span class="line">                t = <span class="number">0</span>;</span><br><span class="line">                num[++len] = p;</span><br><span class="line">                p = <span class="number">0</span>;</span><br><span class="line">                k = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (p)num[++len] = p;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>=(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> = <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>=(<span class="keyword">const</span> ll &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> = <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>=(<span class="keyword">const</span> <span class="keyword">char</span> *x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> = <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>=(<span class="keyword">const</span> string &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> = <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> bign &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (flag != x.flag)<span class="keyword">return</span> flag &lt; x.flag;</span><br><span class="line">        <span class="keyword">if</span> (len != x.len)<span class="keyword">return</span> (len &lt; x.len) ^ flag ^ <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = len; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (num[i] != x.num[i]) &#123;</span><br><span class="line">                <span class="keyword">return</span> (num[i] &lt; x.num[i]) ^ flag ^ <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> &lt; <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> ll &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> &lt; <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&gt;(<span class="keyword">const</span> bign &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> x &lt; *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&gt;(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> &gt; <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&gt;(<span class="keyword">const</span> ll &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> &gt; <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;=(<span class="keyword">const</span> bign &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> !(*<span class="keyword">this</span> &gt; x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;=(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> &lt;= <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;=(<span class="keyword">const</span> ll &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> &lt;= <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&gt;=(<span class="keyword">const</span> bign &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> !(*<span class="keyword">this</span> &lt; x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&gt;=(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> &gt;= <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&gt;=(<span class="keyword">const</span> ll &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> &gt;= <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> bign &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (flag != x.flag)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (len != x.len)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = len; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (num[i] != x.num[i]) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> == <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> ll &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> == <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>!=(<span class="keyword">const</span> bign &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> !(*<span class="keyword">this</span> == x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>!=(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> != <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>!=(<span class="keyword">const</span> ll &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> != <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> istream &amp;<span class="keyword">operator</span>&gt;&gt;(istream &amp;in, bign &amp;x) &#123;</span><br><span class="line">        string s;</span><br><span class="line">        in &gt;&gt; s;</span><br><span class="line">        x = s;</span><br><span class="line">        <span class="keyword">return</span> in;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> ostream &amp;<span class="keyword">operator</span>&lt;&lt;(ostream &amp;out, <span class="keyword">const</span> bign &amp;x) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.flag == <span class="literal">false</span> &amp;&amp; x != <span class="number">0</span>)out &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line">        out &lt;&lt; x.num[x.len];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = x.len - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--)<span class="built_in">printf</span>(<span class="string">&quot;%0*d&quot;</span>, BIT, x.num[i]);</span><br><span class="line">        <span class="keyword">return</span> out;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>-() <span class="keyword">const</span> &#123;</span><br><span class="line">        bign k = *<span class="keyword">this</span>;</span><br><span class="line">        k.flag ^= <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>+(<span class="keyword">const</span> bign &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (flag &amp;&amp; x.flag) &#123;</span><br><span class="line">            bign k = <span class="built_in">bign</span>();</span><br><span class="line">            k.len = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, g = <span class="number">0</span>; g || i &lt;= len || i &lt;= x.len; i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> p = num[i] + x.num[i] + g;</span><br><span class="line">                k.num[++k.len] = p % MOD;</span><br><span class="line">                g = p / MOD;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag &amp;&amp; !x.flag)<span class="keyword">return</span> *<span class="keyword">this</span> - (-x);</span><br><span class="line">        <span class="keyword">if</span> (!flag &amp;&amp; x.flag)<span class="keyword">return</span> x - (-*<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">return</span> -((-x) + (-*<span class="keyword">this</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>+(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> + <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>+=(<span class="keyword">const</span> bign &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> + x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>+=(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> += <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>+=(<span class="keyword">const</span> ll &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> += <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>++() &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>++(<span class="keyword">int</span>) &#123;</span><br><span class="line">        bign k = *<span class="keyword">this</span>;</span><br><span class="line">        *<span class="keyword">this</span> += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>-(<span class="keyword">const</span> bign &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (flag &amp;&amp; x.flag &amp;&amp; *<span class="keyword">this</span> &gt;= x) &#123;</span><br><span class="line">            bign k = <span class="built_in">bign</span>();</span><br><span class="line">            k.len = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, g = <span class="number">0</span>; g || i &lt;= len; i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> p = num[i] - x.num[i] + g;</span><br><span class="line">                <span class="keyword">if</span> (p &lt; <span class="number">0</span>)g = <span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">else</span> g = <span class="number">0</span>;</span><br><span class="line">                k.num[++k.len] = (p % MOD + MOD) % MOD;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">remove</span>(k);</span><br><span class="line">            <span class="keyword">return</span> k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag &amp;&amp; x.flag)<span class="keyword">return</span> -(x - *<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">if</span> (flag &amp;&amp; !x.flag)<span class="keyword">return</span> *<span class="keyword">this</span> + (-x);</span><br><span class="line">        <span class="keyword">if</span> (!flag &amp;&amp; x.flag)<span class="keyword">return</span> -((-*<span class="keyword">this</span>) + x);</span><br><span class="line">        <span class="keyword">return</span> (-x) - (-*<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>-=(<span class="keyword">const</span> bign &amp;x) &#123;</span><br><span class="line">        *<span class="keyword">this</span> = *<span class="keyword">this</span> - x;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>-=(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> -= <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>-=(<span class="keyword">const</span> ll &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> -= <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>--() &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> -= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>--(<span class="keyword">int</span>) &#123;</span><br><span class="line">        bign k = *<span class="keyword">this</span>;</span><br><span class="line">        *<span class="keyword">this</span> -= <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>*(<span class="keyword">const</span> bign &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        bign k;</span><br><span class="line">        k.flag = (flag == x.flag);</span><br><span class="line">        k.len = len + x.len + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= x.len; j++) &#123;</span><br><span class="line">                k.num[i + j - <span class="number">1</span>] += num[i] * x.num[j];</span><br><span class="line">                k.num[i + j] += k.num[i + j - <span class="number">1</span>] / MOD;</span><br><span class="line">                k.num[i + j - <span class="number">1</span>] %= MOD;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">remove</span>(k);</span><br><span class="line">        <span class="keyword">return</span> k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        bign k = <span class="built_in">bign</span>();</span><br><span class="line">        k.len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> t[maxn];</span><br><span class="line">        <span class="built_in">memset</span>(t, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(t));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; i++)t[i] = num[i] * x;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, g = <span class="number">0</span>; i &lt;= len || g; i++) &#123;</span><br><span class="line">            k.num[++k.len] = (g + t[i]) % MOD;</span><br><span class="line">            g = (g + t[i]) / MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>*(<span class="keyword">const</span> ll &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        bign k = <span class="built_in">bign</span>();</span><br><span class="line">        k.len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> t[maxn];</span><br><span class="line">        <span class="built_in">memset</span>(t, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(t));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len; i++)t[i] = num[i] * x;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, g = <span class="number">0</span>; i &lt;= len || g; i++) &#123;</span><br><span class="line">            k.num[++k.len] = (g + t[i]) % MOD;</span><br><span class="line">            g = (g + t[i]) / MOD;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>*=(<span class="keyword">const</span> bign &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> * x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>*=(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> * x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>*=(<span class="keyword">const</span> ll &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> * x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>/(<span class="keyword">const</span> bign &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">0</span>)<span class="keyword">return</span> <span class="built_in">bign</span>();</span><br><span class="line">        bign k = <span class="built_in">bign</span>(), a = <span class="built_in">bign</span>();</span><br><span class="line">        k.flag = (flag == x.flag);</span><br><span class="line">        k.len = len;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = len; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">            a = a * MOD + num[i];</span><br><span class="line">            <span class="keyword">while</span> (a &gt;= <span class="built_in">abs</span>(x)) &#123;</span><br><span class="line">                a -= <span class="built_in">abs</span>(x);</span><br><span class="line">                k.num[i]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        if ((flag != x.flag) &amp; a != 0)</span></span><br><span class="line"><span class="comment">//            k--;  //È¡Ä£</span></span><br><span class="line">        <span class="built_in">remove</span>(k);</span><br><span class="line">        <span class="keyword">return</span> k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">0</span>)<span class="keyword">return</span> <span class="built_in">bign</span>();</span><br><span class="line">        bign k = <span class="built_in">bign</span>();</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">        k.flag = (flag == (x &gt;= <span class="number">0</span>));</span><br><span class="line">        k.len = len;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = len; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">            a = a * MOD + num[i];</span><br><span class="line">            k.num[i] = a / x;</span><br><span class="line">            a %= x;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        if ((flag != x.flag) &amp; a != 0)</span></span><br><span class="line"><span class="comment">//            k--;  //È¡Ä£</span></span><br><span class="line">        <span class="built_in">remove</span>(k);</span><br><span class="line">        <span class="keyword">return</span> k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>/(<span class="keyword">const</span> ll &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">0</span>)<span class="keyword">return</span> <span class="built_in">bign</span>();</span><br><span class="line">        bign k = <span class="built_in">bign</span>();</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">        k.flag = (flag == (x &gt;= <span class="number">0</span>));</span><br><span class="line">        k.len = len;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = len; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">            a = a * MOD + num[i];</span><br><span class="line">            k.num[i] = a / x;</span><br><span class="line">            a %= x;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        if ((flag != x.flag) &amp; a != 0)</span></span><br><span class="line"><span class="comment">//            k--;  //È¡Ä£</span></span><br><span class="line">        <span class="built_in">remove</span>(k);</span><br><span class="line">        <span class="keyword">return</span> k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>/=(<span class="keyword">const</span> bign &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> / x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>/=(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> / x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>/=(<span class="keyword">const</span> ll &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> / x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>%(<span class="keyword">const</span> bign &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">0</span>)<span class="keyword">return</span> <span class="built_in">bign</span>();</span><br><span class="line">        bign a = <span class="built_in">bign</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = len; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">            a = a * MOD + num[i];</span><br><span class="line">            <span class="keyword">while</span> (a &gt;= <span class="built_in">abs</span>(x))a -= <span class="built_in">abs</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        if (a == 0)return a;</span></span><br><span class="line"><span class="comment">//        if (flag &amp;&amp; x.flag)return a;</span></span><br><span class="line"><span class="comment">//        if (flag &amp;&amp; !x.flag)return a + x;</span></span><br><span class="line"><span class="comment">//        if (!flag &amp;&amp; x.flag)return x - a;</span></span><br><span class="line"><span class="comment">//        return -a;//È¡Ä£</span></span><br><span class="line">        <span class="keyword">if</span> (flag)<span class="keyword">return</span> a;</span><br><span class="line">        <span class="keyword">return</span> -a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>%(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> % <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>%(<span class="keyword">const</span> ll &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> % <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>%=(<span class="keyword">const</span> bign &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> % x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>%=(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> %= <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    bign <span class="keyword">operator</span>%=(<span class="keyword">const</span> ll &amp;x) &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> %= <span class="built_in">bign</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> bign <span class="title">pow</span><span class="params">(<span class="keyword">const</span> bign &amp;x, <span class="keyword">const</span> bign &amp;y)</span> </span>&#123;</span><br><span class="line">        bign ans = <span class="number">1</span>, cnt = x, w = y;</span><br><span class="line">        <span class="keyword">while</span> (w &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (w % <span class="number">2</span> == <span class="number">1</span>)ans *= cnt;</span><br><span class="line">            cnt *= cnt;</span><br><span class="line">            w /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> bign <span class="title">pow</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x, <span class="keyword">const</span> bign &amp;y)</span> </span>&#123;</span><br><span class="line">        bign ans = <span class="number">1</span>, cnt = x, w = y;</span><br><span class="line">        <span class="keyword">while</span> (w &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (w % <span class="number">2</span> == <span class="number">1</span>)ans *= cnt;</span><br><span class="line">            cnt *= cnt;</span><br><span class="line">            w /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> bign <span class="title">pow</span><span class="params">(<span class="keyword">const</span> bign &amp;x, <span class="keyword">const</span> <span class="keyword">int</span> &amp;y)</span> </span>&#123;</span><br><span class="line">        bign ans = <span class="number">1</span>, cnt = x;</span><br><span class="line">        <span class="keyword">int</span> w = y;</span><br><span class="line">        <span class="keyword">while</span> (w) &#123;</span><br><span class="line">            <span class="keyword">if</span> (w &amp; <span class="number">1</span>)ans *= cnt;</span><br><span class="line">            cnt *= cnt;</span><br><span class="line">            w &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> bign <span class="title">powmod</span><span class="params">(<span class="keyword">const</span> bign &amp;x, <span class="keyword">const</span> bign &amp;y, <span class="keyword">const</span> bign &amp;z)</span> </span>&#123;</span><br><span class="line">        bign ans = <span class="number">1</span>, cnt = x, w = y;</span><br><span class="line">        <span class="keyword">while</span> (w &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (w % <span class="number">2</span> == <span class="number">1</span>)ans = ans * cnt % z;</span><br><span class="line">            cnt = cnt * cnt % z;</span><br><span class="line">            w /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> bign <span class="title">powmod</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x, <span class="keyword">const</span> bign &amp;y, <span class="keyword">const</span> bign &amp;z)</span> </span>&#123;</span><br><span class="line">        bign ans = <span class="number">1</span>, cnt = x, w = y;</span><br><span class="line">        <span class="keyword">while</span> (w &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (w % <span class="number">2</span> == <span class="number">1</span>)ans = ans * cnt % z;</span><br><span class="line">            cnt = cnt * cnt % z;</span><br><span class="line">            w /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> bign <span class="title">powmod</span><span class="params">(<span class="keyword">const</span> bign &amp;x, <span class="keyword">const</span> <span class="keyword">int</span> &amp;y, <span class="keyword">const</span> bign &amp;z)</span> </span>&#123;</span><br><span class="line">        bign ans = <span class="number">1</span>, cnt = x;</span><br><span class="line">        <span class="keyword">int</span> w = y;</span><br><span class="line">        <span class="keyword">while</span> (w) &#123;</span><br><span class="line">            <span class="keyword">if</span> (w &amp; <span class="number">1</span>)ans = ans * cnt % z;</span><br><span class="line">            cnt = cnt * cnt % z;</span><br><span class="line">            w &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> bign <span class="title">powmod</span><span class="params">(<span class="keyword">const</span> bign &amp;x, <span class="keyword">const</span> bign &amp;y, <span class="keyword">const</span> <span class="keyword">int</span> &amp;z)</span> </span>&#123;</span><br><span class="line">        bign ans = <span class="number">1</span>, cnt = x, w = y;</span><br><span class="line">        <span class="keyword">while</span> (w &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (w % <span class="number">2</span> == <span class="number">1</span>)ans = ans * cnt % z;</span><br><span class="line">            cnt = cnt * cnt % z;</span><br><span class="line">            w /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> bign <span class="title">powmod</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp;x, <span class="keyword">const</span> bign &amp;y, <span class="keyword">const</span> <span class="keyword">int</span> &amp;z)</span> </span>&#123;</span><br><span class="line">        bign ans = <span class="number">1</span>, cnt = x, w = y;</span><br><span class="line">        <span class="keyword">while</span> (w &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (w % <span class="number">2</span> == <span class="number">1</span>)ans = ans * cnt % z;</span><br><span class="line">            cnt = cnt * cnt % z;</span><br><span class="line">            w /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> bign <span class="title">powmod</span><span class="params">(<span class="keyword">const</span> bign &amp;x, <span class="keyword">const</span> <span class="keyword">int</span> &amp;y, <span class="keyword">const</span> <span class="keyword">int</span> &amp;z)</span> </span>&#123;</span><br><span class="line">        bign ans = <span class="number">1</span>, cnt = x;</span><br><span class="line">        <span class="keyword">int</span> w = y;</span><br><span class="line">        <span class="keyword">while</span> (w) &#123;</span><br><span class="line">            <span class="keyword">if</span> (w &amp; <span class="number">1</span>)ans = ans * cnt % z;</span><br><span class="line">            cnt = cnt * cnt % z;</span><br><span class="line">            w &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> bign <span class="title">max</span><span class="params">(<span class="keyword">const</span> bign &amp;x, <span class="keyword">const</span> bign &amp;y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x &gt; y ? x : y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> bign <span class="title">min</span><span class="params">(<span class="keyword">const</span> bign &amp;x, <span class="keyword">const</span> bign &amp;y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x &lt; y ? x : y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    bign a, b;</span><br><span class="line"></span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    cout &lt;&lt; a + b &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; a - b &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; a * b &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; a / b &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; a % b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>你竟然看完了！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 封装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kmp</title>
      <link href="/2021/06/06/Kmp/index/"/>
      <url>/2021/06/06/Kmp/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3375-【模板】KMP字符串匹配"><a href="https://www.luogu.com.cn/problem/P3375">P3375 【模板】KMP字符串匹配</a></h2>wrd$$：$$txt$$：从 $$1$$ 开始。$$lwrd$$：$$ltxt$$：闭区间，$$[1, l]$$。$$sec_i$$：以 $$i$$ 为左端点的子串是单词串。$$fail_j = k$$：文本串 $$[1, k]$$ 的的后缀和整个文本串前缀最长公共部分的长度。如果单词串上遍历到 $$j + 1$$ 时（还未确定单词串位置 $$j + 1$$ 是否能匹配成功），$$fail_j = k$$ 代表保证单词串 $$[1, k]$$。一定是已匹配成功的。也就是说应该判断 $$word_{j + 1}$$ 与 $$txt_i$$ 是否相等，而非 $$word_j$$，因为$$word_j$$ 之前已经匹配成功了。![](Kmp.png)<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> std::ios;</span><br><span class="line"><span class="keyword">using</span> std::cin;</span><br><span class="line"><span class="keyword">using</span> std::cout;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXlwrd = <span class="number">1e6</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXltxt = <span class="number">1e6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> txt[MAXltxt + <span class="number">10</span>], wrd[MAXlwrd + <span class="number">10</span>]; <span class="keyword">int</span> ltxt, lwrd;</span><br><span class="line"><span class="keyword">int</span> fail[MAXlwrd + <span class="number">10</span>]; <span class="keyword">bool</span> isbegin[MAXltxt + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EvaFail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">fail[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= lwrd; ++i) &#123;</span><br><span class="line"><span class="keyword">while</span> (j &amp;&amp; (wrd[j + <span class="number">1</span>] != wrd[i] || j == lwrd)) j = fail[j];</span><br><span class="line"><span class="keyword">if</span> (wrd[j + <span class="number">1</span>] == wrd[i]) ++j;</span><br><span class="line">fail[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= ltxt; ++i) &#123;</span><br><span class="line"><span class="keyword">while</span> (j &amp;&amp; (wrd[j + <span class="number">1</span>] != txt[i] || j == lwrd)) j = fail[j];</span><br><span class="line"><span class="keyword">if</span> (wrd[j + <span class="number">1</span>] == txt[i]) ++j;</span><br><span class="line"><span class="keyword">if</span> (j == lwrd) isbegin[i - lwrd + <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">cout.<span class="built_in">tie</span>(<span class="literal">nullptr</span>);</span><br><span class="line">cin &gt;&gt; (txt + <span class="number">1</span>) &gt;&gt; (wrd + <span class="number">1</span>);</span><br><span class="line">ltxt = <span class="built_in">strlen</span>(txt + <span class="number">1</span>); lwrd = <span class="built_in">strlen</span>(wrd + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">EvaFail</span>();</span><br><span class="line"><span class="built_in">Solve</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= ltxt; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (isbegin[i]) &#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lwrd; ++i) &#123;</span><br><span class="line">cout &lt;&lt; fail[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>St表</title>
      <link href="/2021/06/06/St%E8%A1%A8/index/"/>
      <url>/2021/06/06/St%E8%A1%A8/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3865-【模板】ST-表"><a href="https://www.luogu.com.cn/problem/P3865">P3865 【模板】ST 表</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXlog2n = <span class="number">17</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt;<span class="string">&#x27;9&#x27;</span>);<span class="function"><span class="keyword">register</span> T <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;<span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;x = (x &lt;&lt; <span class="number">1</span>) + (x &lt;&lt; <span class="number">3</span>) + (c ^ <span class="number">48</span>);&#125;a = x;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, a[MAXn + <span class="number">10</span>], power[MAXlog2n + <span class="number">10</span>], st[MAXn + <span class="number">10</span>][MAXlog2n + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">double</span> ln2;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BuildSt</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">st[i][<span class="number">0</span>] = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> maxidx = <span class="built_in">log</span>(n) / ln2;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> idx = <span class="number">1</span>; idx &lt;= maxidx; ++idx) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> l = n - power[idx] + <span class="number">1</span>; l; --l) &#123;</span><br><span class="line">st[l][idx] = <span class="built_in">max</span>(st[l][idx - <span class="number">1</span>], st[l + power[idx - <span class="number">1</span>]][idx - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EvaMax</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> idx = <span class="built_in">log</span>(r - l + <span class="number">1</span>) / ln2;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">max</span>(st[l][idx], st[r - power[idx] + <span class="number">1</span>][idx]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ln2 = <span class="built_in">log</span>(<span class="number">2</span>);</span><br><span class="line">power[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= MAXlog2n; ++i) &#123;</span><br><span class="line">power[i] = power[i - <span class="number">1</span>] &lt;&lt; <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">read</span>(n), <span class="built_in">read</span>(m);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">BuildSt</span>();</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>, l, r; i &lt;= m; ++i) &#123;</span><br><span class="line"><span class="built_in">read</span>(l), <span class="built_in">read</span>(r);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">EvaMax</span>(l, r));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>堆排序</title>
      <link href="/2021/06/06/%E5%A0%86%E6%8E%92%E5%BA%8F/index/"/>
      <url>/2021/06/06/%E5%A0%86%E6%8E%92%E5%BA%8F/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1177-【模板】快速排序"><a href="https://www.luogu.com.cn/problem/P1177">P1177 【模板】快速排序</a></h2><h4 id="可以用快排的板测">可以用快排的板测</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">register</span> <span class="keyword">int</span> <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> heap[MAXn+<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> heapn;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">up</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> f = p / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (p &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (heap[p] &lt; heap[f]) &#123;</span><br><span class="line">            <span class="built_in">swap</span>(heap[p], heap[f]);</span><br><span class="line">            p = f;</span><br><span class="line">            f /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> s = p * <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (s &lt;= heapn) &#123;</span><br><span class="line">        <span class="keyword">if</span> (heap[s] &gt; heap[s + <span class="number">1</span>] &amp;&amp; s &lt; heapn) &#123;</span><br><span class="line">            s++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (heap[s] &lt; heap[p]) &#123;</span><br><span class="line">            <span class="built_in">swap</span>(heap[s], heap[p]);</span><br><span class="line">            p = s;</span><br><span class="line">            s *= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    heap[++heapn] = x;</span><br><span class="line">    <span class="built_in">up</span>(heapn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    heap[p] = heap[heapn--];</span><br><span class="line">    <span class="built_in">up</span>(p);</span><br><span class="line">    <span class="built_in">down</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pop_root</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    heap[<span class="number">1</span>] = heap[heapn--];</span><br><span class="line">    <span class="built_in">down</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_root</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> heap[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">insert</span>(<span class="built_in">read</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, <span class="built_in">get_root</span>());</span><br><span class="line"><span class="built_in">pop_root</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>归并排序</title>
      <link href="/2021/06/06/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/index/"/>
      <url>/2021/06/06/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1177-【模板】快速排序"><a href="https://www.luogu.com.cn/problem/P1177">P1177 【模板】快速排序</a></h2><h4 id="可以用快排的板测">可以用快排的板测</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c &gt; <span class="string">&#x27;9&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">register</span> <span class="keyword">int</span> <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x=x * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> tmp[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (r - l &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = l + (r - l &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">merge</span>(l, mid);</span><br><span class="line">    <span class="built_in">merge</span>(mid, r);</span><br><span class="line">    <span class="keyword">int</span> p = l, q = mid, s = l;</span><br><span class="line">    <span class="keyword">while</span> (s &lt; r) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p &gt;= mid || (q &lt; r &amp;&amp; a[p] &gt; a[q])) &#123;</span><br><span class="line">            tmp[s++] = a[q++];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            tmp[s++] = a[p++];          </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt; r; i++) &#123;</span><br><span class="line">        a[i] = tmp[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        a[i] = <span class="built_in">read</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">merge</span>(<span class="number">0</span>, n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>归并法求逆序对数</title>
      <link href="/2021/06/06/%E5%BD%92%E5%B9%B6%E6%B3%95%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9%E6%95%B0/index/"/>
      <url>/2021/06/06/%E5%BD%92%E5%B9%B6%E6%B3%95%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9%E6%95%B0/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1908-逆序对"><a href="https://www.luogu.com.cn/problem/P1908">P1908 逆序对</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Inverted Sequence Numbers</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//different from only Merge Sort:&quot;//Diff&quot; </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn=<span class="number">500000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">while</span>(c=<span class="built_in">getchar</span>(),c&lt;<span class="string">&#x27;0&#x27;</span>||c&gt;<span class="string">&#x27;9&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">register</span> <span class="keyword">int</span> <span class="title">x</span><span class="params">(c-<span class="string">&#x27;0&#x27;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">while</span>(c=<span class="built_in">getchar</span>(),c&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[MAXn+<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> tmp[MAXn+<span class="number">10</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans;<span class="comment">//Diff</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> ll, <span class="keyword">int</span> rr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (rr - ll &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = ll + (rr - ll &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">merge</span>(ll, mid);</span><br><span class="line">    <span class="built_in">merge</span>(mid, rr);</span><br><span class="line">    <span class="keyword">int</span> p = ll, q = mid, s = ll;</span><br><span class="line">    <span class="keyword">while</span> (s &lt; rr) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p &gt;= mid || (q &lt; rr &amp;&amp; a[p] &gt; a[q])) &#123;</span><br><span class="line">            tmp[s++] = a[q++];</span><br><span class="line">            ans += mid - p;<span class="comment">//Diff</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            tmp[s++] = a[p++];          </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = ll; i &lt; rr; i++) &#123;</span><br><span class="line">        a[i] = tmp[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        a[i] = <span class="built_in">read</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">merge</span>(<span class="number">0</span>, n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, ans);<span class="comment">//Diff</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树形dp</title>
      <link href="/2021/06/06/%E6%A0%91%E5%BD%A2dp/index/"/>
      <url>/2021/06/06/%E6%A0%91%E5%BD%A2dp/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P1352-没有上司的舞会"><a href="https://www.luogu.com.cn/problem/P1352">P1352 没有上司的舞会</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">6000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> NEGINF = <span class="number">0xc0c0c0c0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> d[MAXn + <span class="number">10</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> v[MAXn + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> edgenum;</span><br><span class="line"><span class="keyword">int</span> head[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> next[MAXn + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> to[MAXn + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); (c &lt; <span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>) &amp;&amp; c != <span class="string">&#x27;-&#x27;</span>; c = <span class="built_in">getchar</span>());</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">bool</span> f = c == <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line"><span class="keyword">register</span> <span class="keyword">int</span> s = f ? <span class="number">0</span> : c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (c = <span class="built_in">getchar</span>(); c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>; c = <span class="built_in">getchar</span>())s = (s &lt;&lt; <span class="number">3</span>) + (s &lt;&lt; <span class="number">1</span>) + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> f ? -s : s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">first</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">0xc0c0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(d));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert_edge</span><span class="params">(<span class="keyword">int</span> from, <span class="keyword">int</span> too)</span></span>&#123;</span><br><span class="line">next[++edgenum] = head[from];</span><br><span class="line">head[from] = edgenum;</span><br><span class="line"></span><br><span class="line">to[edgenum] = too;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put_in</span><span class="params">()</span></span>&#123;</span><br><span class="line">n = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">v[i] = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="keyword">int</span> to = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">int</span> from = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">insert_edge</span>(from, to);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> nodeid, <span class="keyword">bool</span> have_root)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (d[nodeid][have_root] != NEGINF)</span><br><span class="line"><span class="keyword">return</span> d[nodeid][have_root];</span><br><span class="line"><span class="keyword">int</span>&amp; ans = d[nodeid][have_root] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (!have_root)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = head[nodeid]; i; i = next[i])</span><br><span class="line">ans += <span class="built_in">max</span>(<span class="built_in">dp</span>(to[i], <span class="number">0</span>), <span class="built_in">dp</span>(to[i], <span class="number">1</span>));</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">ans += v[nodeid];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = head[nodeid]; i; i = next[i])</span><br><span class="line">ans += <span class="built_in">dp</span>(to[i], <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find_root</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">bool</span> have_in_deg[MAXn + <span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= edgenum; i++)have_in_deg[to[i]] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (!have_in_deg[i])</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">first</span>();</span><br><span class="line"><span class="built_in">put_in</span>();</span><br><span class="line"><span class="keyword">int</span> rootid = <span class="built_in">find_root</span>();</span><br><span class="line">cout &lt;&lt; <span class="built_in">max</span>(<span class="built_in">dp</span>(rootid, <span class="number">0</span>), <span class="built_in">dp</span>(rootid, <span class="number">1</span>)) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P2015-二叉苹果树"><a href="https://www.luogu.com.cn/problem/P2015">P2015 二叉苹果树</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXq = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, q;</span><br><span class="line"><span class="keyword">int</span> d[MAXn + <span class="number">10</span>][MAXq + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> to[MAXn + <span class="number">10</span>][<span class="number">2</span>];<span class="comment">//ÏÂ±ê1ÎªfromµÄid</span></span><br><span class="line"><span class="keyword">int</span> edgew[MAXn + <span class="number">10</span>][<span class="number">2</span>];<span class="comment">//ÏÂ±ê1ÎªfromµÄid</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &lt; <span class="string">&#x27;0&#x27;</span> || c&gt;<span class="string">&#x27;9&#x27;</span>);</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">x</span><span class="params">(c - <span class="string">&#x27;0&#x27;</span>)</span></span>;</span><br><span class="line"><span class="keyword">while</span> (c = <span class="built_in">getchar</span>(), c &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;9&#x27;</span>) x = x * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">-1</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(d));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert_edge</span><span class="params">(<span class="keyword">int</span> nodeid1, <span class="keyword">int</span> nodeid2, <span class="keyword">int</span> edge_w)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!to[nodeid1][<span class="number">0</span>])&#123;</span><br><span class="line">to[nodeid1][<span class="number">0</span>] = nodeid2;</span><br><span class="line">edgew[nodeid1][<span class="number">0</span>] = edge_w;</span><br><span class="line">to[nodeid1][<span class="number">0</span>] = nodeid2;</span><br><span class="line">edgew[nodeid1][<span class="number">0</span>] = edge_w;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">to[nodeid1][<span class="number">1</span>] = nodeid2;</span><br><span class="line">edgew[nodeid1][<span class="number">1</span>] = edge_w;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> nodeid, <span class="keyword">int</span> keepnum)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (d[nodeid][keepnum] != <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">return</span> d[nodeid][keepnum];</span><br><span class="line"><span class="keyword">int</span>&amp; ans = d[nodeid][keepnum] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (!keepnum)</span><br><span class="line"><span class="keyword">return</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (!to[nodeid][<span class="number">0</span>])</span><br><span class="line"><span class="keyword">return</span> ans = -INF;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> knuml = <span class="number">0</span>; knuml &lt;= keepnum; knuml++)&#123;</span><br><span class="line"><span class="keyword">int</span> knumr = keepnum - knuml;</span><br><span class="line"><span class="keyword">int</span> tmp_ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (knuml)</span><br><span class="line">tmp_ans += edgew[nodeid][<span class="number">0</span>] + <span class="built_in">dp</span>(to[nodeid][<span class="number">0</span>], knuml - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (knumr)</span><br><span class="line">tmp_ans += edgew[nodeid][<span class="number">1</span>] + <span class="built_in">dp</span>(to[nodeid][<span class="number">1</span>], knumr - <span class="number">1</span>);</span><br><span class="line">ans = <span class="built_in">max</span>(ans, tmp_ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">Init</span>();</span><br><span class="line">n = <span class="built_in">read</span>();</span><br><span class="line">q = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line"><span class="keyword">int</span> nodeid1 = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">int</span> nodeid2 = <span class="built_in">read</span>();</span><br><span class="line"><span class="keyword">int</span> edgew = <span class="built_in">read</span>();</span><br><span class="line"><span class="built_in">insert_edge</span>(nodeid1, nodeid2, edgew);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dp</span>(<span class="number">1</span>, q);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> DP </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高斯消元</title>
      <link href="/2021/06/06/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/index/"/>
      <url>/2021/06/06/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P2455-SDOI2006-线性方程组"><a href="https://www.luogu.com.cn/problem/P2455">P2455 [SDOI2006]线性方程组</a></h2><p>高斯消元的模板我推荐这一道，而不是 <a href="https://www.luogu.com.cn/problem/P3389">Luogu P3389</a>。原因是 P3389 数据确实太水了。我在 P3389 上 AC 的代码在 P2455 只有 20pts。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXn = <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> a[MAXn + <span class="number">10</span>][MAXn + <span class="number">1</span> + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n + <span class="number">1</span>; ++j) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> row = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> col = <span class="number">1</span>; col &lt;= n; ++col) &#123;</span><br><span class="line"><span class="keyword">int</span> maxer = row;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = row + <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">abs</span>(a[maxer][col]) &lt; <span class="built_in">abs</span>(a[i][col])) &#123;</span><br><span class="line">maxer = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!a[maxer][col]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n + <span class="number">1</span>; ++j) &#123;</span><br><span class="line"><span class="built_in">swap</span>(a[row][j], a[maxer][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == row) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">double</span> solve = a[i][col] / a[row][col];</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = col; j &lt;= n + <span class="number">1</span>; ++j) &#123;</span><br><span class="line">a[i][j] -= a[row][j] * solve;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">++row;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (row &lt;= n) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = row; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (a[i][n + <span class="number">1</span>]) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in"><span class="keyword">int</span></span>(a[i][n + <span class="number">1</span>] / a[i][i] * <span class="number">100</span>) == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;x%d=0\n&quot;</span>, i);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;x%d=%.2lf\n&quot;</span>, i, a[i][n + <span class="number">1</span>] / a[i][i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最短路</title>
      <link href="/2021/06/05/%E6%9C%80%E7%9F%AD%E8%B7%AF/index/"/>
      <url>/2021/06/05/%E6%9C%80%E7%9F%AD%E8%B7%AF/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3371-【模板】单源最短路径（弱化版）"><a href="https://www.luogu.com.cn/problem/P3371">P3371 【模板】单源最短路径（弱化版）</a></h2><h2 id="P4779-【模板】单源最短路径（标准版）"><a href="https://www.luogu.com.cn/problem/P4779">P4779 【模板】单源最短路径（标准版）</a></h2><h4 id="1-Dijkstra">1. Dijkstra</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAXn + <span class="number">10</span>]; <span class="keyword">int</span> dis[MAXn + <span class="number">10</span>];</span><br><span class="line">priority_queue&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> root)</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(dis, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line">dis[root] = <span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(<span class="number">0</span>, root));</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line"><span class="keyword">int</span> cur = q.<span class="built_in">top</span>().second; q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span> (vis[cur]) <span class="keyword">continue</span>;</span><br><span class="line">vis[cur] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (dis[to[i]] &gt; dis[cur] + wei[i]) &#123;</span><br><span class="line">dis[to[i]] = dis[cur] + wei[i];</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(-dis[to[i]], to[i]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Dijkstra</span>(root);</span><br></pre></td></tr></table></figure><h4 id="2-SPFA">2. SPFA</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> inque[MAXn + <span class="number">10</span>]; <span class="keyword">int</span> dis[MAXn + <span class="number">10</span>];</span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> root)</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(dis, <span class="number">0x3f</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(dis));</span><br><span class="line">dis[root] = <span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">push</span>(root); inque[root] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line"><span class="keyword">int</span> cur = q.<span class="built_in">front</span>(); q.<span class="built_in">pop</span>(); inque[cur] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = head[cur]; i; i = nex[i]) &#123;</span><br><span class="line"><span class="keyword">if</span> (dis[to[i]] &gt; dis[cur] + wei[i]) &#123;</span><br><span class="line">dis[to[i]] = dis[cur] + wei[i];</span><br><span class="line"><span class="keyword">if</span> (!inque[to[i]]) &#123;</span><br><span class="line">q.<span class="built_in">push</span>(to[i]); inque[to[i]] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">SPFA</span>(root);</span><br></pre></td></tr></table></figure><h4 id="3-Floyd">3. Floyd</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; ++k) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">            dis[i][j] = <span class="built_in">min</span>(dis[i][j], dis[i][k] + dis[k][j]);</span><br><span class="line">            <span class="comment">//传递闭包：con[i][j] |= con[i][k] &amp; con[k][j];</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>矩阵运算</title>
      <link href="/2021/06/03/%E7%9F%A9%E9%98%B5%E8%BF%90%E7%AE%97/index/"/>
      <url>/2021/06/03/%E7%9F%A9%E9%98%B5%E8%BF%90%E7%AE%97/index/</url>
      
        <content type="html"><![CDATA[<h2 id="P3390-【模板】矩阵快速幂"><a href="https://www.luogu.com.cn/problem/P3390">P3390 【模板】矩阵快速幂</a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Mat</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> mat[MAXmat][MAXmat];</span><br><span class="line"><span class="built_in">Mat</span>() &#123;</span><br><span class="line"><span class="built_in">memset</span>(mat, <span class="number">0</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(mat));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Mat</span>(<span class="keyword">int</span> a[MAXmat][MAXmat]) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAXmat; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">0</span>; j &lt; MAXmat; ++j) &#123;</span><br><span class="line">mat[i][j] = a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="keyword">operator</span>=(Mat x) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAXmat; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">0</span>; j &lt; MAXmat; ++j) &#123;</span><br><span class="line">mat[i][j] = x.mat[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> Mat <span class="keyword">operator</span>+(Mat x) &#123;</span><br><span class="line">Mat ans;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAXmat; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; MAXmat; ++j) &#123;</span><br><span class="line">ans.mat[i][j] = (mat[i][j] + x.mat[i][j]) % MOD;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> Mat <span class="keyword">operator</span>*(Mat x) &#123;</span><br><span class="line">Mat ans;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAXmat; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> k = <span class="number">0</span>; k &lt; MAXmat; ++k) &#123;</span><br><span class="line"><span class="keyword">int</span> a = mat[i][k];</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">0</span>; j &lt; MAXmat; ++j) &#123;</span><br><span class="line">ans.mat[i][j] = (a * x.mat[k][j] + ans.mat[i][j]) % MOD;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> Mat <span class="keyword">operator</span>^(<span class="keyword">int</span> x) &#123;</span><br><span class="line">Mat ans, base;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAXmat; ++i) &#123;</span><br><span class="line">ans.mat[i][i] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAXmat; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> j = <span class="number">0</span>; j &lt; MAXmat; ++j) &#123;</span><br><span class="line">base.mat[i][j] = mat[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (x) &#123;</span><br><span class="line"><span class="keyword">if</span> (x &amp; <span class="number">1</span>) &#123;</span><br><span class="line">ans = ans * base;</span><br><span class="line">&#125;</span><br><span class="line">base = base * base;</span><br><span class="line">x &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 信息竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 代码 </tag>
            
            <tag> 信息竞赛 </tag>
            
            <tag> OI </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数学 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
